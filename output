=====================================================================
Document 1: OLM (OMS Re-imagined)
=====================================================================
- Introduction:
This is confluence page converted to plain text.

keywords are: , documentation, miro

- Description
Documentation Guidelines

Product level : LucidChart

https://lucid.app/lucidchart/d39c6cbb-3a86-443d-8b92-c107a71c205e/edit?invitationId=inv_1fcf9add-4779-4f60-b2b4-661728416573&page=F-ILaH5R.W4B#

Pairing/Story Level : Miro 

https://miro.com/app/board/o9J_l0__F8Y=/

(For Collaboration / brainstrom / multiple approaches for pairs to work
on)

(Engg Miro working board)

Feature Level Work Flows : Miro

https://miro.com/app/board/uXjVOvSEEsE=/

e.g. shadow mode assign user flow, shadow mode in general, shadow mode
key mapping

Feature Level Notes: Confluence

1.  having Links to (1) and (3) 
2.  having findings or reference to legacy documentation
3.  Middleware details
4.  Contracts / API documentation, link to postman or swagger



=====================================================================
Document 2: OMS-1980 Analyze Checkout's Order Data
=====================================================================
- Introduction:
This is confluence page converted to plain text.

keywords are: , 00, integer, boolean, 0, xml, mapping, 1, eger, 57921567207500001, 2023, statuscode, 450, createdtmst, 30, 895, 19, kohlscash, extn, 11, dayofmonth, hourofday, 15, 32, profiledetails, 581, shipmentid, 620, haskcc, 20201119, 135445000, timestamp, 31566349290001, 2, taxableflagy, cartid, itemdata, lastupdatedtmst, billaddress, orderdata, kohlscashtable, orderline, linetaxes, personinfoshipto, orderdates, 3000000017481942, shipofferprice, 422, itemid, 180, apofpo, poboxaddr, expcheckoutind, addr1, postalcode, primelinenum, shippingcost, ispriceoverride, addressid, paymentdata, cardstatus, torrequired, dec, email, rewards, orde, 81781566440050001, checkout, extnlinereference1, reference1, reference2, addressline2, addressline3, countryus, customattributes, orderid, orderpricedetails, 5817, items, itemmetadata, slimfit, preferredaddress, expeditedcheckouteligible, itempriceid, payments

- Description
Table of Contents

Checkout Json→XML Conversion Code

1.  https://cicd-gerrit.kohls.com:8443/gerrit/#/admin/projects/kos/cnc-batch
    1.  Batch code ... probably not very useful to us
2.  https://cicd-gerrit.kohls.com:8443/gerrit/#/admin/projects/kos/cnc-services
    1.  Checkout code repo.
    2.  Relevant class with conversion code:
        1.  (module) kos-order
            1.  (module) kos-order-services 
                1.  com.kohls.order.util.transform.RepriceResponseConverter
3.  If you are having trouble downloading the repos, you can follow this
    guide which helped me (Luke):
    1.  https://medium.com/codex/git-authentication-on-macos-setting-up-ssh-to-connect-to-your-github-account-d7f5df029320

Examples

XML OrderNo 6001380111 Expand source

    <?xml version="1.0" encoding="UTF-8"?>
    <Order BillToID="" CustomerEMailID="IBbPSMXwS6QNr8fMPeZ37U6ccSfDkca8AxSqpxdf0eK2uQ==" DocumentType="0001"
           EnteredBy="12345678" EnterpriseCode="KOHLS.COM" OrderDate="2023-11-20T13:51:21-05:00" OrderNo="6001380111"
           CartId="57601538026860001" BuyerUserId="10017129292" EntryType="WEB">
        <HeaderCharges>
            <HeaderCharge ChargeAmount="8.95" ChargeCategory="Shipping" ChargeName="Shipping1" Reference="00-53186">
                <Extn ExtnLineReference="1"/>
            </HeaderCharge>
        </HeaderCharges>
        <HeaderTaxes>
            <HeaderTax ChargeCategory="ShippingTax" ChargeName="Shipping1" Tax="0.45" TaxName="shipping tax"
                       TaxPercentage="0.050279" TaxableFlag="Y"/>
        </HeaderTaxes>
        <OrderLines>
            <OrderLine CarrierServiceCode="Standard Ground" GiftFlag="N" GiftWrap="N" LineType="DSV" OrderedQty="1"
                       PackListType="" PrimeLineNo="1" ShipNode="" SubLineNo="1">
                <Extn ExtnCurrentItemStatus="20" ExtnDSVCost="" ExtnGiftFrom="" ExtnGiftTo="" ExtnGiftMessage=""
                      ExtnIsHazardous="N" ExtnLineGiftReceiptID="G" ExtnLineReference="1" ExtnShipAlone="" ExtnStoreId=""
                      ExtnTaxableAmount="34.99" ExtnActualTaxableAmount="34.99" ExtnWrapTogetherGroupCode=""
                      ExtnCommissionPerc="" ExtnDummySKUID="" ExtnItemClass="" ExtnProductType="" ExtnColorDesc="Black"
                      ExtnSizeDesc="" ExtnExtendedDesc="" ExtnWebID="979796" ExtnPriProductType=""
                      ExtnATGShipGrpId="89421542054810001" ExtnGiftRegistryID="" ExtnGiftRegistryType=""
                      ExtnGiftRegistryName=""/>
                <Item ItemID="92417909" ItemShortDesc="Journee Collection Oba Sandals" ProductClass="Good"
                      UnitOfMeasure="EACH" SKUInventoried="true" UPCCode="870250792570" TaxProductCode="61075"/>
                <LinePriceInfo IsPriceLocked="Y" ListPrice="34.99" RetailPrice="34.99" TaxableFlag="Y" UnitPrice="34.99"/>
                <LineCharges/>
                <LineTaxes>
                    <LineTax ChargeCategory="Tax" ChargeName="Tax" Reference1="" Reference2="" Reference3="" Tax="1.75"
                             TaxName="SALES_TAX" TaxPercentage="0.05" TaxableFlag="Y"/>
                </LineTaxes>
                <PersonInfoShipTo AddressLine1="123 Carroll St" AddressLine2="" AddressLine3="" City="Waukesha" Country="US"
                                  DayPhone="4082804655" FirstName="IBaXsjERWBbSOhohgDxYjnnw"
                                  LastName="IBYdeXkohViYoRfSW+kQR6TB" State="WI" TaxGeoCode="00" ZipCode="53186" EmailID="">
                    <Extn ExtnIsPOBox="N" ExtnIsMilitary="N"/>
                </PersonInfoShipTo>
                <OrderDates>
                    <OrderDate CommittedDate="2023-12-04T01:04:07-05:00" DateTypeId="KOHLS_SHIP_DATE"
                               ExpectedDate="2023-11-23T01:04:07-05:00" RequestedDate="2023-12-04T01:04:07-05:00"/>
                </OrderDates>
                <CustomAttributes/>
            </OrderLine>
            <OrderLine CarrierServiceCode="Standard Ground" GiftFlag="N" GiftWrap="N" LineType="" OrderedQty="1"
                       PackListType="" PrimeLineNo="2" ShipNode="" SubLineNo="1">
                <Extn ExtnCurrentItemStatus="20" ExtnDSVCost="" ExtnGiftFrom="" ExtnGiftTo="" ExtnGiftMessage=""
                      ExtnIsHazardous="N" ExtnLineGiftReceiptID="G" ExtnLineReference="1" ExtnShipAlone="" ExtnStoreId=""
                      ExtnTaxableAmount="29.99" ExtnActualTaxableAmount="29.99" ExtnWrapTogetherGroupCode=""
                      ExtnCommissionPerc="" ExtnDummySKUID="" ExtnItemClass="" ExtnProductType="" ExtnColorDesc="Multi/None"
                      ExtnSizeDesc="" ExtnExtendedDesc="" ExtnWebID="1010610" ExtnPriProductType=""
                      ExtnATGShipGrpId="89421542054810001" ExtnGiftRegistryID="" ExtnGiftRegistryType=""
                      ExtnGiftRegistryName=""/>
                <Item ItemID="92526137" ItemShortDesc="OXO Good Grips Salt Grinder" ProductClass="Good" UnitOfMeasure="EACH"
                      SKUInventoried="true" UPCCode="" TaxProductCode="76800"/>
                <LinePriceInfo IsPriceLocked="Y" ListPrice="29.99" RetailPrice="29.99" TaxableFlag="Y" UnitPrice="29.99"/>
                <LineCharges/>
                <LineTaxes>
                    <LineTax ChargeCategory="Tax" ChargeName="Tax" Reference1="" Reference2="" Reference3="" Tax="1.5"
                             TaxName="SALES_TAX" TaxPercentage="0.05" TaxableFlag="Y"/>
                </LineTaxes>
                <PersonInfoShipTo AddressLine1="123 Carroll St" AddressLine2="" AddressLine3="" City="Waukesha" Country="US"
                                  DayPhone="4082804655" FirstName="IBaXsjERWBbSOhohgDxYjnnw"
                                  LastName="IBYdeXkohViYoRfSW+kQR6TB" State="WI" TaxGeoCode="00" ZipCode="53186" EmailID="">
                    <Extn ExtnIsPOBox="N" ExtnIsMilitary="N"/>
                </PersonInfoShipTo>
                <OrderDates>
                    <OrderDate CommittedDate="2023-12-04T01:04:07-05:00" DateTypeId="KOHLS_SHIP_DATE"
                               ExpectedDate="2023-11-23T01:04:07-05:00" RequestedDate="2023-12-04T01:04:07-05:00"/>
                </OrderDates>
                <CustomAttributes/>
            </OrderLine>
        </OrderLines>
        <PersonInfoBillTo AddressLine1="3020 Threecastles Way" AddressLine2="" AddressLine3="" City="Dublin" Country="US"
                          DayPhone="1231231234" FirstName="IBYg8BLuqekIXJ2qpuG5jU43" LastName="IBYg8BLuqekIXJ2qpuG5jU43"
                          State="CA" ZipCode="IBYOXQvHuWnNVzGp08P15llZ"/>
        <PaymentMethods>
            <PaymentMethod PaymentType="KPP" PaymentReference1="10000000000000000004"
                           PaymentReference2="pi_ProETeRzRaUlajRMCtsRxt63KDgSDw" MaxChargeLimit="77.63"
                           CreditCardType="PAYPAL" UnlimitedCharges="N">
                <PaymentDetailsList>
                    <PaymentDetails AuthAmount="77.63" AuthCode="" AuthReturnCode="" AuthReturnFlag="" AuthReturnMessage=""
                                    AuthTime="" AuthorizationExpirationDate=""
                                    AuthorizationID="pi_ProETeRzRaUlajRMCtsRxt63KDgSDw" CVVAuthCode="" ChargeSequence=""
                                    ChargeType="AUTHORIZATION" PaymentType="KPP" HoldAgainstBook="Y" ProcessedAmount="77.63"
                                    Reference1="" Reference2="" RequestAmount="77.63" RequestId="89421542054810001"/>
                </PaymentDetailsList>
            </PaymentMethod>
        </PaymentMethods>
        <Extn ExtnVersion="1.3">
            <KohlsOrderKCDetailsList>
                <KohlsOrderKCDetails IsLoyaltyPilotCust="N" LKCAmountKCC="" LKCAmountNonKCC="" KCCouponNo=""
                                     KCCouponEventID="62489" KCEventEarnAmount="10.0" KCQualifyingAmount="64.98"
                                     KCTransAmountActivateTol="10.0" KCCouponAlgorithm=""/>
            </KohlsOrderKCDetailsList>
            <KOHLSCashTableList/>
        </Extn>
        <CustomAttributes OriginatorID="66.232.236.102" KohlsRewardsEarned="0.0"/>
    </Order>

Json OrderId 6001380492 Expand source

    {
      "orderId": "6001380492",
      "cartId": "77991566397930002",
      "profileId": "3000000017481942",
      "statusCode": "PENDING_SUBMISSION",
      "orderType": "NORMAL",
      "orderPriceDetails": {
        "merchOriginalPrice": 45.0,
        "merchPromoPrice": 45.0,
        "merchOfferPrice": 45.0,
        "shipOriginalPrice": 8.95,
        "shipOfferPrice": 8.95,
        "giftWrapPrice": 0.0,
        "surchargeOriginalPrice": 0.0,
        "surchargeOfferPrice": 0.0,
        "merchTax": 4.22,
        "giftWrapTax": 0.0,
        "surchargeTax": 0.0,
        "taxFee": 0.0,
        "tax": 4.22,
        "netTotal": 58.17,
        "savings": 0.0
      },
      "channel": "WEB",
      "items": [
        {
          "itemId": "57921567207500001",
          "shipmentId": "57921567207500001",
          "skuId": "92048838",
          "productId": "883645",
          "originalOrderedQuantity": 0,
          "orderedQuantity": 1,
          "cancelledQuantity": 0,
          "displayPriceId": 57921567207500001,
          "statusCode": "initial",
          "registryInd": false,
          "bossInd": "false",
          "bopusInd": "false",
          "itemData": {
            "subClassNoPropertyName": "084",
            "fraudRisk": "Low",
            "itemMetaData": {
              "size": "14.5-32/33",
              "color": "Light Blue",
              "imageURL": "https://media.kohlsimg.com/is/image/kohls/883645_Light_Blue?wid=180&hei=180&op_sharpen=1",
              "seoURL": "/product/prd-883645/croft-barrow-slim-fit-solid-point-collar-dress-shirt.jsp",
              "upcNumber": "400920488382",
              "displayName": "Croft & Barrow® Slim-Fit Solid Point-Collar Dress Shirt",
              "specialSKUTypeCode": "N",
              "hazardous": false,
              "taxCode": "61000",
              "deptNo": "251",
              "packSlipDescription": "C&B Slim-Fit Dress Shirt",
              "isShipAlone": false,
              "productType": "OTHERS",
              "isDirectShipSku": false,
              "upcCode": "400920488382",
              "imageHeight": 180,
              "imageWidth": 180,
              "imageAltText": "Croft and Barrow Slim-Fit Solid Point-Collar Dress Shirt",
              "isBopusEligible": false,
              "isBossEligible": false,
              "taxExempt": false,
              "fromAddress": {
                "id": "fromAddr1",
                "preferredAddress": false,
                "expeditedCheckoutEligible": false,
                "apoFpo": false,
                "poBoxAddr": false,
                "expCheckoutInd": 0,
                "addr1": "fromAddr1",
                "city": "Middletown",
                "state": "OH",
                "postalCode": "45044",
                "county": "00"
              },
              "departmentName": "Clothing",
              "categoryName": "Tops",
              "subCategoryName": "Shirts & Blouses",
              "webExclusive": false,
              "avgRating": "2.0",
              "ratingCount": 4
            },
            "skuType": 0,
            "giftReceiptIncluded": false,
            "giftTogether": false,
            "selfRegistryAddr": false,
            "primeLineNum": 0,
            "storeClearance": false
          },
          "itemDisplayPrice": {
            "itemPriceId": 57921567207500001,
            "itemId": 57921567207500001,
            "saleInd": false,
            "clearanceInd": false,
            "originalOrderedQuantity": 0,
            "quantity": 1,
            "cancelledQuantity": 0,
            "unitRegularPrice": 45.0,
            "unitSalePrice": 45.0,
            "shipOfferPrice": 0.0,
            "extendedSalePrice": 45.0,
            "extendedPromoPrice": 45.0,
            "extendedOfferPrice": 45.0,
            "extendedTaxablePrice": 45.0,
            "unitSurchargePrice": 0.0,
            "extendedSurchargePrice": 0.0,
            "itemTaxRate": 0.09375,
            "itemTaxAmount": 4.22,
            "itemTaxWithFeeTaxAmount": 4.22,
            "surchargeTaxRate": 0.0,
            "surchargeTaxAmount": 0.0,
            "regularPriceLabel": "REGULAR",
            "itemPriceModifiers": [],
            "primeLineNum": 1,
            "taxFeeAmount": 0.0,
            "shippingCost": 8.95,
            "taxAmtIncludingFee": 0.0,
            "isPriceOverride": false,
            "statusCode": "initial"
          },
          "itemPriceGroupDetails": [],
          "itemDisplayOrder": 1,
          "shippingCost": 8.95,
          "efcAvailableQuantity": 199906
        }
      ],
      "payments": [
        {
          "paymentId": "57921567207500001",
          "paymentType": "CreditCard",
          "amount": 58.17,
          "authorizedAmt": 58.17,
          "reversalAmount": 0.0,
          "statusCode": "7",
          "payInstrNumber": "AJgz0CRcqT6I1111",
          "sendInternalTokenToOms": false,
          "payInstrPin": "222",
          "payInstrType": "visa",
          "nameOnPayInstr": "test",
          "payInstrExpMon": "01",
          "payInstrExpYear": "2025",
          "addressId": "57921567207500001",
          "paymentData": {
            "reversedAmount": 0.0,
            "initialBalance": 0.0,
            "appliedPrice": 0.0,
            "appliedFee": 0.0,
            "appliedSurcharge": 0.0,
            "remainingBalance": 0.0,
            "initialAuthAmount": 0.0
          },
          "cardStatus": [
            {
              "authReversalDone": false,
              "mostValueCustomer": false,
              "rewardBalance": 0.0,
              "latest": false,
              "persisted": false,
              "storeStan": "865074",
              "torRequired": true,
              "amount": 0.0,
              "invoice": "2350",
              "errorMessage": "SocketTimeoutException has occured in the Service Call",
              "terminalNumber": "0032",
              "transactionId": "3222350",
              "transactionSuccess": true,
              "pendingAuthorization": true,
              "transactionTimestamp": "Dec 19, 2023 3:32:30 PM",
              "transactionType": "Sale"
            }
          ],
          "createdTmst": {
            "year": 2023,
            "month": 11,
            "dayOfMonth": 19,
            "hourOfDay": 15,
            "minute": 32,
            "second": 30
          },
          "lastUpdatedTmst": {
            "year": 2023,
            "month": 11,
            "dayOfMonth": 19,
            "hourOfDay": 15,
            "minute": 32,
            "second": 30
          }
        }
      ],
      "shipAddrMap": {
        "57921567207500002": {
          "addressType": "shipping",
          "id": "57921567207500002",
          "preferredAddress": true,
          "expeditedCheckoutEligible": true,
          "apoFpo": false,
          "poBoxAddr": false,
          "availableCounties": [
            {}
          ],
          "postalCodeExt": "5124",
          "expCheckoutInd": 0,
          "firstName": "TEST",
          "lastName": "User",
          "addr1": "620 N Macarthy Blvd",
          "addr2": "Site 620",
          "city": "Milpitas",
          "state": "CA",
          "postalCode": "95035",
          "county": "00",
          "countryCode": "US",
          "phoneNumber": "6564667666"
        }
      },
      "storeAddressMap": {},
      "shipmentInfos": [
        {
          "addressId": "57921567207500002",
          "shippingMethod": "STD",
          "shipmentPriceDetails": {
            "shipmentId": 57921567207500001,
            "shipmentPriceId": 57921567207500001,
            "originalPrice": 8.95,
            "offerPrice": 8.95,
            "taxRate": 0.0,
            "taxAmount": 0.0,
            "isPriceOverride": false
          },
          "shipmentId": "57921567207500001",
          "statusCode": "INITIAL",
          "minShipDt": "Dec 25, 2023 1:07:16 PM",
          "maxShipDt": "Jan 3, 2024 1:07:16 PM",
          "giftWrapCount": 0,
          "shipmentData": {
            "shipCutOffMsg": "Will arrive by Christmas",
            "shipCutOffDate": "2023-12-23T16:35:59-05:00",
            "freeShippingThresholdDelta": 0.0,
            "createShipment": false,
            "eliteFreeShipping": false
          },
          "createdTmst": {
            "year": 2023,
            "month": 11,
            "dayOfMonth": 19,
            "hourOfDay": 15,
            "minute": 32,
            "second": 30
          },
          "lastUpdatedTmst": {
            "year": 2023,
            "month": 11,
            "dayOfMonth": 19,
            "hourOfDay": 15,
            "minute": 32,
            "second": 30
          },
          "sequence": 0,
          "fulfillmentType": "HARDGOOD"
        }
      ],
      "billAddress": {
        "addressType": "billing",
        "id": "57921567207500001",
        "preferredAddress": false,
        "expeditedCheckoutEligible": true,
        "apoFpo": false,
        "poBoxAddr": false,
        "availableCounties": [
          {}
        ],
        "expCheckoutInd": 0,
        "email": "testfive@bh.exacttarget.com",
        "firstName": "Tarun",
        "lastName": "Agarwal",
        "addr1": "620 N Macarthy Blvd",
        "addr2": "Site 620",
        "city": "Milpitas",
        "state": "CA",
        "postalCode": "95035",
        "county": "00",
        "countryCode": "US",
        "phoneNumber": "6504545773"
      },
      "orderData": {
        "originOfOrder": "WEB",
        "ipAddress": "66.232.234.48",
        "sendToCosa": false,
        "fraudChecked": false,
        "orderBlocked": false,
        "orderRepriced": false,
        "sessionId": "3000000017481942",
        "kohlsCashEarned": 0.0,
        "kohlsRewardsEarned": 0.0,
        "cartId": "77991566397930002",
        "incentiveAmount": 0.0,
        "acespServiceEnabled": false,
        "carrierServiceEnabled": false,
        "isStageOrder": false,
        "loyaltyId": "",
        "enrollLoyalty": false,
        "optSalesAlert": false,
        "loyaltyKohlsCash": {
          "hasKcc": false,
          "loyaltyPilotUser": false,
          "updatedEarnTrackerBal": 0.0,
          "eventKohlsCashEarn": 0.0,
          "everydayEarnKcc": 0.0,
          "spendAwayEveryday": 0.0,
          "everydayEarnNonKcc": 0.0,
          "totalKcAmountToActivate": 0.0,
          "earnTrackerThreshold": 0.0,
          "eventEarnAmount": 0.0,
          "qulalifyingAmount": 0.0,
          "transAmountActivateTotal": 0.0,
          "rewardsKCStartingBalance": 0.0,
          "rewardsKCEarned": 0.0,
          "potentialKohlsRewards": 0.0
        },
        "hasKcc": false,
        "loyaltySystem": false,
        "skipHeaderChargeAndTaxForBopusItems": false,
        "omsLoyaltyEnabled": false,
        "syncInventoryGrid": true,
        "userHasKohlsChargeCard": false,
        "replacementOrder": false,
        "profileDetails": {
          "webSessionId": "9d1536a4-3f52-4484-99eb-cbe2f1f49ab0",
          "shippingAddressChangeDate": "2023-10-24 13:20:59.000",
          "billingAddressChangeDate": "2020-11-19 13:54:45.000",
          "lastLoginDate": "2023-12-19 15:00:10.0",
          "kohlsWalletId": "852161889",
          "billingPhoneNumberChangeDate": "2020-11-19 13:54:45.000",
          "associate": false
        },
        "billAddressId": "57921567207500001",
        "profileEmailId": "testfive@bh.exacttarget.com",
        "placeOrderWithEstimateTax": false,
        "expeditedCheckout": false,
        "xSessionId": "9d1536a4-3f52-4484-99eb-cbe2f1f49ab0",
        "isAnonymousOrder": false
      },
      "lastUpdatedTmst": {
        "year": 2023,
        "month": 11,
        "dayOfMonth": 19,
        "hourOfDay": 15,
        "minute": 32,
        "second": 30
      },
      "submittedTmst": {
        "year": 2023,
        "month": 11,
        "dayOfMonth": 19,
        "hourOfDay": 15,
        "minute": 32,
        "second": 30
      },
      "createdTmst": {
        "year": 2023,
        "month": 11,
        "dayOfMonth": 19,
        "hourOfDay": 15,
        "minute": 32,
        "second": 30
      },
      "puchaseEarnings": {
        "kohlsCash": {
          "redemptionStartDate": "2017-05-03",
          "redemptionEndDate": "2030-06-01",
          "currentPurchaseEarnAmount": 0.0,
          "awayAmount": 5.0,
          "rewardTrackerContribution": 0.0,
          "rewardTrackerPreviousBal": 0.0,
          "rewardTrackerUpdatedBal": 0.0
        },
        "rewards": {
          "awayPoints": 0,
          "currentPurchaseEarnPoint": 0
        }
      },
      "isGuest": false,
      "version": 1,
      "sentToAtg": false,
      "profileDetails": {
        "id": "3000000017481942",
        "mvcStatus": false,
        "loyaltyPilotUser": false,
        "hasKcc": false,
        "profileCreatedTime": "2020-10-12 15:03:12",
        "email": "testfive@bh.exacttarget.com",
        "profileCallSuccess": true,
        "eligibleForExpeditedCheckout": false,
        "customerSegments": {
          "segments": []
        },
        "webSessionId": "9d1536a4-3f52-4484-99eb-cbe2f1f49ab0",
        "shippingAddressChangeDate": "2023-10-24 13:20:59.000",
        "billingAddressChangeDate": "2020-11-19 13:54:45.000",
        "lastLoginDate": "2023-12-19 15:00:10.0",
        "kohlsWalletId": "852161889",
        "billingAddressPhoneNumberModifiedTimestamp": "2020-11-19 13:54:45.000",
        "associate": false
      },
      "openAPIRequest": false,
      "isSourceAsOrderConfirmation": false,
      "isPerfUser": false,
      "editOrder": false,
      "torRequired": true,
      "capturedOrderSource": "NDB",
      "vendorData": "client_user_agent=Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36"
    }

Spreadsheet

ROOT level

+----------------------+---------------+--------+----------------------+
| Checkout JSON Name   | Type          | Order  | Example              |
|                      |               | XML    |                      |
|                      |               | M      |                      |
|                      |               | apping |                      |
+----------------------+---------------+--------+----------------------+
| orderId              | String        |     o  | 6001380477           |
|                      |               | rderNo |                      |
+----------------------+---------------+--------+----------------------+
| cartId               | String        |        | 63491563001490001    |
|                      |               | cartId |                      |
+----------------------+---------------+--------+----------------------+
| profileId            | String        |        | 3000000017481942     |
+----------------------+---------------+--------+----------------------+
| statusCode           | String        |        | PENDING_SUBMISSION   |
+----------------------+---------------+--------+----------------------+
| orderType            | String        |        | NORMAL               |
|                      |               |    ord |                      |
|                      |               | erType |                      |
+----------------------+---------------+--------+----------------------+
| orderPriceDetails    | Orde          |        | [+]o                 |
|                      | rPriceDetails |        | rderPriceDetails { } |
+----------------------+---------------+--------+----------------------+
| orderModifiers       | Map           |        | [                    |
|                      |               |        | +]orderModifiers { } |
+----------------------+---------------+--------+----------------------+
| channel              | String        | Ent    | WEB                  |
|                      |               | ryType |                      |
+----------------------+---------------+--------+----------------------+
| items                | List<Items>   |        | [+]items [2]         |
+----------------------+---------------+--------+----------------------+
| payments             | L             |     P  | [+]payments [1]      |
|                      | ist<Payments> | ayment |                      |
|                      |               | Method |                      |
+----------------------+---------------+--------+----------------------+
| shipAddrMap          | Map           |        | [+]shipAddrMap { }   |
+----------------------+---------------+--------+----------------------+
| storeAddressMap      | Map           |        | [+                   |
|                      |               |        | ]storeAddressMap { } |
+----------------------+---------------+--------+----------------------+
| shipmentInfos        | List<s        |        | [+]shipmentInfos [1] |
|                      | hipmentInfos> |        |                      |
+----------------------+---------------+--------+----------------------+
| billAddress          | billAddress   |        | [+]billAddress { }   |
+----------------------+---------------+--------+----------------------+
| orderData            | orderData     |        | [+]orderData { }     |
+----------------------+---------------+--------+----------------------+
| lastUpdatedTmst      | Timestamp     |        | [+                   |
|                      |               |        | ]lastUpdatedTmst { } |
+----------------------+---------------+--------+----------------------+
| submittedTmst        | Timestamp     |        | [+]submittedTmst { } |
+----------------------+---------------+--------+----------------------+
| createdTmst          | Timestamp     |        | [+]createdTmst { }   |
+----------------------+---------------+--------+----------------------+
| puchaseEarnings      | Map           |        | [+                   |
|                      |               |        | ]puchaseEarnings { } |
+----------------------+---------------+--------+----------------------+
| isGuest              | Boolean       |        | false                |
+----------------------+---------------+--------+----------------------+
| version              | Integer       |        | 1                    |
+----------------------+---------------+--------+----------------------+
| sentToAtg            | Boolean       |        | false                |
+----------------------+---------------+--------+----------------------+
| profileDetails       |               |        | [                    |
|                      |               |        | +]profileDetails { } |
+----------------------+---------------+--------+----------------------+
| openAPIRequest       | Boolean       |        | false                |
+----------------------+---------------+--------+----------------------+
| isSourc              | Boolean       |        | false                |
| eAsOrderConfirmation |               |        |                      |
+----------------------+---------------+--------+----------------------+
| isPerfUser           | Boolean       |        | false                |
+----------------------+---------------+--------+----------------------+
| editOrder            | Boolean       |        | false                |
+----------------------+---------------+--------+----------------------+
| torRequired          | Boolean       |        | true                 |
+----------------------+---------------+--------+----------------------+
| capturedOrderSource  | String        |        | NDB                  |
+----------------------+---------------+--------+----------------------+
| vendorData           | String        |        | client_us            |
|                      |               |        | er_agent=Mozilla/5.0 |
|                      |               |        | (Macintosh; Intel    |
|                      |               |        | Mac OS X 10_15_7)    |
|                      |               |        | AppleWebKit/537.36   |
|                      |               |        | (KHTML, like Gecko)  |
|                      |               |        | Chrome/120.0.0.0     |
|                      |               |        | Safari/537.36        |
+----------------------+---------------+--------+----------------------+

OrderPriceDetails

  ------------------------ --------- ---------------- ---------
  Name                     Type      XML Mapping      Example

  merchOriginalPrice       Integer                    70

  merchPromoPrice          Integer                    49.99

  merchOfferPrice          Integer                    49.99

  shipOriginalPrice        Integer                    8.95

  shipOfferPrice           Integer                    8.95

  giftWrapPrice            Integer                    0

  surchargeOriginalPrice   Integer                    0

  surchargeOfferPrice      Integer                    0

  merchTax                 Integer                    4.69

  giftWrapTax              Integer                    0

  surchargeTax             Integer                    0

  taxFee                   Integer                    0

  tax                      Integer   LineTax/Tax ??   4.69

  netTotal                 Integer                    63.63

  savings                  Integer                    20.01
  ------------------------ --------- ---------------- ---------

Items

+----------------+----------------+----------------+----------------+
| Name           | Type           | XML Mapping    | Example        |
+----------------+----------------+----------------+----------------+
| itemId         | String         |                | 581            |
|                |                |                | 31566349290001 |
+----------------+----------------+----------------+----------------+
| shipmentId     | String         |                | 581            |
|                |                |                | 31566349290001 |
+----------------+----------------+----------------+----------------+
| skuId          | String         | OrderLi        | 93891424       |
|                |                | ne/Item/ItemID |                |
+----------------+----------------+----------------+----------------+
| productId      | String         |                | 1357459        |
+----------------+----------------+----------------+----------------+
| originalO      | Integer        |                | 0              |
| rderedQuantity |                |                |                |
+----------------+----------------+----------------+----------------+
| o              | Integer        | OrderL         | 1              |
| rderedQuantity |                | ine/OrderedQty |                |
+----------------+----------------+----------------+----------------+
| can            | Integer        |                | 0              |
| celledQuantity |                |                |                |
+----------------+----------------+----------------+----------------+
| displayPriceId | Integer        |                | 581            |
|                |                |                | 31566349290000 |
+----------------+----------------+----------------+----------------+
| statusCode     | String         |                | initial        |
+----------------+----------------+----------------+----------------+
| registryInd    | Boolean        |                | false          |
+----------------+----------------+----------------+----------------+
| bossInd        | String         |                | false          |
+----------------+----------------+----------------+----------------+
| bopusInd       | String         |                | false          |
+----------------+----------------+----------------+----------------+
| itemData       | ItemData       |                | [              |
|                |                |                | +]itemData { } |
+----------------+----------------+----------------+----------------+
| it             | iI             |                | [+]itemDi      |
| emDisplayPrice | emDisplayPrice |                | splayPrice { } |
+----------------+----------------+----------------+----------------+
| itemPri        | ItemPri        |                | [+]itemPriceGr |
| ceGroupDetails | ceGroupDetails |                | oupDetails [0] |
+----------------+----------------+----------------+----------------+
| it             | Integer        |                | 1              |
| emDisplayOrder |                |                |                |
+----------------+----------------+----------------+----------------+
| shippingCost   | Integer        | HeaderCharg    | 4.48           |
|                |                | e/ChargeAmount |                |
|                |                | for            |                |
|                |                | ChargeCat      |                |
|                |                | egory=Shipping |                |
+----------------+----------------+----------------+----------------+
| efcAva         | Integer        |                | 9975           |
| ilableQuantity |                |                |                |
+----------------+----------------+----------------+----------------+

ItemData

+------------------------+---------+-------------+---------------------+
| Name                   | Type    | XML Mapping | Example             |
+------------------------+---------+-------------+---------------------+
| subClassNoPropertyName | String  |             |     "029"           |
+------------------------+---------+-------------+---------------------+
| fraudRisk              | String  |             |     "Low"           |
+------------------------+---------+-------------+---------------------+
| itemMetaData           | Object  |             | [+]itemMetaData { } |
+------------------------+---------+-------------+---------------------+
| skuType                | Integer |             |     0               |
+------------------------+---------+-------------+---------------------+
| giftReceiptIncluded    | Boolean |             |     false           |
+------------------------+---------+-------------+---------------------+
| giftTogether           | Boolean |             |     false           |
+------------------------+---------+-------------+---------------------+
| selfRegistryAddr       | Boolean |             |     false           |
+------------------------+---------+-------------+---------------------+
| primeLineNum           | Integer |             | 0                   |
+------------------------+---------+-------------+---------------------+
| storeClearance         | Boolean |             |     false           |
+------------------------+---------+-------------+---------------------+

itemDisplayPrice

+------------------+---------+------------------+------------------+
| Name             | Type    | XML Mapping      | Example          |
+------------------+---------+------------------+------------------+
| itemPriceId      | String  |                  |     "81          |
|                  |         |                  | 781566440050001" |
+------------------+---------+------------------+------------------+
| itemId           | String  |                  |     "81          |
|                  |         |                  | 781566440050001" |
+------------------+---------+------------------+------------------+
| saleInd          | Boolean |                  | true             |
+------------------+---------+------------------+------------------+
| clearanceInd     | Boolean |                  |     false        |
+------------------+---------+------------------+------------------+
| origina          | Integer |                  |     0            |
| lOrderedQuantity |         |                  |                  |
+------------------+---------+------------------+------------------+
| quantity         | Integer | orde             |     2            |
|                  |         | rLine/orderedQty |                  |
+------------------+---------+------------------+------------------+
| c                | Integer |                  |     0            |
| ancelledQuantity |         |                  |                  |
+------------------+---------+------------------+------------------+
| unitRegularPrice | Integer |                  | 34.0             |
+------------------+---------+------------------+------------------+
| unitSalePrice    | Integer | LinePri          |     9.0          |
|                  |         | ceInfo/UnitPrice |                  |
+------------------+---------+------------------+------------------+
| shipOfferPrice   | Integer |                  | 0.0              |
+------------------+---------+------------------+------------------+
| e                | Integer |                  | 18.0             |
| xtendedSalePrice |         |                  |                  |
+------------------+---------+------------------+------------------+
| ex               | Integer |                  | 18.0             |
| tendedPromoPrice |         |                  |                  |
+------------------+---------+------------------+------------------+
| ex               | Integer |                  | 0.0              |
| tendedOfferPrice |         |                  |                  |
+------------------+---------+------------------+------------------+
| exte             | Integer |                  | 0.0              |
| ndedTaxablePrice |         |                  |                  |
+------------------+---------+------------------+------------------+
| un               | Integer |                  | 0.0              |
| itSurchargePrice |         |                  |                  |
+------------------+---------+------------------+------------------+
| extend           | Integer |                  | 0.0              |
| edSurchargePrice |         |                  |                  |
+------------------+---------+------------------+------------------+
| itemTaxRate      | Integer | Linet            | 0.0              |
|                  |         | ax/TaxPercentage |                  |
+------------------+---------+------------------+------------------+
| itemTaxAmount    | Integer | LineTax/Tax      | 0.0              |
+------------------+---------+------------------+------------------+
| itemTax          | Integer |                  | 0.0              |
| WithFeeTaxAmount |         |                  |                  |
+------------------+---------+------------------+------------------+
| surchargeTaxRate | Integer |                  | 0.0              |
+------------------+---------+------------------+------------------+
| su               | Integer |                  | 0.0              |
| rchargeTaxAmount |         |                  |                  |
+------------------+---------+------------------+------------------+
| r                | Integer |                  | ORIGINAL         |
| egularPriceLabel |         |                  |                  |
+------------------+---------+------------------+------------------+
| salePriceLabel   | Integer |                  | SALE             |
+------------------+---------+------------------+------------------+
| it               | Object  |                  | it               |
| emPriceModifiers |         |                  | emPriceModifiers |
+------------------+---------+------------------+------------------+
| primeLineNum     | Integer | Order            | 1                |
|                  |         | Line/primeLineNo |                  |
+------------------+---------+------------------+------------------+
| taxFeeAmount     | Integer |                  | 0.0              |
+------------------+---------+------------------+------------------+
| shippingCost     | Integer |                  | 0.0              |
+------------------+---------+------------------+------------------+
| ta               | Integer |                  | 0.0              |
| xAmtIncludingFee |         |                  |                  |
+------------------+---------+------------------+------------------+
| isPriceOverride  | Boolean |                  | false            |
+------------------+---------+------------------+------------------+
| statusCode       | String  |                  | initial          |
+------------------+---------+------------------+------------------+

itemPriceModifiers

+---------------------+---------+-------------+-------------------------+
| Name                | Type    | XML Mapping | Example                 |
+---------------------+---------+-------------+-------------------------+
| itemPriceModifierId | String  |             |     "81781566440050001" |
+---------------------+---------+-------------+-------------------------+
| itemPriceId         | String  |             |     "81781566440050001" |
+---------------------+---------+-------------+-------------------------+
| isDiscountBuyItem   | Boolean |             | false                   |
+---------------------+---------+-------------+-------------------------+
| isDiscountGetItem   | Boolean |             |     0false              |
+---------------------+---------+-------------+-------------------------+
| unQualifiedBwType   | Boolean |             |     false               |
+---------------------+---------+-------------+-------------------------+
| modifierCategory    | String  |             |     GROUP               |
+---------------------+---------+-------------+-------------------------+
| discountAmount      | Integer |             |     50.0                |
+---------------------+---------+-------------+-------------------------+
| modifierDescription | String  |             | BUY 2 FOR $18.00        |
+---------------------+---------+-------------+-------------------------+
| precedence          | Integer |             |     7                   |
+---------------------+---------+-------------+-------------------------+
| tierInfo            | Object  |             | tierInfo                |
+---------------------+---------+-------------+-------------------------+
| promoOffer          | Object  |             | promoOffer              |
+---------------------+---------+-------------+-------------------------+
| promoType           | String  |             | GAO                     |
+---------------------+---------+-------------+-------------------------+

Payments

+----------------+----------------+----------------+----------------+
| Name           | Type           | XML Mapping    | Example        |
+----------------+----------------+----------------+----------------+
| paymentId      | String         | Paym           | 581            |
|                |                | entMethods/Pay | 31566349290001 |
|                |                | mentMethod/Pay |                |
|                |                | mentReference2 |                |
+----------------+----------------+----------------+----------------+
| paymentType    | String         | PaymentMetho   | CreditCard     |
|                |                | ds/PaymentType |                |
+----------------+----------------+----------------+----------------+
| amount         | Integer        | Paymen         | 63.63          |
|                |                | tMethods/Payme |                |
|                |                | ntMethod/Payme |                |
|                |                | ntDetailsList/ |                |
|                |                | PaymentDetails |                |
|                |                | /RequestAmount |                |
+----------------+----------------+----------------+----------------+
| authorizedAmt  | Integer        | Pay            | 63.63          |
|                |                | mentMethods/Pa |                |
|                |                | ymentMethod/Pa |                |
|                |                | ymentDetailsLi |                |
|                |                | st/PaymentDeta |                |
|                |                | ils/AuthAmount |                |
+----------------+----------------+----------------+----------------+
| reversalAmount | Integer        |                | 0              |
+----------------+----------------+----------------+----------------+
| statusCode     | String         |                | 7              |
+----------------+----------------+----------------+----------------+
| payInstrNumber | String         |                | AJ             |
|                |                |                | gz0CRcqT6I1111 |
+----------------+----------------+----------------+----------------+
| sendInte       | Boolean        |                | false          |
| rnalTokenToOms |                |                |                |
+----------------+----------------+----------------+----------------+
| payInstrPin    | String         |                | 222            |
+----------------+----------------+----------------+----------------+
| payInstrType   | String         |                | visa           |
+----------------+----------------+----------------+----------------+
| nameOnPayInstr | String         |                | test           |
+----------------+----------------+----------------+----------------+
| payInstrExpMon | String         |                | 01             |
+----------------+----------------+----------------+----------------+
| p              | String         |                | 2025           |
| ayInstrExpYear |                |                |                |
+----------------+----------------+----------------+----------------+
| addressId      | String         |                | 581            |
|                |                |                | 31566349290001 |
+----------------+----------------+----------------+----------------+
| paymentData    | paymentData    |                | [+]p           |
|                |                |                | aymentData { } |
+----------------+----------------+----------------+----------------+
| cardStatus     | cardStatus     |                | [+]            |
|                |                |                | cardStatus [1] |
+----------------+----------------+----------------+----------------+
| createdTmst    | createdTmst    |                | [+]c           |
|                |                |                | reatedTmst { } |
+----------------+----------------+----------------+----------------+
| l              | l              |                | [+]lastU       |
| astUpdatedTmst | astUpdatedTmst |                | pdatedTmst { } |
+----------------+----------------+----------------+----------------+

paymentData

+-------------------+-----------+-------------+----------------+
| Name              | Type      | XML Mapping | Example        |
+-------------------+-----------+-------------+----------------+
| reversedAmount    | Integer   |             | 0.0            |
+-------------------+-----------+-------------+----------------+
| initialBalance    | Integer   |             | 0.0            |
+-------------------+-----------+-------------+----------------+
| appliedPrice      | Integer   |             | 0.0            |
+-------------------+-----------+-------------+----------------+
| appliedFee        | Integer   |             | 0.0            |
+-------------------+-----------+-------------+----------------+
| appliedSurcharge  | Integer   |             | 0.0            |
+-------------------+-----------+-------------+----------------+
| remainingBalance  | Integer   |             | 0.0            |
+-------------------+-----------+-------------+----------------+
| initialAuthAmount | Integer   |             | 0.0            |
+-------------------+-----------+-------------+----------------+
| giftWrapCount     | Integer   |             | 0.0            |
+-------------------+-----------+-------------+----------------+
| kohlsCash         | kohlsCash |             | [+]kohlsCash{} |
+-------------------+-----------+-------------+----------------+

kohlsCash

+----------------------+-----------+---------------------+-----------------+
| Name                 | Type      | XML Mapping         | Example         |
+----------------------+-----------+---------------------+-----------------+
| kohlsCashAssociation | String    |                     | Kohls Cash      |
+----------------------+-----------+---------------------+-----------------+
| kohlsCashNumber      | Integer   | KOHLSCashTable/     | 624899772690385 |
|                      |           |                     |                 |
|                      |           | KohlsCashID         |                 |
+----------------------+-----------+---------------------+-----------------+
| kohlsCashAmount      | Integer   | KOHLSCashTable/     | 0.0             |
|                      |           |                     |                 |
|                      |           | KohlsCashAmount     |                 |
+----------------------+-----------+---------------------+-----------------+
| kohlsCashExpDate     | Date      | KOHLSCashTable/     | 2030-06-01      |
|                      |           |                     |                 |
|                      |           | KohlsCashExpiryDate |                 |
+----------------------+-----------+---------------------+-----------------+
| kohlsCashExpTime     | Timestamp | KOHLSCashTable/     | 00:00:00.000    |
|                      |           |                     |                 |
|                      |           | KohlsCashExpiryDate |                 |
+----------------------+-----------+---------------------+-----------------+
| kohlsCashExpTimeZone | Timestamp | KOHLSCashTable/     | -05:00          |
|                      |           |                     |                 |
|                      |           | KohlsCashExpiryDate |                 |
+----------------------+-----------+---------------------+-----------------+

cardStatus

+--------------------+-----------+-------------+--------------------+
| Name               | Type      | XML Mapping | Example            |
+--------------------+-----------+-------------+--------------------+
| authReversalDone   | Boolean   |             | false              |
+--------------------+-----------+-------------+--------------------+
| mostValueCustomer  | Boolean   |             | false              |
+--------------------+-----------+-------------+--------------------+
| rewardBalance      | Integer   |             | 0.0                |
+--------------------+-----------+-------------+--------------------+
| latest             | Boolean   |             | false              |
+--------------------+-----------+-------------+--------------------+
| persisted          | Boolean   |             | false              |
+--------------------+-----------+-------------+--------------------+
| storeStan          | Integer   |             | 101269             |
+--------------------+-----------+-------------+--------------------+
| torRequired        | Boolean   |             | true               |
+--------------------+-----------+-------------+--------------------+
| amount             | Integer   |             | 0.0                |
+--------------------+-----------+-------------+--------------------+
| invoice            | Integer   |             | 2297               |
+--------------------+-----------+-------------+--------------------+
| errorMessage       | String    |             | "Sock              |
|                    |           |             | etTimeoutException |
|                    |           |             | has occured in the |
|                    |           |             | Service Call"      |
+--------------------+-----------+-------------+--------------------+
| terminalNumber     | Integer   |             | 0032               |
+--------------------+-----------+-------------+--------------------+
| transactionId      | Integer   |             | 3222297            |
+--------------------+-----------+-------------+--------------------+
| transactionSuccess | Boolean   |             | true               |
+--------------------+-----------+-------------+--------------------+
| pe                 | Boolean   |             | true               |
| ndingAuthorization |           |             |                    |
+--------------------+-----------+-------------+--------------------+
| tr                 | Timestamp |             | Dec 18, 2023       |
| ansactionTimestamp |           |             | 3:54:23 PM         |
+--------------------+-----------+-------------+--------------------+
| transactionType    | String    |             | Sale               |
+--------------------+-----------+-------------+--------------------+

shipmentInfos

+-------------+-------------+-------------+-------------+-------------+
| Name        | Type        | XML Mapping | Example     | Notes       |
+-------------+-------------+-------------+-------------+-------------+
| addressId   | String      |             | 581315      | P           |
|             |             |             | 66349290002 | ossibility: |
|             |             |             |             | Orde        |
|             |             |             |             | r.OrderLine |
|             |             |             |             | .Extn.ExtnA |
|             |             |             |             | TGShipGrpId |
+-------------+-------------+-------------+-------------+-------------+
| shi         | String      |             | STD         |             |
| ppingMethod |             |             |             |             |
+-------------+-------------+-------------+-------------+-------------+
| shipmentP   | shipmentP   |             | [+]sh       |             |
| riceDetails | riceDetails |             | ipmentPrice |             |
|             |             |             | Details { } |             |
+-------------+-------------+-------------+-------------+-------------+
| shipmentId  | Integer     |             | 581315      | P           |
|             |             |             | 66349290001 | ossibility: |
|             |             |             |             | Orde        |
|             |             |             |             | r.OrderLine |
|             |             |             |             | .Extn.ExtnA |
|             |             |             |             | TGShipGrpId |
+-------------+-------------+-------------+-------------+-------------+
| statusCode  | String      |             | INITIAL     |             |
+-------------+-------------+-------------+-------------+-------------+
| minShipDt   | String      |             | Dec 22,     |             |
|             |             |             | 2023        |             |
|             |             |             | 1:11:26 PM  |             |
+-------------+-------------+-------------+-------------+-------------+
| maxShipDt   | String      |             | Jan 2, 2024 |             |
|             |             |             | 1:11:26 PM  |             |
+-------------+-------------+-------------+-------------+-------------+
| gi          | Integer     |             | 0           |             |
| ftWrapCount |             |             |             |             |
+-------------+-------------+-------------+-------------+-------------+
| s           | s           |             | [+]shipm    |             |
| hipmentData | hipmentData |             | entData { } |             |
+-------------+-------------+-------------+-------------+-------------+
| createdTmst | createdTmst |             | [+]crea     |             |
|             |             |             | tedTmst { } |             |
+-------------+-------------+-------------+-------------+-------------+
| last        | last        |             | [+]lastUpda |             |
| UpdatedTmst | UpdatedTmst |             | tedTmst { } |             |
+-------------+-------------+-------------+-------------+-------------+
| sequence    | Integer     |             | 0           |             |
+-------------+-------------+-------------+-------------+-------------+
| fulf        | String      |             | HARDGOOD    |             |
| illmentType |             |             |             |             |
+-------------+-------------+-------------+-------------+-------------+

shipmentPriceDetails

+-----------------+---------+-------------+-------------------+
| Name            | Type    | XML Mapping | Example           |
+-----------------+---------+-------------+-------------------+
| shipmentId      | String  |             | 81781566440050001 |
+-----------------+---------+-------------+-------------------+
| shipmentPriceId | String  |             | 81781566440050001 |
+-----------------+---------+-------------+-------------------+
| originalPrice   | Integer |             | 0.0               |
+-----------------+---------+-------------+-------------------+
| offerPrice      | Integer |             | 0.0               |
+-----------------+---------+-------------+-------------------+
| taxRate         | Integer |             | 0.0               |
+-----------------+---------+-------------+-------------------+
| taxAmount       | Integer |             | 0.0               |
+-----------------+---------+-------------+-------------------+
| isPriceOverride | Boolean |             | false             |
+-----------------+---------+-------------+-------------------+

BillAddress

+----------------+----------------+----------------+----------------+
| Name           | Type           | XML Mapping    | Example        |
+----------------+----------------+----------------+----------------+
| addressType    | String         |                | billing        |
+----------------+----------------+----------------+----------------+
| id             | String         |                | 581            |
|                |                |                | 31566349290001 |
+----------------+----------------+----------------+----------------+
| pr             | Boolean        |                | false          |
| eferredAddress |                |                |                |
+----------------+----------------+----------------+----------------+
| expeditedCh    | Boolean        |                | true           |
| eckoutEligible |                |                |                |
+----------------+----------------+----------------+----------------+
| apoFpo         | Boolean        |                | false          |
+----------------+----------------+----------------+----------------+
| poBoxAddr      | Boolean        |                | false          |
+----------------+----------------+----------------+----------------+
| ava            | ava            |                | [+]availab     |
| ilableCounties | ilableCounties |                | leCounties [1] |
+----------------+----------------+----------------+----------------+
| expCheckoutInd | Integer        |                | 0              |
+----------------+----------------+----------------+----------------+
| email          | String         |                | testfive@bh.e  |
|                |                |                | xacttarget.com |
+----------------+----------------+----------------+----------------+
| firstName      | String         | PersonInfoBi   | Tarun          |
|                |                | llTo/FirstName |                |
+----------------+----------------+----------------+----------------+
| lastName       | String         | PersonInfoB    | Agarwal        |
|                |                | illTo/LastName |                |
+----------------+----------------+----------------+----------------+
| addr1          | String         | P              | 620 N Macarthy |
|                |                | ersonInfoBillT | Blvd           |
|                |                | o/AddressLine1 |                |
+----------------+----------------+----------------+----------------+
| addr2          | String         | P              | Site 620       |
|                |                | ersonInfoBillT |                |
|                |                | o/AddressLine2 |                |
+----------------+----------------+----------------+----------------+
| city           | String         | PersonI        | Milpitas       |
|                |                | nfoBillTo/City |                |
+----------------+----------------+----------------+----------------+
| state          | String         | PersonI        | CA             |
|                |                | nfoBillTo/City |                |
+----------------+----------------+----------------+----------------+
| postalCode     | String         | PersonInfo     | 95035          |
|                |                | BillTo/ZipCode |                |
+----------------+----------------+----------------+----------------+
| county         | String         |                | 00             |
+----------------+----------------+----------------+----------------+
| countryCode    | String         | PersonInfo     | US             |
|                |                | BillTo/Country |                |
+----------------+----------------+----------------+----------------+
| phoneNumber    | String         | PersonInfoB    | 6504545773     |
|                |                | illTo/DayPhone |                |
+----------------+----------------+----------------+----------------+

orderData

+----------------+----------------+----------------+----------------+
| Name           | Type           | XML Mapping    | Example        |
+----------------+----------------+----------------+----------------+
| originOfOrder  | String         |                | WEB            |
+----------------+----------------+----------------+----------------+
| ipAddress      | String         |                | 66.232.236.101 |
+----------------+----------------+----------------+----------------+
| sendToCosa     | Boolean        |                | false          |
+----------------+----------------+----------------+----------------+
| fraudChecked   | Boolean        |                | false          |
+----------------+----------------+----------------+----------------+
| orderBlocked   | Boolean        |                | false          |
+----------------+----------------+----------------+----------------+
| orderRepriced  | Boolean        |                | false          |
+----------------+----------------+----------------+----------------+
| sessionId      | String         |                | 30             |
|                |                |                | 00000017481942 |
+----------------+----------------+----------------+----------------+
| k              | Integer        | KohlsOrderKCD  | 10             |
| ohlsCashEarned |                | etailsList/KCE |                |
|                |                | ventEarnAmount |                |
+----------------+----------------+----------------+----------------+
| kohl           | Integer        | CustomA        | 0              |
| sRewardsEarned |                | ttributes/Kohl |                |
|                |                | sRewardsEarned |                |
+----------------+----------------+----------------+----------------+
| cartId         | String         |                | 634            |
|                |                |                | 91563001490001 |
+----------------+----------------+----------------+----------------+
| i              | Integer        |                | 0              |
| ncentiveAmount |                |                |                |
+----------------+----------------+----------------+----------------+
| acesp          | Boolean        |                | false          |
| ServiceEnabled |                |                |                |
+----------------+----------------+----------------+----------------+
| carrier        | Boolean        |                | false          |
| ServiceEnabled |                |                |                |
+----------------+----------------+----------------+----------------+
| isStageOrder   | Boolean        |                | false          |
+----------------+----------------+----------------+----------------+
| loyaltyId      | String         |                |                |
+----------------+----------------+----------------+----------------+
| enrollLoyalty  | Boolean        |                | false          |
+----------------+----------------+----------------+----------------+
| optSalesAlert  | Boolean        |                | false          |
+----------------+----------------+----------------+----------------+
| lo             | lo             |                | [+]loyalt      |
| yaltyKohlsCash | yaltyKohlsCash |                | yKohlsCash { } |
+----------------+----------------+----------------+----------------+
| hasKcc         | Boolean        |                | false          |
+----------------+----------------+----------------+----------------+
| loyaltySystem  | Boolean        |                | false          |
+----------------+----------------+----------------+----------------+
| skipHea        | Boolean        |                | false          |
| derChargeAndTa |                |                |                |
| xForBopusItems |                |                |                |
+----------------+----------------+----------------+----------------+
| oms            | Boolean        |                | false          |
| LoyaltyEnabled |                |                |                |
+----------------+----------------+----------------+----------------+
| syn            | Boolean        |                | true           |
| cInventoryGrid |                |                |                |
+----------------+----------------+----------------+----------------+
| userHasK       | Boolean        |                | false          |
| ohlsChargeCard |                |                |                |
+----------------+----------------+----------------+----------------+
| re             | Boolean        |                | false          |
| placementOrder |                |                |                |
+----------------+----------------+----------------+----------------+
| profileDetails | profileDetails |                | [+]prof        |
|                |                |                | ileDetails { } |
+----------------+----------------+----------------+----------------+
| billAddressId  | String         |                | 581            |
|                |                |                | 31566349290001 |
+----------------+----------------+----------------+----------------+
| profileEmailId | String         |                | testfive@bh.e  |
|                |                |                | xacttarget.com |
+----------------+----------------+----------------+----------------+
| placeOrderW    | Boolean        |                | false          |
| ithEstimateTax |                |                |                |
+----------------+----------------+----------------+----------------+
| exp            | Boolean        |                | false          |
| editedCheckout |                |                |                |
+----------------+----------------+----------------+----------------+
| xSessionId     | String         |                | c5af916c       |
|                |                |                | -f2e3-4838-a59 |
|                |                |                | 8-0ef1dbfd86cc |
+----------------+----------------+----------------+----------------+
| is             | Boolean        |                | false          |
| AnonymousOrder |                |                |                |
+----------------+----------------+----------------+----------------+

loyaltyKohlsCash

+------------------+------+-------------+-----------------------------+
| Name             | Type | XML Mapping | Example                     |
+------------------+------+-------------+-----------------------------+
| hasKcc           | Boo  |             | false                       |
|                  | lean |             |                             |
+------------------+------+-------------+-----------------------------+
| loyaltyPilotUser | Boo  |             | false                       |
|                  | lean |             |                             |
+------------------+------+-------------+-----------------------------+
| updat            | Int  |             | 0.0                         |
| edEarnTrackerBal | eger |             |                             |
+------------------+------+-------------+-----------------------------+
| ev               | Int  |             | 0.0                         |
| entKohlsCashEarn | eger |             |                             |
+------------------+------+-------------+-----------------------------+
| everydayEarnKcc  | Int  | KohlsOrder  | 0.0                         |
|                  | eger | KCDetails/L |                             |
|                  |      | KCAmountKCC |                             |
|                  |      | when tender |                             |
|                  |      | Kohls card  |                             |
+------------------+------+-------------+-----------------------------+
| s                | Int  |             | 0.0                         |
| pendAwayEveryday | eger |             |                             |
+------------------+------+-------------+-----------------------------+
| ev               | Int  | Ko          | 0.0                         |
| erydayEarnNonKcc | eger | hlsOrderKCD |                             |
|                  |      | etails/LKCA |                             |
|                  |      | mountNonKCC |                             |
|                  |      | when other  |                             |
|                  |      | tenders     |                             |
+------------------+------+-------------+-----------------------------+
| totalKc          | Int  |             | 0.0                         |
| AmountToActivate | eger |             |                             |
+------------------+------+-------------+-----------------------------+
| earn             | Int  |             | 0.0                         |
| TrackerThreshold | eger |             |                             |
+------------------+------+-------------+-----------------------------+
| eventEarnAmount  | Int  |             | 0.0                         |
|                  | eger |             |                             |
+------------------+------+-------------+-----------------------------+
| q                | Int  |             | 0.0                         |
| ulalifyingAmount | eger |             |                             |
+------------------+------+-------------+-----------------------------+
| transAmo         | Int  |             | 0.0                         |
| untActivateTotal | eger |             |                             |
+------------------+------+-------------+-----------------------------+
| rewardsK         | Int  |             | 0.0                         |
| CStartingBalance | eger |             |                             |
+------------------+------+-------------+-----------------------------+
| rewardsKCEarned  | Int  | Cu          | 0.0                         |
|                  | eger | stomAttribu |                             |
|                  |      | tes/KohlsRe |                             |
|                  |      | wardsEarned |                             |
+------------------+------+-------------+-----------------------------+
| poten            | Int  |             | 0.0                         |
| tialKohlsRewards | eger |             |                             |
+------------------+------+-------------+-----------------------------+

ProfileDetails

+----------------+----------------+----------------+----------------+
| Name           | Type           | XML Mapping    | Example        |
+----------------+----------------+----------------+----------------+
| id             | String         |                | 30             |
|                |                |                | 00000017481942 |
+----------------+----------------+----------------+----------------+
| mvcStatus      | Boolean        |                | false          |
+----------------+----------------+----------------+----------------+
| lo             | Boolean        | KohlsOrderKCDe | false          |
| yaltyPilotUser |                | tailsList/IsLo |                |
|                |                | yaltyPilotCust |                |
+----------------+----------------+----------------+----------------+
| hasKcc         | Boolean        |                | false          |
+----------------+----------------+----------------+----------------+
| prof           | String         |                | 2020-10-12     |
| ileCreatedTime |                |                | 15:03:12       |
+----------------+----------------+----------------+----------------+
| email          | String         | Order/C        | testfive@bh.e  |
|                |                | ustomerEMailID | xacttarget.com |
+----------------+----------------+----------------+----------------+
| prof           | Boolean        |                | true           |
| ileCallSuccess |                |                |                |
+----------------+----------------+----------------+----------------+
| eligibleForExp | Boolean        |                | false          |
| editedCheckout |                |                |                |
+----------------+----------------+----------------+----------------+
| cu             | cu             |                | [+]custom      |
| stomerSegments | stomerSegments |                | erSegments { } |
+----------------+----------------+----------------+----------------+
| webSessionId   | String         |                | a1c97b8a       |
|                |                |                | -c3ef-4739-8c4 |
|                |                |                | 4-4b0c63ee08f8 |
+----------------+----------------+----------------+----------------+
| shippingAdd    | String         |                | 2023-10-24     |
| ressChangeDate |                |                | 13:20:59.000   |
+----------------+----------------+----------------+----------------+
| billingAdd     | String         |                | 2020-11-19     |
| ressChangeDate |                |                | 13:54:45.000   |
+----------------+----------------+----------------+----------------+
| lastLoginDate  | String         |                | 2023-12-18     |
|                |                |                | 15:40:40.0     |
+----------------+----------------+----------------+----------------+
| kohlsWalletId  | String         |                | 852161889      |
+----------------+----------------+----------------+----------------+
| billingAddress | String         |                | 2020-11-19     |
| PhoneNumberMod |                |                | 13:54:45.000   |
| ifiedTimestamp |                |                |                |
+----------------+----------------+----------------+----------------+
| associate      | Boolean        |                | false          |
+----------------+----------------+----------------+----------------+

PurchaseEarnings

  ----------- -------- ------------- ------------------
  Name        Type     XML Mapping   Example

  kohlsCash   Object                 [+]kohlsCash { }

  rewards     Object                 [+]rewards { }
  ----------- -------- ------------- ------------------

KohlsCash

+---------------------------+--------+-------------+------------------+
| Name                      | Type   | XML Mapping | Example          |
+---------------------------+--------+-------------+------------------+
| redemptionStartDate       | String |             |     "2017-05-03" |
+---------------------------+--------+-------------+------------------+
| redemptionEndDate         | String |             |     "2030-06-01" |
+---------------------------+--------+-------------+------------------+
| currentPurchaseEarnAmount | Double |             |     0.0          |
+---------------------------+--------+-------------+------------------+
| awayAmount                | Double |             |     33.68        |
+---------------------------+--------+-------------+------------------+
| rewardTrackerContribution | Double |             |     0.0          |
+---------------------------+--------+-------------+------------------+
| rewardTrackerPreviousBal  | Double |             |     0.0          |
+---------------------------+--------+-------------+------------------+
| rewardTrackerUpdateBal    | Double |             |     0.0          |
+---------------------------+--------+-------------+------------------+

Rewards

+--------------------------+---------+-------------+---------+
| Name                     | Type    | XML Mapping | Example |
+--------------------------+---------+-------------+---------+
| awayPoints               | Integer |             |     0   |
+--------------------------+---------+-------------+---------+
| currentPurchaseEarnPoint | Integer |             |     0   |
+--------------------------+---------+-------------+---------+



=====================================================================
Document 3: Software Quality and Performance
=====================================================================
- Introduction:
This is confluence page converted to plain text.

keywords are: , qualities, items, operational, backlog, improvements, technical, decisions, tracking, represents, addressing, enhance, maintainability, measure, artifacts

- Description
Objective

The overall objective of this page is to improve the quality of our
applications through Developmental and Operational enhancements.

Addressing both of these qualities will enhance the software quality,
maintainability, and efficiency of our systems.  To achieve this
objective it is necessary for us to define how we can measure these
qualities to see that we are making effective changes.  So we will
define qualities, metrics, and artifacts we will use to produce the work
to perform these improvements, and track the decisions we made along the
way.

Qualities

As previously mentioned our focus is about improving our software from a
technical point of view while preserving the functionality of our system
and show the justification for the Developmental and Operational
qualities. 

The ISO/IEC 25010 standard establishes a quality model for software
product evaluation. It defines eight key quality characteristics which
provide a good framework for us to evaluate the quality of our
software.   We have further categorized it into three higher-level
categories.  Further we will not concern ourselves with the first -
Functional - since we already have a well defined means of addressing
this quality

  ------------------------------------------------------------------------------------
  Category                         Definition   ISO/IEC 25010 Quality Characteristics
  -------------------------------- ------------ --------------------------------------
  Functional                       What the     Functional Suitability, Usability
                                   software     
                                   does         

  Operational                      How the      Performance Efficiency, Compatibility,
                                   software     Reliability, Security
                                   behaves      

  Developmental                    How the      Maintainability, Portability
                                   software is  
                                   built        
  ------------------------------------------------------------------------------------

Affects of Certain Changes based on Category

When we make certain changes (under Type of Change) notice the impact of
that change based on these columns:

[]

Explanation

Type of Change

The type of change allows us to understand what kind of commit we are
undergoing:

-   Notice that a Feature Addition and a Bug Fix are the same except for
    when it occurs
-   Notice also that a Refactor and a Technical Debt are the same except
    for when it occurs
-   Functionality and Optimizations are witnessed during runtime vs
    Refactors and Technical Debt items before runtime

Other Columns

-   Affect represents what quality is ultimately enhanced
-   Occurs represents when in the process of software development we
    apply this change
    -   Proactively implies that we are in front of the enhancement and
        apply the change ahead of time
    -   Reactively implies that we need to perform enhancement due to
        managing the change for a later date or a result of monitoring
        or discovery after software development
-   Visibility of Change represents when the change is visible or
    manifests itself
-   Impact of Change on other areas describes what we can expect to
    happen to other qualities of our software when applying a type of
    change:
    -   Functional Change represent if it impacts the functionality of
        our software or what it does
    -   Operational Change represents if it impacts how the software
        behaves (caching, scaling, etc.)
    -   Developmental Change represent if it impacts how the software
        was built or deployed and helps to maintain the code
        (refactoring, and testing), or make it more portable or modular

Functional Qualities

Remember our objective is to keep this unchanged

Operational Qualities

Operational qualities are easy to track and measure since they can be
quantified.  Here are some examples:

-   response time
-   uptime/downtime
-   error rate
-   memory usage
-   throughput

Story development usually happens reactively as a result of monitoring
our system in Dynatrace. However, there are opportunities to incorporate
optimization stories proactively as we deem necessary based on
requirements and information that we have.

Developmental Qualities

Developmental qualities can be track but can be trickier to measure. 
Some indicators such as static code analyzers, defect density can be
quantified.  In most cases, an increase in our productivity can also be
an indicator depending on the criteria we use.  Other than quantifiable
measurements, most of these measurements are of an empirical nature:

-   Test coverage
-   Development approaches or implementation process
-   Ease of making quick changes to code
-   Fast test cycles
-   Cleaner more readable code
-   Knowledge share through design and code reviews
-   Efficiently and effectively managing technical debt
-   Topic discussions

Artifacts

There are two main artifacts to help in achieving this objective:

1.  A comprehensive backlog of operational and developmental work items,
    and
2.  A tracking board of all our technical decisions.

Software Quality and Performance Backlog

These work items are intended to enhance the software quality and
performance of our system. Work items can take the form of stories,
chores, spikes, or topics. By prioritizing and addressing these items,
we aim to improve the overall quality, maintainability, and efficiency
of our software.  Here is the start of a backlog, under Software Quality
and Performance Backlog.

Decision Tracking Board

The second artifact refines and catalogs all our decisions and
improvements made.  We have seeded this tracking board with decisions
we've made so far:

-   In the table on the Design improvements / Backlog(post shadow mode)
    page, and
-   As bulleted items found on the Standard and Design Practices pages.

These will be incorporated into a unified guidelines list found here on
the Decision Tracking Board page.

References

1.  The ISO/IEC 25010 standard: This is an international standard that
    establishes a quality model for software product evaluation. It
    defines eight key quality characteristics which provide a good
    framework for evaluating the quality of software.

2.  Dynatrace: This is a software intelligence platform that provides
    application performance management, artificial intelligence for
    operations, cloud infrastructure monitoring, and digital experience
    management.

3.  Software Quality and Performance Backlog: This is the start of a
    comprehensive backlog of operational and developmental work items
    intended to enhance the software quality and performance of the
    system.

4.  Decision Tracking Board: This is a unified guidelines list that
    catalogs all the technical decisions and improvements made.

5.  Design improvements / Backlog(post shadow mode): This page contains
    a table of design improvements and backlog items post shadow mode.

6.  Standard and Design Practices: These pages contain bulleted items of
    standards and design practices.

7.  Work Item 2x2 Prioritization Board:  This board is used to kick off
    our prioritization of work items into epics and stories that we can
    put into JIRA.



=====================================================================
Document 0: OMO-2094 - Review and Update the Kafka Consumer Lag for OLM
=====================================================================
- Introduction:
keywords are: story, OMO-2094

- Description
*As* an engineer
*I want to* review and update the Dynatrace monitoring for OLM's kafka consumer lag
*So* that there is monitoring for all of OLM's kafka topics

*Acceptance Criteria*:
* review the current DT monitoring for OLM's kafka topics
** ensure all kafka topics has monitoring for consumer lag
* work with OLM team to obtain all of OLM's kafka topics


=====================================================================
Document 1: OMO-1986 - Spike: PAYPAL order return failure - partial cancellation
=====================================================================
- Introduction:
keywords are: spike, OMO-1986

- Description
*As* an OLM engineer
*I want* to research why partially cancelled PAYPAL orders can't be returned
*Because we* need the amounts that are sent to KPP to be correct to work through return services (invoices loaded to the Return Service DB and numbers are correct)

This spike is ready for acceptance when:
 * We know the solution to return partially cancelled PAYPAL orders. 
 * We know the solution to return partially cancelled PAYPAL + KC orders
 * Create Jira to implement those

Notes:
 * [https://confluence.kohls.com:8443/display/OE/OMO-1961+Research+the+Cause+of+Paypal+Orders+Not+Appearing+in+the+Return+Service]


=====================================================================
Document 2: OMO-1968 - Ship to Home Phase 0
=====================================================================
- Introduction:
Able to validate the performance of adding the post checkout filtering

keywords are: parent, epic, OMO-1968, Ship to Home Phase 0

- Description
As OLM,

I want to be able to validate the performance of adding the post checkout filtering,

So that we could use this new service to filter orders to OLM.

 

Link to the STH Miro Board: https://miro.com/app/board/uXjVNPa9pHc=/

- Section  2.2: OMO-2125 - Investigate EFC6 S2H Shipment Delayed Email Integration 

- Introduction:
This is a child spike of epic OMO-1968, "Ship to Home Phase 0"

keywords are: child, spike, OMO-2125, Ship to Home Phase 0

- Description
*As* the OLM team
*I want to* understand the flow of a Shipment Delay email from an EFC.
*Because* we want to provide Shipment Delayed emails for S2H as a new feature.

*This spike is ready for acceptance when:*
 # We have clarity on how/when EFCs send Shipment Delay notifications
 ## Specifically EFC6
 # Propose a design for OLM to integrate with EFC Shipment Delay Notifications and send a Shipment Delayed email.
 # Create Stories to implement the design

*Notes & Assumptions:*
 * Prior research done on Shipment Delayed emails [https://confluence.kohls.com:8443/display/OE/OMO-1973%3A+Investigating+Trigger+Events+for+Delayed+Email+Notifications+in+nOLM]
 * EFC sided delays were chosen over Carrier Delays due to inconsistencies between carrier notifications. 

- Section  2.2: OMO-2077 - Order Router - Retry flow processing

- Introduction:
This is a child story of epic OMO-1968, "Ship to Home Phase 0"

keywords are: child, story, OMO-2077, Ship to Home Phase 0

- Description
*As* the OLM Router
*I want to* publish to OLM_ERROR topic on processing errors
*So that* order gets processed through existing retry flow.

 

*Acceptance Criteria:*
 * When service consumes invalid json ,json gets stored in error-detail collection marked as false for retry.

*Note:*
 * Invoice service is a good example for reference.

- Section  2.2: OMO-2069 - Order Router Metrics Dashboard for Ship to Home

- Introduction:
This is a child story of epic OMO-1968, "Ship to Home Phase 0"

keywords are: child, story, OMO-2069, Ship to Home Phase 0

- Description
*As the* Order Router system,
*I want to* create a dashboard showing key performance metrics for Ship to Home orders,
*So that* we can monitor and improve system performance.

*Acceptance Criteria:*
*Given* the Order Router is processing Ship to Home orders,
*When* checking the dashboard,
*Then* it should display important metrics like processing times and error rates.

- Section  2.2: OMO-2068 - Implementing Logging for Order Router

- Introduction:
This is a child story of epic OMO-1968, "Ship to Home Phase 0"

keywords are: child, story, OMO-2068, Ship to Home Phase 0

- Description
*As the* Order Router system{*},{*}
*I want to* implement logging with relevant information for troubleshooting,
*So that* errors during the Ship to Home process can be quickly identified and resolved.

*Acceptance Criteria:*
*Given* an error occurs in the Ship to Home process,
*When* the Order Router processes the order,
*Then* logs should capture detailed error information and relevant data for resolution.

*Notes:*
 * Emphasize capturing key data points help in diagnosing and solving issues.

- Section  2.2: OMO-2066 - How to split SF as separate microservices

- Introduction:
This is a child spike of epic OMO-1968, "Ship to Home Phase 0"

keywords are: child, spike, OMO-2066, Ship to Home Phase 0

- Description
*As* an OLM engineer
*I want to* research how to split the Store Fulfillment app into separate apps
*Because we* want to prepare Store Fulfillment to support S2H

This spike is ready for acceptance when:
* document an approach on how to split the Store Fulfillment into separate apps
** API vs kafka consumer
** ideally each app should be responsible for one major task
* discuss with team on the design approach
* create stories to implement the changes
* reference OMO-1825

- Section  2.2: OMO-2065 - Checkout JSON->XML: Understand the possibly dynamic aspects of the conversion code

- Introduction:
This is a child spike of epic OMO-1968, "Ship to Home Phase 0"

keywords are: , child, spike, OMO-2065, Ship to Home Phase 0

- Description
*As* OLM
*I want to* understand the possibly dynamic aspects of Checkout's conversion code
*Because* anything dynamic might impact the conversion approach

*This spike is ready for acceptance when:*
 # We have clarity on any aspect of the conversion code that could be dynamic
 ## Examples:
 ### BossSwitchUtil (Spring Bean)
 ### OrderManager (Spring Bean)
 ### CartUtil (Spring Bean)
 ### OMSXmlConfiguration (part of JSON model, also a Spring Bean)
 #### Pulls values from a config file
 ### Anything else you can find that might be dynamic
 # If there are dynamic aspects of the conversion, conduct analysis on what we should do or how that changes things.
 # We have a page in confluence to document our findings and analysis
 # If needed, we have new spikes & stories written based on the findings

*Notes & Assumptions:*
 * Access to Checkout code (and relevant class) can be found here:
 ** [https://confluence.kohls.com:8443/display/OE/OMS-1980+Analyze+Checkout%27s+Order+Data]
 * You probably need to connect with a Checkout engineer to help answer some of these questions
 ** Chinmaya Kumar Swain (Staff Eng)
 ** Tarun Agarwal (Eng Manager)
 ** Maybe others ... ?

- Section  2.2: OMO-2063 - Kafka Message Handling in Order Router

- Introduction:
This is a child story of epic OMO-1968, "Ship to Home Phase 0"

keywords are: child, story, OMO-2063, Ship to Home Phase 0

- Description
*As* the Order Router system,
*I want to* investigate the message handling from the new Kafka Topic (order-asynch-topic)
*Because* we need to resolve issues with the auto-commit flag causing duplicate messages when off and no consumption when on.

*Acceptance Criteria:*
 # Understand the cause of duplicate messages with auto-commit off.
 # Determine why turning auto-commit on stops message consumption.
 # Develop a strategy for accurate message handling.

*Notes:*
 * Focus on practical and reliable solutions.
 * Document all findings.

- Section  2.2: OMO-2054 - Design Approach for Order Comparison in OMS and OLM

- Introduction:
This is a child spike of epic OMO-1968, "Ship to Home Phase 0"

keywords are: child, spike, OMO-2054, Ship to Home Phase 0

- Description
*As the* OLM Development Team,
*I want to* investigate design options for comparing orders between OMS and OLM,
*Because* accurate order comparison is essential for our order router to preserve functionality when orders are routed to it from Checkout

*This spike is ready for acceptance when:*
 # *We explore* design options for enabling order comparison through OMSe
 # *We propose* a design for capturing and comparing orders from MQ, considering the constraints in accessing the live OMS database.

*Notes & Assumptions:*
 * Direct querying of the OMS database is currently limited, and may need alternative design approaches.
 ** For instance this data may be available via the Checkout team's DB
 * Consider talking also to SRE teams to see what other capabilities we have for fetching orders from OMS system
 * The spike should result in a clear design proposal documented for future implementation.

- Section  2.2: OMO-1988 - Convert Checkout's Order JSON to Existing MQ's Order XML

- Introduction:
This is a child story of epic OMO-1968, "Ship to Home Phase 0"

keywords are: child, story, OMO-1988, Ship to Home Phase 0

- Description
*As an OLM Engineer,*

*I want to* convert order data from JSON to XML in Post Checkout,

*So that* when we convert it to Order XML, it is identical to what Checkout is posting on the Existing MQ.

{*}Acceptance Criteria{*}:
 * *Given* order data in JSON format from Checkout's Kafka topic,
 * *When* this data is converted to XML format,
 * *Then* the converted XML order data should be identical to the Order XML posted by Checkout on the Existing MQ.

{*}Notes & Assumptions{*}:
 * Investigate the possibility of reusing or adapting code from Chinmaya on the Checkout team for this conversion.

- Section  2.2: OMO-1982 - Validate Order Consistency Between New Kafka Topic and Existing MQ

- Introduction:
This is a child story of epic OMO-1968, "Ship to Home Phase 0"

keywords are: child, story, OMO-1982, Ship to Home Phase 0

- Description
*As an* OLM Engineer,
*I want to* implement or perform an order comparison check,
*So that* I can confirm the new Kafka topic is receiving the same orders as the existing MQ.

{*}Acceptance Criteria 1{*}:
 * *Given* orders are published to both the new Kafka topic and existing MQ,
 * *When* these orders are processed,
 * *Then* there should be a match in the order data received in both systems.

{*}Acceptance Criteria 2{*}:
 * *Given* orders are published to both the new Kafka topic and existing MQ,
 * *When* these orders are processed,
 * *Then* orders should be saved to a mongo DB for future auditing purposes.

{*}Notes & Assumptions{*}:
 * Can the OMS passive DB used for comparing the OMS vs OLM (mongo)?
 * Discrepancies, if any, should be logged and investigated.
 * Identify a way to automate the auditing process is in scope.
 * This story is critical for ensuring data integrity and system reliability.
 * Link to the STH Phase 0 Miro: [https://miro.com/app/board/uXjVNPa9pHc=/]

- Section  2.2: OMO-1981 - Develop Microservice for Post-Checkout Order Filtering

- Introduction:
This is a child story of epic OMO-1968, "Ship to Home Phase 0"

keywords are: child, story, OMO-1981, Ship to Home Phase 0

- Description
*As an* OLM Engineer,
*I want to* develop a microservice for post-checkout filtering,
*So that* I can audit and validate orders without impacting existing order flows.

{*}Acceptance Criteria 1{*}:
 * *Given* an order is sent to the new Kafka topic,
 * *When* the a order is pass to the microservice,
 * *Then* it should receive the order without modifying it and the order could be logged.

{*}Notes & Assumptions{*}:
 * The microservice should be capable of handling high throughput.
 * This microservice is for auditing purposes and should not alter the order data.

- Section  2.2: OMO-1980 - Connect to Checkout's Existing Kafka Topic and Analyze Order Data

- Introduction:
This is a child spike of epic OMO-1968, "Ship to Home Phase 0"

keywords are: child, spike, OMO-1980, Ship to Home Phase 0

- Description
*As an OLM Engineer,*

*I want to* connect to the existing Kafka topic from the Checkout team,

*So that* I can integrate with the topic and analyze the structure of the order data in JSON format.

{*}Acceptance Criteria{*}:
 * *Given* the existing Kafka topic from the Checkout team,
 * *When* an order is captured,
 * *Then* analyze the data to understand its structure and content.

{*}Notes & Assumptions{*}:
 * The Kafka topic is capturing 100% of post-checkout orders in JSON format.
 * The analysis will focus on understanding the JSON structure so that we can understand what it would take to move it to an identical Order XML that is currently being posted to Existing MQ from Checkout

- Section  2.2: OMO-1976 - nOLM's Role in Setting Estimated Shipment Dates

- Introduction:
This is a child spike of epic OMO-1968, "Ship to Home Phase 0"

keywords are: child, spike, OMO-1976, Ship to Home Phase 0

- Description
*As* the nOLM system,

*I want to* understand how the current system determines estimated shipment dates when an order is created,

*Because* this understanding is important to sticking to accurate shipping threshold mapping which comes in from OMSe for delivery.

*This spike is ready for acceptance when:*
 # We have clarity on nOLM's process for assigning shipment dates during order creation by looking at Order XML in order-create
 # We document the procedure and any insights as we lead up to our Phase 4 Scenario

*Notes & Assumptions:*
 * The investigation should consider existing shipping threshold mappings in OMSe
 * Phase 4 Scenario can be used for a context to get insights into this process
 * Relevant Confluence page for this investigation: https://confluence.kohls.com:8443/display/OE/OMO-1976+nOLM%27s+Role+in+Setting+Estimated+Shipment+Dates

- Section  2.2: OMO-1975 - Optimal Approach for Demand Updates Post-Cancellation

- Introduction:
This is a child spike of epic OMO-1968, "Ship to Home Phase 0"

keywords are: child, spike, OMO-1975, Ship to Home Phase 0

- Description
*As* the nOLM system,

*I want to* determine whether demand updates following cancellations should be routed through OLM or directly from EFC,

*Because* this will help streamline cancellation handling and inventory accuracy.

*This spike is ready for acceptance when:*
 # We identify the how demand updates should be appropriately handled after cancellations
 # (Optional) We look for opportunities for an efficient pathway f this is feasible
 # Document findings on Confluence.

*Notes & Assumptions:*
 * The decision impacts the accuracy of inventory management
 * We should look at what OMSe is doing today
 * This will involve working with Customer Fulfillment team to understand what is done upon cancellation
 * Relevant Confluence page for this investigation: [insert confluence link].

- Section  2.2: OMO-1973 - Investigating Trigger Events for Shipment Delays Email Notifications in nOLM

- Introduction:
This is a child spike of epic OMO-1968, "Ship to Home Phase 0"

keywords are: child, spike, OMO-1973, Ship to Home Phase 0

- Description
*As* the nOLM system,

*I want to* investigate & identify the specific event/condition(s) that triggers shipment delayed email notifications,

*Because* understanding this trigger is important to addressing how to define this new email type, and modernizing customer communication.

*This spike is ready for acceptance when:*
 # Does this email exist in OMSe today?
 # We determine the event or condition(s) that leads to the sending of shipment delayed emails.
 # We document our findings and potential underlying cause that can help us define shipment delayed emails
 # Followup story is create to implement this new email (OOM team)

*Notes & Assumptions:*
 *  The nOLM process with systems like Customer Fulfillment/Carrier services
 * Relevant Confluence page for findings

- Section  2.2: OMO-1971 - Optimizing nOLM Email Notifications for 'Shipped' Status

- Introduction:
This is a child spike of epic OMO-1968, "Ship to Home Phase 0"

keywords are: , child, spike, OMO-1971, Ship to Home Phase 0

- Description
*As* the nOLM system,

*I want to* evaluate the timing mechanism for 'Shipped' status email notifications,

*Because* timely communication is important for accurate customer updates.
h3. This spike is ready for acceptance when:
 # We analyze the current lag between marking a shipment as 'Shipped' and sending the corresponding email.
 # We explore the possibility of syncing with a new carrier feed for real-time shipment status.

h3. Notes & Assumptions:
 * The scope of this spike is for
 ** Ship to home only (fulfill by EFCs) with an expectation to expand into SFSs in the future.
 ** SLSQ Single Shipnode with PayPal orders
 ** New spikes will be created for MLMQ scenarios (depending on the complexity) 
 * Understanding the existing gap in email notification timing is key
 * Technical feasibility and integration with a new carrier feed will be investigated.
 * Relevant insights and findings to be documented on Confluence: [insert confluence link].

- Section  2.2: OMO-850 - Learn about Current Customer Comm. for Pack Slip Email (n/a for BOPUS today)

- Introduction:
This is a child spike of epic OMO-1968, "Ship to Home Phase 0"

keywords are: , pickup, child, spike, OMO-850, Ship to Home Phase 0

- Description
*WE SHOULD* understand when, why, and what +Customer Communication+ is done today by the legacy solution, and what service it interacts with, during fulfillment, pickup, cancels etc. for BOPUS shipments

*BEFORE* we implement +Customer Communication+ for BOPUS

*BECAUSE* we want to provide similar functionality for BOPUS orders processed by new OLM in the future, to insure +Customer Communication+ is properly triggered during appropriate times, and need a deeper understanding of the current functionality before determining how to approach it for new OLM. This will help us sort out the stories that are needed and reduce the risk of missing something important.

*We will know we are done when ({color:#ff8b00}highlighted in Orange is in scope{color}):*
 * When the current +Customer Communication+ (email and text if it's available and requested by the customer) by the legacy solution throughout order processing for BOPUS shipments is well understood
 ** {color:#172b4d}Ready for Pickup (and text){color}
 ** {color:#172b4d}Ready for Pickup Initial Reminder{color}
 ** {color:#172b4d}Ready for Pickup Final Reminder{color}
 ** {color:#172b4d}Ready for Pickup - APP (Alternate Pickup person emails) {color}
 *** {color:#172b4d}Ready for pickup - APP{color}
 *** {color:#172b4d}Ready for Pickup Initial Reminder - APP{color}
 *** {color:#172b4d}Ready for Pickup Final Reminder - APP{color}
 ** -----------------------------------------------
 ** {color:#ff8b00}Pack Slip email (generated after ready for pickup when you go online to lookup your order and click the button of print pack slip) {color}
 ** -----------------------------------------------
 ** Store Order Complete (aka Customer Picked Up)
 ** Store Order Complete (aka Customer Picked Up) APP (Alternate Pickup person emails)
 ** -----------------------------------------------
 ** Order Cancellation KI
 ** -----------------------------------------------
 ** Order Modification KI Responsive Email (Order Modified email, part of the order was cancelled - not applicable to SLSQ)
 ** -----------------------------------------------
 ** Store Order Delayed Responsive Email (BOPUS order delayed email)
 ** -----------------------------------------------
 ** Ready for Pickup - APP Changed - should be covered within Ready for Pickup (Changes made to the alternate pickup person email)
 ** Ready for Pickup - APP Removed - should be covered within Ready for Pickup (Alternative deleted email - only goes to the customer)
 ** Ready for Pickup - No longer APP - should be covered within Ready for Pickup (Alternative removed - only goes to the alternative)

 * When we clearly understood what services the current solution interacts with to initiate +Customer Communication+ 
 * Document the payload/data that is included when we trigger that email and mapping the source for each attribute
 * Exception handling is well understood
 * All the learnings are documented in a Confluence Page

*Notes/Assumptions:*
 * Wallet and Account own the page that triggers the email, start with them first
 * +Customer Communication+ is required for active mode of our first thin slice
 * We need to develop this in the future but it does not apply to SLSQ or may be owned by the returns team (mapping required)
 ** Order Modification KI Responsive Email
 ** Store Order Customer Cancelled (aka Auto Refund)
 ** Store Order Customer Cancelled (aka Auto Refund) APP

*Reference:*
 * [https://confluence.kohls.com:8443/display/OE/1.1+OMO-28+-+Analysis+and+Design]
 * Transactional Email UAT Spreadsheet (OCF Tab): [https://docs.google.com/spreadsheets/d/1YBuIG2XTguKkmz-gUknz_FM06LGvkT_f-IVwjib04b0/edit#gid=2073458429]
 * Link to an assortment of production email examples: [https://miro.com/app/board/uXjVOU0EyYI=/?moveToWidget=3458764538551545135&cot=14]
 * Link to Customer Comm. BT Transactional Emails list: [https://docs.google.com/spreadsheets/d/159Zo99VUGPTzAdjGS1imvV6h_my2g82Ulff87mBoGzQ/edit#gid=0]



=====================================================================
Document 3: OMO-1969 - Ship to Home Phase 1
=====================================================================
- Introduction:
Able to validate and preserve the existing functionality while using the post checkout filtering

keywords are: parent, epic, OMO-1969, Ship to Home Phase 1

- Description
As OLM,

I want to be able to validate and preserve the existing functionality while using the post checkout filtering micro service,

So that we could use the Post Checkout service to send orders from the new Kafka topic to existing MQ and processed by OMSe.

 

Link to the STH Miro Board: https://miro.com/app/board/uXjVNPa9pHc=/

- Section  3.3: OMO-2056 -  Playbook Creation for Phase 1 Launch

- Introduction:
This is a child story of epic OMO-1969, "Ship to Home Phase 1"

keywords are: child, story, OMO-2056, Ship to Home Phase 1

- Description
*As an* OLM team member,
*I want to* collaborate with SREs to create a playbook,
*So that* we have a clear action plan for the Phase 1 launch.

*Acceptance Criteria 1:*
 * *Given* the upcoming Phase 1 launch,
 * *When* we're putting together the playbook,
 * *Then* it should outline essential steps, responsibilities, and how to handle issues.

*Acceptance Criteria 2:*
 * *Given* the playbook is ready,
 * *When* reviewed by our team and the SREs,
 * *Then* everyone should agree it's complete and useful for Phase 1.

*Notes:*
 * We need this playbook to make sure Phase 1 goes smoothly.
 * It's important to keep the SREs in the loop to make sure we include everything necessary.

- Section  3.3: OMO-1993 - Back-Out Plan for Post-Checkout Failures

- Introduction:
This is a child story of epic OMO-1969, "Ship to Home Phase 1"

keywords are: child, story, OMO-1993, Ship to Home Phase 1

- Description
*As a* Software Engineer

*I want* a simple back-out plan

*So that* we're prepared if the post-checkout service fails.

*Acceptance Criteria 1*
 * *Given* a rollback scenario,
 * *When* executed,
 * *Then* all steps should be documented for review.

*Notes:*
 * We should ensure that rollback scenario allows for transitioning back to the original Existing MQ
 * This may take some coordination with the Checkout team to identify what would need to be done on their side to roll back to the original posting of orders on Existing MQ

 

- Section  3.3: OMO-1992 - Post Checkout Dashboard with Key Metrics

- Introduction:
This is a child story of epic OMO-1969, "Ship to Home Phase 1"

keywords are: child, story, OMO-1992, Ship to Home Phase 1

- Description
*As an* OLM Support Team,

*I want to* create a dashboard for Post Checkout that includes Kafka lag and essential metrics,

*So that* we can effectively monitor its performance.

*Acceptance Criteria 1:*
 * *Given* Post Checkout is active,
 * *When* checking the dashboard,
 * *Then* I should see essential service metrics

*Acceptance Criteria 2:*
 * *Given* Post Checkout is active,
 * *When* checking the health of kafka topic,
 * *Then* I should see kafka lag metrics

*Notes:*
 * Align the dashboard's functionality with the monitoring features of other microservices.

- Section  3.3: OMO-1991 - Kafka to MQ Order Handling

- Introduction:
This is a child story of epic OMO-1969, "Ship to Home Phase 1"

keywords are: child, story, OMO-1991, Ship to Home Phase 1

- Description
*As a* Post Checkout service,

*I want to* send orders from Kafka to MQ and post Order XML to Existing MQ,

*So that* we maintain our current process while adding this new step.

*Acceptance Criteria:*
 * *Given* an order in Kafka,
 * *When* Post Checkout processes it,
 * *Then* the order goes to MQ and its XML to the Existing MQ.

*Notes:*
 * Keep it compatible with our existing system.
 * Testing should check that orders are routed right and existing features work as usual.



=====================================================================
Document 4: OMO-1970 - Ship to Home Phase 2
=====================================================================
- Introduction:
Develop the OLM sourcing Facade to audit and validate the orders against the OMS orders

keywords are: parent, epic, OMO-1970, Ship to Home Phase 2

- Description
As OLM,

I want to introducing the OLM sourcing Facade,

so that we could begin audit and validate the orders against the OMS orders (compare the request to the sourcing; New Kafka vs Existing MQ).

 

Link to the STH Miro Board: [https://miro.com/app/board/uXjVNPa9pHc=/]

- Section  4.4: OMO-2071 - OLM Sourcing Facade Metrics Dashboard for Ship to Home

- Introduction:
This is a child story of epic OMO-1970, "Ship to Home Phase 2"

keywords are: child, story, OMO-2071, Ship to Home Phase 2

- Description
*As the* OLM Sourcing Facade system,
*I want to* create a dashboard showing key performance metrics for sourcing requests and responses,
*So that* we can monitor and improve system performance.

*Acceptance Criteria:*
*Given* the OLM Sourcing Facade is processing sourcing requests and responses,
*When* checking the dashboard,
*Then* it should display important metrics like processing times and error rates.

- Section  4.4: OMO-2070 - Implementing Logging for OLM Sourcing Facade

- Introduction:
This is a child story of epic OMO-1970, "Ship to Home Phase 2"

keywords are: child, story, OMO-2070, Ship to Home Phase 2

- Description
*As the* OLM Sourcing Facade system{*},{*}
*I want to* implement logging with relevant information for troubleshooting,
*So that* errors during the Ship to Home process can be quickly identified and resolved.

*Acceptance Criteria:*
*Given* an error occurs in the Ship to Home process,
*When* the OLM Sourcing Facade processes the sourcing requests and responses,
*Then* logs should capture detailed error information and relevant data for resolution.

*Notes:*
 * Emphasize capturing key data points help in diagnosing and solving issues.

- Section  4.4: OMO-1997 - OLM Sourcing Facade Dashboard with Key Metrics

- Introduction:
This is a child story of epic OMO-1970, "Ship to Home Phase 2"

keywords are: child, story, OMO-1997, Ship to Home Phase 2

- Description
*As an* OLM Support Team,

*I want to* create a dashboard for OLM Sourcing Facade that includes Kafka lag and essential metrics,

*So that* we can effectively monitor its performance.

*Acceptance Criteria 1:*
 * *Given* OLM Sourcing Facade is active,
 * *When* checking the dashboard,
 * *Then* I should see essential service metrics

*Acceptance Criteria 2:*
 * *Given* OLM Sourcing Facade is active,
 * *When* checking the health of kafka topic,
 * *Then* I should see kafka lag metrics

*Notes:*
 * Align the dashboard's functionality with the monitoring features of other microservices.

- Section  4.4: OMO-1996 - Order Comparison for Sourcing Facade and Request MQ

- Introduction:
This is a child story of epic OMO-1970, "Ship to Home Phase 2"

keywords are: child, story, OMO-1996, Ship to Home Phase 2

- Description
*As the* OLM Sourcing Facade,

*I want to* compare orders sent to me (via new Kafka topic) with those in the request MQ sent by OMS,

*So that* we can make sure it is consistent and accurate

*Acceptance Criteria:*
 * *Given* orders are sent to the Sourcing Facade via Kafka Topic and orders sent to request MQ from OMS
 * *When* comparing these orders,
 * *Then* identify any discrepancies and confirm they match up correctly.

*Notes:*
 * Emphasis on accurately matching orders between the new Kafka topic and request MQ.
 * Develop a method to easily spot and resolve differences.

- Section  4.4: OMO-1995 - OLM Sourcing Facade Collaboration with Promising and Sourcing Team

- Introduction:
This is a child story of epic OMO-1970, "Ship to Home Phase 2"

keywords are: child, story, OMO-1995, Ship to Home Phase 2

- Description
*As the* OLM Development Team,

*I want to* work closely with the promising and sourcing team,

*So that* our OLM Sourcing Facade fits well with their system and avoids overlapping work.

*Acceptance Criteria:*
 * *Given* we're building the OLM Sourcing Facade,
 * *When* we tie it into the sourcing process via their ACL,
 * *Then* it should source orders just once and stop OMS from doing it again if it's already been sourced.



=====================================================================
Document 5: OMO-1972 - Ship to Home Phase 3
=====================================================================
- Introduction:
Able to Use the Sourcing Facade in Prod

keywords are: parent, epic, OMO-1972, Ship to Home Phase 3

- Description
As OLM,

I want to be able to use the OLM sourcing Facade,

so that we could begin sourcing orders that was filtered to OMSe from the Post Checkout Service.

 

Link to the Ship to Home Miro Board: https://miro.com/app/board/uXjVNPa9pHc=/

- Section  5.5: OMO-2005 - Adding MongoDB for Sourcing Data in Facade

- Introduction:
This is a child story of epic OMO-1972, "Ship to Home Phase 3"

keywords are: child, story, OMO-2005, Ship to Home Phase 3

- Description
*As the* OLM Sourcing Facade,

*I want to* use MongoDB,

*So that* we persist all our sourcing requests and responses

*Acceptance Criteria:*
 * *Given* we're working with sourcing requests and responses,
 * *When* we receive this data from Sourcing ACL,
 * *Then* it should be reliably stored in MongoDB.

*Notes:*
 * MongoDB will help us prevent resourcing by matching it with sourcing requests which already have been made

- Section  5.5: OMO-2004 - Kafka Response Topic and Lag on Dashboard

- Introduction:
This is a child story of epic OMO-1972, "Ship to Home Phase 3"

keywords are: child, story, OMO-2004, Ship to Home Phase 3

- Description
*As the* OLM Support Team,

*I want to* add the new Kafka response topic and its lag metrics to our Monitoring Dashboard,

*So that* we have insights into its performance.

*Acceptance Criteria:*
 * *Given* the Kafka response topic is active,
 * *When* monitoring the system,
 * *Then* we should see both the topic activity and its lag time on the Dashboard.

- Section  5.5: OMO-2003 - Load Test for Sourcing Facade

- Introduction:
This is a child story of epic OMO-1972, "Ship to Home Phase 3"

keywords are: child, story, OMO-2003, Ship to Home Phase 3

- Description
*As the* OLM Team,

*I want to* run a load test on the Sourcing Facade,

*So that* we know it can handle the busy times.

*Acceptance Criteria:*
 * *Given* the Facade is up,
 * *When* testing how much it can take,
 * *Then* make sure it deals with loads as expected given its STPS (specified transactions per second).

*Notes:*
 * Simulate "real" use to see how it holds up.
 * Identify any weak spots
 * Check it stays steady when it’s really busy.

- Section  5.5: OMO-2002 - OMS Shift from MQ to Kafka

- Introduction:
This is a child story of epic OMO-1972, "Ship to Home Phase 3"

keywords are: child, story, OMO-2002, Ship to Home Phase 3

- Description
*As the* OMS Team working with us,

*I want to* switch OMS from listening to the existing MQ to the new Kafka topics for requests and responses,

*So that* OMS updates to our new communication channels.

*Acceptance Criteria:*
 * *Given* OMS currently uses the existing MQ,
 * *When* changing to listen to Kafka topics,
 * *Then* OMS should stop using MQ and start using Kafka for all incoming and outgoing messages.

*Notes:*
 * The change involves turning off OMS's connection to MQ and activating it in Kafka.

- Section  5.5: OMO-2001 - Facade-to-OMS Response Routing via Kafka

- Introduction:
This is a child story of epic OMO-1972, "Ship to Home Phase 3"

keywords are: child, story, OMO-2001, Ship to Home Phase 3

- Description
*As the* OLM Sourcing Facade,

*I want to* set up a new Kafka response topic,

*So that* responses can be efficiently directed through Kafka to OMS.

*Acceptance Criteria:*
 * *Given* we have responses ready in the Facade,
 * *When* they need to reach OMS,
 * *Then* they should go through the new Kafka topic.

- Section  5.5: OMO-2000 - OLM Facade Handling MQ Responses and Kafka Topic

- Introduction:
This is a child story of epic OMO-1972, "Ship to Home Phase 3"

keywords are: child, story, OMO-2000, Ship to Home Phase 3

- Description
*As the* OLM Sourcing Facade,

*I want to* listen to responses from MQ and relay them to the New Kafka response topic,

*So that* information flows correctly through our system.

*Acceptance Criteria:*
 * *Given* the OLM Facade is linked to MQ,
 * *When* it receives a response from MQ,
 * *Then* it should forward this response to the New Kafka response topic.

*Notes:*
 * This is about ensuring that the Facade accurately captures and relays MQ responses to Kafka.

- Section  5.5: OMO-1999 - OLM Sourcing Facade integration with MQ Topics

- Introduction:
This is a child story of epic OMO-1972, "Ship to Home Phase 3"

keywords are: child, story, OMO-1999, Ship to Home Phase 3

- Description
*As the* OLM Sourcing Facade,

*I want to* connect with both the Request and Response MQ,

*So that* our requests and responses are managed efficiently.

*Acceptance Criteria:*
 * *Given* the OLM Sourcing Facade is active,
 * *When* it interacts with MQ,
 * *Then* ensure seamless sending and receiving of data.

*Notes:*
 * These are the existing Request and Response MQ that OMS was using to talk to Sourcing Blackbox.
 * Ensure reliable communication between the Facade and MQ.
 * Thoroughly test the connection for accurate message handling.

- Section  5.5: OLM-1384 - Referencing ShipNode in existing OMS for Sourcing

- Introduction:
This is a child story of epic OMO-1972, "Ship to Home Phase 3"

keywords are: child, story, OLM-1384, Ship to Home Phase 3

- Description
*As* Sterling OMSe system,

*I want to* shipNode value for identify where to source S2H orders,

*So that* we do not make duplicate call to Sourcing engine from Sterling OMSe

*Acceptance Criteria:*
 * *Given* we're working S2H orders,
 * *When* we receive shipNode from filtering ACL in OMSe,
 * *Then* OMSe should not make another sourcing call.

*Notes:*
 * Sourcing response that is required to actually source order to a node can be pulled from sourcing facade or mongo db.
 * If this option does not work then we need to mock sourcing call from OMSe at sourcing faccde to return the response from original sourcing call.



=====================================================================
Document 6: OMO-1974 - Ship to Home Phase 4
=====================================================================
- Introduction:
Able to Throttling Orders at Post Checkout to Create Shipments in OLM

keywords are: parent, epic, OMO-1974, Ship to Home Phase 4

- Description
As OLM,

I want to be able to throttling limited orders at the Post Checkout service,

so that we could begin 
 # Creating shipments in OLM
 # Monitoring performance by processing 10 orders per day

 

Link to the Ship to Home Miro Board: https://miro.com/app/board/uXjVNPa9pHc=/

- Section  6.6: OMO-2079 - Discuss Modernization Efforts of the PackSlip Email Trigger Endpoint

- Introduction:
This is a child spike of epic OMO-1974, "Ship to Home Phase 4"

keywords are: child, spike, OMO-2079, Ship to Home Phase 4

- Description
*As* OLM
*I want to* trigger email communication of the packing slip to the customer using a modern REST endpoint
*Because* we would like to continue modernizing as we add new features

This spike is ready for acceptance when:
 * We have talked with the O&OM (CCS) team about modernizing the Pack Slip trigger endpoint
 ** this will include which fields to keep and remove based on [OMO-850 spreadsheet|https://docs.google.com/spreadsheets/d/17IPdP1l_z9pjjekjf7yf7XRrbyv6MsUefBdz4OClIEA/edit#gid=0]

- Section  6.6: OMO-2078 - Understand Packslip View and Email Endpoints

- Introduction:
This is a child spike of epic OMO-1974, "Ship to Home Phase 4"

keywords are: child, spike, OMO-2078, Ship to Home Phase 4

- Description
*As* a Kohl's customer
*I want to* be able to view my packing slip and email it to myself using nOLM
*Because* it is an important document within the STH flow

This spike is ready for acceptance when:
 * We understand how e-comm communicates to OMS
 ** Endpoints it uses to get pack slip information and triggering the email
 ** Request body and format (SOAP?) - also if there are plans to modernize
 ** Response that is returned by OMS
 * Document these findings in Confluence

- Section  6.6: OMO-2055 - Ensuring Effective Throttling in the Order Router

- Introduction:
This is a child story of epic OMO-1974, "Ship to Home Phase 4"

keywords are: child, story, OMO-2055, Ship to Home Phase 4

- Description
*As the* Order Router,
*I want to* monitor and validate the throttling process,
*So that* we can confirm it's working as intended and understand its impact on order processing.

*Acceptance Criteria 1:*
 * *Given* the Order Router is implementing throttling,
 * *When* orders are being processed,
 * *Then* the system should track and report the number of processed and queued orders each hour to confirm effective throttling.

*Acceptance Criteria 2:*
 * *Given* the monitoring feature is operational,
 * *When* evaluating the system’s performance,
 * *Then* there should be reliable data to show that throttling is correctly managing the order flow.

 

*Notes:*
 * We need this to make sure our system is throttling orders right and not causing problems.

- Section  6.6: OMO-2024 - OLM Sourcing Response Verification in Mongo Database

- Introduction:
This is a child story of epic OMO-1974, "Ship to Home Phase 4"

keywords are: child, story, OMO-2024, Ship to Home Phase 4

- Description
*As* the OLM system,

*I want* to check in the Mongo database for existing sourcing responses,

*So that* I can verify if the response to a sourcing request already exists.

{*}Acceptance Criteria 1{*}:
 * *Given* a sourcing request is made in OLM,
 * *When* checking the Mongo database,
 * *Then* the system should look for any existing responses to that request.

{*}Notes{*}:
 * This check helps avoid duplicate sourcing.
 * Make sure the search in Mongo is accurate.

- Section  6.6: OMO-2023 - E2E Testing for Post Checkout and OLM Workflow

- Introduction:
This is a child story of epic OMO-1974, "Ship to Home Phase 4"

keywords are: child, story, OMO-2023, Ship to Home Phase 4

- Description
*As* the OLM-S2H Testing team,

*I want* a basic end-to-end test for the Post Checkout to OLM process,

*So that* we can make sure orders move correctly from Post Checkout to OLM.

{*}Acceptance Criteria 1{*}:
 * *Given* orders are processed through Post Checkout,
 * *When* they are passed to OLM,
 * *Then* the test should verify that this transition happens smoothly.

{*}Notes{*}:
 * Focus the test on the standard, expected workflow (the "happy path").
 * Ensure the test is simple and covers all essential steps.
 * Regular testing to maintain consistent and reliable order processing.

- Section  6.6: OMO-2021 - Detailed Validation for Order and Shipment Creation in OLM

- Introduction:
This is a child story of epic OMO-1974, "Ship to Home Phase 4"

keywords are: child, story, OMO-2021, Ship to Home Phase 4

- Description
*As* a member of the OLM team,

*I want* to validate the creation of orders and shipments in OLM for orders coming from the Create Order Topic,

*So that* we can ensure that each order and its shipments are created correctly, particularly with the new, more detailed attributes for S2H and fulfillment.

{*}Acceptance Criteria 1{*}:
 * *Given* an order passes through the Create Order Topic and enters OLM,
 * *When* it triggers order and shipment creation,
 * *Then* the system should accurately create the order and all associated shipments.

{*}Acceptance Criteria 2{*}:
 * *Given* an order is being processed in OLM,
 * *When* it's a filtered order from the Create Order Topic,
 * *Then* validate that the order and shipment details are complete and match the expected set of shipments, including the new attributes.

{*}Notes & Assumptions{*}:
 * Emphasize correctness and detail in processing orders and their associated shipments.
 * The new attributes for S2H and fulfillment nodes should be correctly identified and incorporated into the order and shipment details.

- Section  6.6: OMO-2020 - Post Checkout Order Filtering to Create Order Topic

- Introduction:
This is a child story of epic OMO-1974, "Ship to Home Phase 4"

keywords are: child, story, OMO-2020, Ship to Home Phase 4

- Description
*As* the Post Checkout service,

*I want* to filter orders to the Create Order Topic,

*So that* only relevant orders are sent to the existing topic used for BOPUS.

{*}Acceptance Criteria 1{*}:
 * *Given* the filtering mechanism is in place,
 * *When* an order is processed,
 * *Then* it should be checked against BOPUS criteria before being directed to the Create Order Topic.

{*}Notes & Assumptions{*}:
 * Define clear criteria for BOPUS-eligible orders.
 * The filtering process should make sure to prevent any non-BOPUS orders from being sent to the Create Order Topic

- Section  6.6: OMO-2018 - Update Post Checkout with Order Throttling Feature

- Introduction:
This is a child story of epic OMO-1974, "Ship to Home Phase 4"

keywords are: child, story, OMO-2018, Ship to Home Phase 4

- Description
*As* the Post Checkout service,

*I want* to add an order throttling feature,

*So that* the service can limit the rate of sourcing calls to 10 orders per hour.

{*}Acceptance Criteria 1{*}:
 * *Given* orders are being processed by Post Checkout,
 * *When* they are queued for sourcing,
 * *Then* only 10 orders should be sent to the Sourcing Facade per hour.

{*}Acceptance Criteria 2{*}:
 * *Given* the order throttling feature is active,
 * *When* more than 10 orders are processed in an hour,
 * *Then* the excess orders should be queued for the next available time slot.

{*}Notes & Assumptions{*}:
 * The throttling mechanism should be configurable to adapt to future changes in order processing rates.
 * Ensure that the queued orders are processed in a timely manner without data loss.

- Section  6.6: OMO-2017 - Integration of Post Checkout with Sourcing Facade

- Introduction:
This is a child story of epic OMO-1974, "Ship to Home Phase 4"

keywords are: child, story, OMO-2017, Ship to Home Phase 4

- Description
*As* the Post Checkout service,

*I want* to integrate with the Sourcing Facade service,

*So that* requests and responses can be exchanged between the request and response topics.

{*}Acceptance Criteria 1{*}:
 * *Given* an order is processed by Post Checkout,
 * *When* it interacts with the Sourcing Facade,
 * *Then* the request should be sent accurately to the Sourcing Facade.

{*}Acceptance Criteria 2{*}:
 * *Given* the integration is in place,
 * *When* the Sourcing Facade sends back a response,
 * *Then* Post Checkout should receive and handle it correctly.

{*}Notes & Assumptions{*}:
 * Ensure that the integration facilitates accurate communication between the services.

- Section  6.6: OMO-1467 - Write Message to legacy Cancel MQ for Stores when S2H Ships

- Introduction:
This is a child story of epic OMO-1974, "Ship to Home Phase 4"

keywords are: , child, story, OMO-1467, Ship to Home Phase 4

- Description
*As* new OLM

*I want* to inform Stores when a S2H shipment has shipped

*So that* that stores remain in sync, consistent with existing legacy processing

+*Acceptance Criteria 1:*+
 * *Given* an order exists in new OLM with a S2H shipment 
 * *When* the S2H shipment moves to Shipped status
 * *Then* a message is published to the existing IBM MQ (same one used for Cancel messages)  for Stores to consume


+*Notes & Assumptions*+
 * Based off of cancel spike: OMO-1220 and related stories
 * This only applies when in Active mode, no Shipped messages should be published to the queue in Shadow mode
 * MQ is not consumed by stores directly, but a process owned by Fulfillment + Pickup team consumes messages and forwards them on to the appropriate store(s)
 * MQ should eventually replaced by Kafka or another solution, but while orders are still being processed by the legacy solution the Fulfillment + Pickup team does not want to change their processing to receive messages 2 different ways in the interim.
* Todd Miesfeld from Fulfillment + Pickup team told us about this Shipped status message for S2H while we were validating our first BOPUS thin slice;  this story was created to help us remember.

- Section  6.6: OMO-1372 - OLM Gateway OTS Order Detail Endpoint - Decrypt ShipTo encrypted values from nOLM

- Introduction:
This is a child story of epic OMO-1974, "Ship to Home Phase 4"

keywords are: child, story, OMO-1372, Ship to Home Phase 4

- Description
*As* OLM Gateway
*I want* nOLM OTS order-details response data that is specific to ship to home to be in readable format and add Protegrity 9 
*So that* it is consistent with the legacy data already in this table 

*Acceptance Criteria 1:*
 * Decrypt all encrypted values and provide those on nOLM OTS order-details response.

personInfoShipTo.firstName
personInfoShipTo.lastName

+*Notes & Assumptions*+
* These were removed from OMO-1319, which decrypted values applicable to BOPUS orders;  creating this story now to help us remember to come back to it for the first S2H thin slice we take up 
 * [https://miro.com/app/board/uXjVOU0EyYI=/?moveToWidget=3458764541855300275&cot=14] - Order Visibility design
 *  https://confluence.kohls.com:8443/display/OE/Protegrity+v9+Installation



=====================================================================
Document 7: OMO-2008 - Ship to Home Phase 5
=====================================================================
- Introduction:
Able to Fulfill STH SLSQ orders at EFC6

keywords are: parent, epic, OMO-2008, Ship to Home Phase 5

- Description
As OLM,

I want to be able to process and fulfill orders at EFC6 by using the Post Checkout service and the sourcing facade,

so that we could begin 
 # Using OLM to fulfill limited orders (10?) from EFC6 (re-visit all the nOLM microservices)
 # Able to use OLM to cancel (no re-sourcing and customer impact is limited)

 

Link to the Ship to Home Miro Board: [https://miro.com/app/board/uXjVNPa9pHc=/]

- Section  7.7: OMO-2124 - Investigate Shipment Confirmation API

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: , child, spike, OMO-2124, Ship to Home Phase 5

- Description
*As* the boundary between the Order domain and the domain of Customer Fulfillment
*I want to* Investigate the Shipment Confirmation API
*Because* we need to understand this integration before shipments can be invoiced

*This spike is ready for acceptance when:*
 # We build a spreadsheet documenting the request and response of the Shipment Confirmation API: expected values, required fields, error codes, etc{*}{{*}}
 # We understand and document its functionality at a high level for both confirmations and cancellation
 # We understand the channel in which this call happens today (We have been told that this is done via API for some EFCs and MQ for others)
 ## On a high level, get an understanding on if Customer Fulfillment has the bandwidth to switch from MQ to API for the other EFCs
 # If one exists, find the WSDL for this API
 # Create the following follow up stories:
 ## Store Fulfillment to support the shipment confirmation functionality (this can be a few spikes/stories, we can keep this iterative like we did with BOPUS APIs-basic happy path first, then error codes, then understanding cancel flows)
 ## EFC ACL to support routing Shipment Confirmation calls to either OMS or OLM (this can be a couple stories too if it seems too big to have all at once)

*Notes & Assumptions:*
 * [https://docs.google.com/spreadsheets/d/1LZ7nvTMLnTweTssJO_BHVqU4pk31ZgmdlwlzPexuSZo/edit#gid=0] Link to boundary request mapping
 * Master Miro Reference: [https://miro.com/app/board/uXjVPjzxRLY=/?moveToWidget=3458764575833473448&cot=14] 

- Section  7.7: OMO-2123 - Create empty EFC ACL application

- Introduction:
This is a child story of epic OMO-2008, "Ship to Home Phase 5"

keywords are: , child, story, OMO-2123, Ship to Home Phase 5

- Description
*As* the EFC ACL
*I want to* Create a new empty EFC ACL application
*So that* we can begin the interface between our internal Order domain and Customer Fulfillment's domain

*Acceptance Criteria 1:*
 * *Create* an empty application, using one of our existing applications as a reference
 ** Has all of the normal features: KADO, Java 21, deploys to review/staging/prod, runs locally, connects to our config server
 * EFC ACL is more of a description of the application, not the official, agreed upon, name. When naming the application, include ACL in the title (like order-acl and store-commerce-acl have), to make it clear this is a boundary application that we have hopes of eventually retiring once all orders are onto nOLM
 ** customer-fulfillment-acl
 ** efc-acl
 ** ship-to-home-acl (If it isn't clear, I am not good at naming things)

*Notes & Assumptions:*
 * [https://docs.google.com/spreadsheets/d/1LZ7nvTMLnTweTssJO_BHVqU4pk31ZgmdlwlzPexuSZo/edit#gid=0] Link to boundary request mapping
 * Master Miro Reference: [https://miro.com/app/board/uXjVPjzxRLY=/?moveToWidget=3458764575833473448&cot=14] 

- Section  7.7: OMO-2122 - Get EFC6 Kafka Connection Details for all Appropriate Environments

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2122, Ship to Home Phase 5

- Description
*As* the boundary between OLM and Customer Fulfillment
*I want to* Get EFC6 Connection Details for all Appropriate Environments
*Because* we need to publish to this topic

*This spike is ready for acceptance when:*
 # We work with the Customer Fulfillment Team to get all required connection details to connect to the Kafka topic used by EFC6 (dev/staging/prod)
 # We document this information somewhere for future stories

*Notes & Assumptions:*
 * [https://docs.google.com/spreadsheets/d/1LZ7nvTMLnTweTssJO_BHVqU4pk31ZgmdlwlzPexuSZo/edit#gid=0] Link to boundary request mapping
 * Master Miro Reference: [https://miro.com/app/board/uXjVPjzxRLY=/?moveToWidget=3458764575833473448&cot=14] 
 * Kafka Topic name is: *of_release_order_kafka*

- Section  7.7: OMO-2121 - Decide Kafka topic and format EFC ACL will consume from for EFC processing

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2121, Ship to Home Phase 5

- Description
*As* the boundary between Store Fulfillment and the EFC ACL
*I want to* Decide Kafka topic and format EFC ACL will consume from for EFC processing
*Because* we need to determine if we need a new topic or use an existing one for EFC processing

*This spike is ready for acceptance when:*
 # We decide if there is an existing topic/message we can utilize that Store Fulfillment publishes to, that the EFC ACL can consume from to send messages to the EFCs
 ## Consider the following:
 ### Will we need to make a call back to Order Create or Store Fulfillment for Order/Shipment information ([https://docs.google.com/spreadsheets/d/1LZ7nvTMLnTweTssJO_BHVqU4pk31ZgmdlwlzPexuSZo/edit#gid=0)]
 ### Would error retries on this existing topic cause any issues by current consumers
 ### WIll the EFC ACL have to do filtering on the messages published to this topic? If so, do we think the filtering will impact performance?
 # If there is not a topic yet, we propose a name for the new topic that would interface between Store Fulfillment and the EFC ACL and propose the message structure too
 # Create a story for Store Fulfillment to publish to the new topic (if applicable), and EFC ACL to consume from whatever topic is chosen.

*Notes & Assumptions:*
 * [https://docs.google.com/spreadsheets/d/1LZ7nvTMLnTweTssJO_BHVqU4pk31ZgmdlwlzPexuSZo/edit#gid=0] Link to boundary request mapping
 * Master Miro Reference: [https://miro.com/app/board/uXjVPjzxRLY=/?moveToWidget=3458764575833473448&cot=14] 

- Section  7.7: OMO-2117 - Investigate Red/Yellow fields for EFC6 Mapping

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2117, Ship to Home Phase 5

- Description
*As* the owner of ship 2 home orders
*I want to* Investigate Red/Yellow fields for EFC6 Mapping
*Because* we need to publish data to EFC6

*This spike is ready for acceptance when:*
 # Work with OMS and/or Customer Fulfillment to understand red/yellow fields required by EFC6:
 ## priority
 ## releaseNo
 ## extnPickTicketNo
 ## extnRG
 ## extnWMSInstType
 ## itemDesc
 # Based on 1. create up to two stories:
 ## story for providing the yellow/red fields that we should own internally
 ## story to have our EFC ACL application handle any fields we should not be the owner of

*Notes & Assumptions:*
 * Document with list of required red/yellow fields for EFC6: https://docs.google.com/spreadsheets/d/1LZ7nvTMLnTweTssJO_BHVqU4pk31ZgmdlwlzPexuSZo/edit#gid=0

- Section  7.7: OMO-2107 - Understand the message that goes to all EFCs

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2107, Ship to Home Phase 5

- Description
*We should* analyze all the messages that goes to all EFCs
*Because* we want to identify a consistent way to send order message to all EFCs.

*We are done when* 
 # Differences are identified and documented
 # A design approach is proposed on how we would send the messages to all EFCs regardless of the version of the warehouse management system. e.g. Do we want to move existing from XML to Json format? Do we need to build a ACL to do the conversion? Do we need to work with Customer Fulfillment about providing information that isn't our domain (Item data via PICs)

Notes:

1. This spike isn't about understanding a full mapping for each EFC between OMS and EFCs, it is focused on commonality in message structure and format

- Section  7.7: OMO-2091 - Understand changes to populating OverallTotals for Ship To Home orders

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2091, Ship to Home Phase 5

- Description
*As* the OLM team
*I want to* verify if we need to change how we populate our fields within OverallTotals on the Order model
*Because* we need to find necessary changes to take on STH orders.

*This spike is ready for acceptance when:*
 # We have clarity on the calculations for OverallTotals for ship to home orders
 # If work is small, make changes so overallTotals is working with a STH order

*Notes & Assumptions:*
 * [https://confluence.kohls.com:8443/display/OE/OMO-1975%3A+EFC+Post-Cancellation+GIV+Interactions] – page for EFC information like shipNode.
 * Currently there are several fields in OverallTotals that stay set to 0, still spike is to identify if we finally need to add calculation logic for some of these currently zeroed out fields
 * The OTS OrderDetails call would be a good mechanism to understand how Sterling populates OverallTotals for s2h, as most/all of those fields are exposed on that endpoint

- Section  7.7: OMO-2088 - Understanding Mapping for EFC6 with Customer Fulfillment

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2088, Ship to Home Phase 5

- Description
*As the* OLM system,

*I want to* understand the mapping process for EFC6 with Customer Fulfillment,

*because* it is crucial to have seamless integration for fulling S2H orders

 

*This spike is ready for acceptance when:*
 # We have a clear understanding of how EFC6 interfaces with the Customer Fulfillment system.
 # A detailed mapping of the data flow and processes between EFC6 and Customer Fulfillment has been documented.

- Section  7.7: OMO-2062 - Research Existing Checkout team integration with TVS

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2062, Ship to Home Phase 5

- Description
*As* the OLM system,

*I want to* investigate the Checkout team's method for TVS calls during repricing,

*Because* we need to understand their process to create a direct TVS integration without splitting order lines.

*Acceptance Criteria:*
 # Understand the Checkout team's method for TVS calls.
 # Identify why they split order lines.
 # Propose a direct TVS call method avoiding line splits.

*Notes:*
 * Aim to simplify our process.
 * Work with the Checkout team for insights.
 * Document findings.
 

- Section  7.7: OMO-2053 - Handling Earned KC Values in S2H Orders

- Introduction:
This is a child story of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, story, OMO-2053, Ship to Home Phase 5

- Description
*As an* OLM Engineer,
*I want to* correctly capture earned KC values in S2H orders,
*So that* customers receive accurate invoices

*Acceptance Criteria 1:*
 * *Given* a S2H order is processed without the earned KC value,
 * *When* a second message with earned KC information arrives,
 * *Then* the OLM system should combine this data to complete the order invoice.

*Acceptance Criteria 2:*
 * *Given* both the initial S2H order and the earned KC information are received,
 * *When* these are processed by OLM,
 * *Then* the invoice should accurately reflect the earned KC.

*Notes:*
 * Need to confirm with Chinmaya regarding the separate KC value message for S2H orders.
 * Coordination with the Checkout team might be necessary for message handling.

- Section  7.7: OMO-2048 - Integrate with Other EFCs (Phase X)

- Introduction:
This is a child story of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, story, OMO-2048, Ship to Home Phase 5

- Description
*As the OLM Sourcing Facade,*

*I want to* integrate with other EFCs,

*So that* I can fulfill orders from multiple EFCs effectively.

*Acceptance Criteria 1:*

*Given* the OLM Sourcing Facade is operational,

*When* it receives an order,

*Then* it should be able to select the most suitable EFCs for fulfillment based on current sourcing criteria.

*Notes & Assumptions:*
 * Ensure seamless integration with other EFCs without disrupting existing processes.
 * Coordination with EFCs is essential for consistent fulfillment strategies.

- Section  7.7: OMO-2047 - Develop Scheduler for Auto-Cancelling Orders with Delayed EFC Updates

- Introduction:
This is a child story of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, story, OMO-2047, Ship to Home Phase 5

- Description
*Description:*
*As the* OLM system,
*I want to* build a scheduler that automatically cancels orders if there are no updates from EFC after a specified number of days,
*So that* the system remains efficient and responsive to delays.

*Acceptance Criteria 1:*
*Given* an order has not received any updates from EFC within the specified timeframe,
*When* this time limit is reached,
*Then* the scheduler should automatically initiate cancellation of the order.

*Acceptance Criteria 2:*
*Given* the scheduler is operational,
*When* it detects an order eligible for cancellation,
*Then* it should process the cancellation and update the order status accordingly.

*Notes & Assumptions:*
 * The timeframe for awaiting updates (x days) should be determined based on average processing times and customer service standards.
 * The scheduler should be robust and reliable, ensuring no false cancellations occur.

- Section  7.7: OMO-2046 - Identifying Automatic Order Cancellation After Delayed Updates from EFC

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2046, Ship to Home Phase 5

- Description
*Description:*
*As the* OLM system,
*I want to* identify a method to automatically cancel orders after a certain number of days if no updates are received from EFC,
*Because* timely updates are crucial, and long delays need a response.

*This spike is ready for acceptance when:*
 * *We have a clear strategy* for automatically cancelling orders that lack updates from EFC after a specified time.
 * *We have documented* the triggers and conditions when these cancellations occur.

*Notes & Assumptions:*
 * The time frame for awaiting updates from EFC before triggering cancellation needs to be reasonable and aligned with customer expectations.
 * Ensure that the mechanism for this process is reliable and integrates smoothly with the existing OLM system.

- Section  7.7: OMO-2045 - Enhance Cancel Shipment Processor for EFC Confirmations

- Introduction:
This is a child story of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, story, OMO-2045, Ship to Home Phase 5

- Description
*Description:*
*As the* Cancel Shipment Processor,
*I want to* receive and process shipment cancellation confirmations from EFC,
*So that* I can keep the order status up to date and manage cancellations accurately.

*Acceptance Criteria 1:*
*Given* a cancellation confirmation is received from EFC,
*When* this information is processed,
*Then* I should accurately update the order's cancellation status.

*Acceptance Criteria 2:*
*Given* the order status needs to be updated,
*When* I process the EFC confirmation,
*Then* it should ensure the system reflects the correct current status of the order.

*Notes & Assumptions:*
 * The process should be prompt to avoid any discrepancies in order status.
 * The updates should be accurately reflected across the system for consistency.

- Section  7.7: OMO-2043 - XML Converter Update for EFC6 Orders

- Introduction:
This is a child story of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, story, OMO-2043, Ship to Home Phase 5

- Description
*As the* OLM team,
*I want to* explore how the XML Converter should be updated for EFC6,
*So that* it converts any new entities or attributes in existing entities correctly

*Acceptance:*
 * Make changes for handling STH Orders:
 ** Hardcode shipNode to EFC6's shipNode (849)
 ** Set fulfillmentMethod to STH when not Bopus or VGC
 * Clarify these changes with STH fulfillment as it relates to EFC6 (if this is applicable to the specific values for EFCs)

- Section  7.7: OMO-2042 - VGC Activator Review for EFC6 Compatibility

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2042, Ship to Home Phase 5

- Description
*Description:*
*As the* OLM team,
*I want to* assess the VGC Activator's functionality with EFC6 orders,
*So that* it activates gift cards effectively in this context.

*Acceptance:*
 * Document changes needed for the VGC Activator in the EFC6 setup.
 * Describe how it integrates with EFC6 order processing.

- Section  7.7: OMO-2041 - Enhancing Store Fulfillment for EFC6

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2041, Ship to Home Phase 5

- Description
*Description:*
*As the* OLM team,
*I want to* determine what needs to change in Store Fulfillment for EFC6 orders,
*So that* store-based fulfillment aligns with EFC6 needs.

*Acceptance:*
 * Identify adjustments for the Store Fulfillment service for EFC6 order handling.
 * Clarify its operational role with EFC6.
 * Create any follow-up stories or spikes

- Section  7.7: OMO-2040 - Store Commerce Proxy Adaptation for EFC6

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2040, Ship to Home Phase 5

- Description
*Description:*
*As the* OLM team,
*I want to* figure out changes for the Store Commerce Proxy with EFC6 orders,
*So that* it facilitates smooth EFC6 transactions.

*Acceptance:*
 * List required modifications for the Store Commerce Proxy in the EFC6 environment.
 * Explain how it functions with EFC6 order processing.

- Section  7.7: OMO-2039 - Store Commerce ACL Alignment with EFC6

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2039, Ship to Home Phase 5

- Description
*Description:*
*As the* OLM team,
*I want to* identify how the Store Commerce ACL should be tailored for EFC6,
*So that* it supports EFC6 orders effectively.

*Acceptance:*
 * Write down necessary updates for the Store Commerce ACL in EFC6 scenarios.
 * Describe its role in EFC6 order management.

- Section  7.7: OMO-2038 - Shipment Fulfillment Processor Update for EFC6

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2038, Ship to Home Phase 5

- Description
*Description:*
*As the* OLM team,
*I want to* explore adjustments needed in the Shipment Fulfillment Processor for EFC6,
*So that* it processes EFC6 shipments.

*Acceptance:*
 * Document changes for handling EFC6 shipments in the Shipment Fulfillment Processor.
 * Clarify its integration with EFC6 fulfillment.

- Section  7.7: OMO-2037 - Order Create Process Review for EFC6

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2037, Ship to Home Phase 5

- Description
*Description:*
*As the* OLM team,
*I want to* assess the Order Create microservice for updates with EFC6 orders,
*So that* order creation aligns with EFC6's requirements.

*Acceptance:*
 * Detail necessary changes for creating orders in the EFC6 framework.
 * Explain how it interacts with the EFC6 fulfillment process.

*Notes:*
 # Link to the STH flow
 # Contacts for the customer fulfillment team: [~TKA02PE] (PM)

- Section  7.7: OMO-2036 - Updating OLM Payment Cancel for EFC6

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2036, Ship to Home Phase 5

- Description
*Description:*
*As the* OLM team,
*I want to* determine how the OLM Payment Cancel needs to be modified for EFC6 orders,
*So that* payment cancellations are handled correctly.

*Acceptance:*
 * List changes for the OLM Payment Cancel service in the context of EFC6.
 * Describe its function in the EFC6 payment process.

- Section  7.7: OMO-2035 - OLM Gateway Compatibility with EFC6

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2035, Ship to Home Phase 5

- Description
*Description:*
*As the* OLM team,
*I want to* identify necessary changes in the OLM Gateway for EFC6 integration,
*So that* it functions smoothly with EFC6 order handling.

*Acceptance:*
 * Outline needed updates for the OLM Gateway in the EFC6 setup.
 * Clarify its role in managing EFC6 orders.

- Section  7.7: OMO-2034 - Adapting Invoice for EFC6 Orders

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2034, Ship to Home Phase 5

- Description
*Description:*
*As the* OLM team,
*I want to* identify updates needed in the Invoice microservice for EFC6 order processing,
*So that* invoicing is accurate and timely for these orders.

*Acceptance:*
 * Document required modifications for EFC6-related invoicing.
 * Explain how it will integrate with the EFC6 order process.

- Section  7.7: OMO-2033 - Tailoring Hard Totals for EFC6 Order Processing

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2033, Ship to Home Phase 5

- Description
*As the* OLM team,
*I want to* pinpoint what needs to be changed in Hard Totals for EFC6 orders,
*So that* all calculations remain accurate.

*Acceptance:*
 * Identify adjustments for accurate total calculations in EFC6 orders.
 * Describe how it will work with EFC6's order system.

- Section  7.7: OMO-2032 - Checking Expire Shipment Processor with EFC6

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2032, Ship to Home Phase 5

- Description
*As the* OLM team,
*I want to* figure out changes for the Expire Shipment Processor in the EFC6 context,
*So that* it handles order expirations correctly.

*Acceptance:*
 * Write down changes for managing EFC6 order expirations.
 * Clarify its integration with EFC6's fulfillment process.

- Section  7.7: OMO-2031 - Error Reprocessor's Readiness for EFC6 Orders

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2031, Ship to Home Phase 5

- Description
*Description:*
*As the* OLM team,
*I want to* evaluate the Error Reprocessor with EFC6 orders,
*So that* any reprocessing is done without issues.

*Acceptance:*
 * Ensure it reprocesses EFC6 order errors effectively.
 * Pinpoint areas for enhancement.

- Section  7.7: OMO-2030 - Error Consumer Effectiveness in EFC6-Integrated Environment

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2030, Ship to Home Phase 5

- Description
*As the* OLM development team,
*I want to* evaluate the Error Consumer microservice within the context of EFC6 integration,
*Because* robust error handling is necessary for the smooth operation of limited order processing.

*This spike is ready for acceptance when:*
 * *We have assessed* the Error Consumer's capability to manage errors in an EFC6-centric workflow.
 * *We have documented* any modifications needed to ensure its effectiveness.

- Section  7.7: OMO-2029 - Customer Notification Compatibility with EFC6 Order Processing

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2029, Ship to Home Phase 5

- Description
*Description:*
*As the* OLM development team,
*I want to* assess the Customer Notification microservice for compatibility with EFC6 order processing,
*Because* it's essential to maintain effective customer communication during limited order fulfillment.

*This spike is ready for acceptance when:*
 * *We ensure* the Customer Notification system functions correctly with the order flow involving EFC6.
 * *We identify* any adjustments needed for working with the new fulfillment process.

- Section  7.7: OMO-2028 - Alignment of Cancel Shipment Processor with EFC6 Fulfillment

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2028, Ship to Home Phase 5

- Description
*As the* OLM development team,
*I want to* make sure the Cancel Shipment Processor microservice aligns with EFC6's fulfillment processes,
*Because* accurate cancellation processing is critical when using OLM to fulfill limited orders from EFC6.

*This spike is ready for acceptance when:*
 * *We have verified* that the Cancel Shipment Processor can handle cancellations without re-sourcing or significant customer impact.
 * *We have outlined* any necessary updates to integrate seamlessly with EFC6.

- Section  7.7: OMO-2027 - Integration with EFC6

- Introduction:
This is a child story of epic OMO-2008, "Ship to Home Phase 5"

keywords are: efc6, child, story, OMO-2027, Ship to Home Phase 5

- Description
*Description:*

*As the* EFC ACL,

*I want to* integrate with EFC6,

*So that* we can efficiently manage and process these orders within the set capacity.

 

*Acceptance Criteria 1:*

*Given* a shipment is identified for EFC6 fulfillment,

*When* it is sent to the EFC ACL,

*Then* the message should be converted into the XML format expected by EFC6* (see note)

 

*Acceptance Criteria 2:*

*Given* a shipment is sent to the EFC ACL,

*After* it is converted to the expected XML format

*And* a newly added feature flag disables publishing to EFCs**

*Then* no message should be published to the kafka topic for EFC6 (we want prod to be like this for now)

 

*Acceptance Criteria 3:*

*Given* a shipment is sent to the EFC ACL,

*After* it is converted to the expected XML format

*And* a newly added feature flag is enabled, but *does not* list publishing to EFC6**

*Then* no message should be published to the kafka topic for EFC6

 

*Acceptance Criteria 4:*

*Given* a shipment is sent to the EFC ACL,

*After* it is converted to the expected XML format

*And* a newly added feature flag is enabled, and *does* list publishing to EFC6**

*Then* a message should be published to the kafka topic for EFC6 (we want staging like this for now)

*Notes & Assumptions:*
 * Integration should be tested for accuracy
 * https://jiradc.kohls.com:8443/browse/OMO-2122 should be done before working on this, it will have connection details
 * This also cannot be worked on until we have an EFC ACL, with messages being published to it from our core OLM system
 * *Use this doc to find 'green fields' required for EFC6 [https://docs.google.com/spreadsheets/d/1LZ7nvTMLnTweTssJO_BHVqU4pk31ZgmdlwlzPexuSZo/edit#gid=0]
 * **The idea is to have something similar to the skip-repricing feature flag found on order create, where not only can you enable/disable the feature, you can also enable it for specific EFCs (for now EFC6)

- Section  7.7: OMO-1989 - Assess Feasibility of 30-Min Grace Period in OLM

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-1989, Ship to Home Phase 5

- Description
*As an OLM Engineer,*

*I want to* review the Self Service use case,

*So that* I can understand the feasibility of moving the 30-minute grace period from Checkout to OLM.

{*}Acceptance Criteria{*}:
 * *Given* the current implementation of the 30-minute grace period in the Checkout system,
 * *When* reviewing the Self Service use case,
 * *Then* assess the technical feasibility of integrating this grace period into OLM.

{*}Notes & Assumptions{*}:
 * The review should consider the technical implications and challenges.
 * We should work with the Checkout team to maintain customer experience and order processing
 * We should understand at a high level what other downstream integrations are impacted assuming control of this grace period


=====================================================================
Document 1: OLM (OMS Re-imagined)
=====================================================================
- Introduction:
This is confluence page converted to plain text.

keywords are: , documentation, miro

- Description
Documentation Guidelines

Product level : LucidChart

https://lucid.app/lucidchart/d39c6cbb-3a86-443d-8b92-c107a71c205e/edit?invitationId=inv_1fcf9add-4779-4f60-b2b4-661728416573&page=F-ILaH5R.W4B#

Pairing/Story Level : Miro 

https://miro.com/app/board/o9J_l0__F8Y=/

(For Collaboration / brainstrom / multiple approaches for pairs to work
on)

(Engg Miro working board)

Feature Level Work Flows : Miro

https://miro.com/app/board/uXjVOvSEEsE=/

e.g. shadow mode assign user flow, shadow mode in general, shadow mode
key mapping

Feature Level Notes: Confluence

1.  having Links to (1) and (3) 
2.  having findings or reference to legacy documentation
3.  Middleware details
4.  Contracts / API documentation, link to postman or swagger



=====================================================================
Document 2: OMS-1980 Analyze Checkout's Order Data
=====================================================================
- Introduction:
This is confluence page converted to plain text.

keywords are: , 00, integer, boolean, 0, xml, mapping, 1, eger, 57921567207500001, 2023, statuscode, 450, createdtmst, 30, 895, 19, kohlscash, extn, 11, dayofmonth, hourofday, 15, 32, profiledetails, 581, shipmentid, 620, haskcc, 20201119, 135445000, timestamp, 31566349290001, 2, taxableflagy, cartid, itemdata, lastupdatedtmst, billaddress, orderdata, kohlscashtable, orderline, linetaxes, personinfoshipto, orderdates, 3000000017481942, shipofferprice, 422, itemid, 180, apofpo, poboxaddr, expcheckoutind, addr1, postalcode, primelinenum, shippingcost, ispriceoverride, addressid, paymentdata, cardstatus, torrequired, dec, email, rewards, orde, 81781566440050001, checkout, extnlinereference1, reference1, reference2, addressline2, addressline3, countryus, customattributes, orderid, orderpricedetails, 5817, items, itemmetadata, slimfit, preferredaddress, expeditedcheckouteligible, itempriceid, payments

- Description
Table of Contents

Checkout Json→XML Conversion Code

1.  https://cicd-gerrit.kohls.com:8443/gerrit/#/admin/projects/kos/cnc-batch
    1.  Batch code ... probably not very useful to us
2.  https://cicd-gerrit.kohls.com:8443/gerrit/#/admin/projects/kos/cnc-services
    1.  Checkout code repo.
    2.  Relevant class with conversion code:
        1.  (module) kos-order
            1.  (module) kos-order-services 
                1.  com.kohls.order.util.transform.RepriceResponseConverter
3.  If you are having trouble downloading the repos, you can follow this
    guide which helped me (Luke):
    1.  https://medium.com/codex/git-authentication-on-macos-setting-up-ssh-to-connect-to-your-github-account-d7f5df029320

Examples

XML OrderNo 6001380111 Expand source

    <?xml version="1.0" encoding="UTF-8"?>
    <Order BillToID="" CustomerEMailID="IBbPSMXwS6QNr8fMPeZ37U6ccSfDkca8AxSqpxdf0eK2uQ==" DocumentType="0001"
           EnteredBy="12345678" EnterpriseCode="KOHLS.COM" OrderDate="2023-11-20T13:51:21-05:00" OrderNo="6001380111"
           CartId="57601538026860001" BuyerUserId="10017129292" EntryType="WEB">
        <HeaderCharges>
            <HeaderCharge ChargeAmount="8.95" ChargeCategory="Shipping" ChargeName="Shipping1" Reference="00-53186">
                <Extn ExtnLineReference="1"/>
            </HeaderCharge>
        </HeaderCharges>
        <HeaderTaxes>
            <HeaderTax ChargeCategory="ShippingTax" ChargeName="Shipping1" Tax="0.45" TaxName="shipping tax"
                       TaxPercentage="0.050279" TaxableFlag="Y"/>
        </HeaderTaxes>
        <OrderLines>
            <OrderLine CarrierServiceCode="Standard Ground" GiftFlag="N" GiftWrap="N" LineType="DSV" OrderedQty="1"
                       PackListType="" PrimeLineNo="1" ShipNode="" SubLineNo="1">
                <Extn ExtnCurrentItemStatus="20" ExtnDSVCost="" ExtnGiftFrom="" ExtnGiftTo="" ExtnGiftMessage=""
                      ExtnIsHazardous="N" ExtnLineGiftReceiptID="G" ExtnLineReference="1" ExtnShipAlone="" ExtnStoreId=""
                      ExtnTaxableAmount="34.99" ExtnActualTaxableAmount="34.99" ExtnWrapTogetherGroupCode=""
                      ExtnCommissionPerc="" ExtnDummySKUID="" ExtnItemClass="" ExtnProductType="" ExtnColorDesc="Black"
                      ExtnSizeDesc="" ExtnExtendedDesc="" ExtnWebID="979796" ExtnPriProductType=""
                      ExtnATGShipGrpId="89421542054810001" ExtnGiftRegistryID="" ExtnGiftRegistryType=""
                      ExtnGiftRegistryName=""/>
                <Item ItemID="92417909" ItemShortDesc="Journee Collection Oba Sandals" ProductClass="Good"
                      UnitOfMeasure="EACH" SKUInventoried="true" UPCCode="870250792570" TaxProductCode="61075"/>
                <LinePriceInfo IsPriceLocked="Y" ListPrice="34.99" RetailPrice="34.99" TaxableFlag="Y" UnitPrice="34.99"/>
                <LineCharges/>
                <LineTaxes>
                    <LineTax ChargeCategory="Tax" ChargeName="Tax" Reference1="" Reference2="" Reference3="" Tax="1.75"
                             TaxName="SALES_TAX" TaxPercentage="0.05" TaxableFlag="Y"/>
                </LineTaxes>
                <PersonInfoShipTo AddressLine1="123 Carroll St" AddressLine2="" AddressLine3="" City="Waukesha" Country="US"
                                  DayPhone="4082804655" FirstName="IBaXsjERWBbSOhohgDxYjnnw"
                                  LastName="IBYdeXkohViYoRfSW+kQR6TB" State="WI" TaxGeoCode="00" ZipCode="53186" EmailID="">
                    <Extn ExtnIsPOBox="N" ExtnIsMilitary="N"/>
                </PersonInfoShipTo>
                <OrderDates>
                    <OrderDate CommittedDate="2023-12-04T01:04:07-05:00" DateTypeId="KOHLS_SHIP_DATE"
                               ExpectedDate="2023-11-23T01:04:07-05:00" RequestedDate="2023-12-04T01:04:07-05:00"/>
                </OrderDates>
                <CustomAttributes/>
            </OrderLine>
            <OrderLine CarrierServiceCode="Standard Ground" GiftFlag="N" GiftWrap="N" LineType="" OrderedQty="1"
                       PackListType="" PrimeLineNo="2" ShipNode="" SubLineNo="1">
                <Extn ExtnCurrentItemStatus="20" ExtnDSVCost="" ExtnGiftFrom="" ExtnGiftTo="" ExtnGiftMessage=""
                      ExtnIsHazardous="N" ExtnLineGiftReceiptID="G" ExtnLineReference="1" ExtnShipAlone="" ExtnStoreId=""
                      ExtnTaxableAmount="29.99" ExtnActualTaxableAmount="29.99" ExtnWrapTogetherGroupCode=""
                      ExtnCommissionPerc="" ExtnDummySKUID="" ExtnItemClass="" ExtnProductType="" ExtnColorDesc="Multi/None"
                      ExtnSizeDesc="" ExtnExtendedDesc="" ExtnWebID="1010610" ExtnPriProductType=""
                      ExtnATGShipGrpId="89421542054810001" ExtnGiftRegistryID="" ExtnGiftRegistryType=""
                      ExtnGiftRegistryName=""/>
                <Item ItemID="92526137" ItemShortDesc="OXO Good Grips Salt Grinder" ProductClass="Good" UnitOfMeasure="EACH"
                      SKUInventoried="true" UPCCode="" TaxProductCode="76800"/>
                <LinePriceInfo IsPriceLocked="Y" ListPrice="29.99" RetailPrice="29.99" TaxableFlag="Y" UnitPrice="29.99"/>
                <LineCharges/>
                <LineTaxes>
                    <LineTax ChargeCategory="Tax" ChargeName="Tax" Reference1="" Reference2="" Reference3="" Tax="1.5"
                             TaxName="SALES_TAX" TaxPercentage="0.05" TaxableFlag="Y"/>
                </LineTaxes>
                <PersonInfoShipTo AddressLine1="123 Carroll St" AddressLine2="" AddressLine3="" City="Waukesha" Country="US"
                                  DayPhone="4082804655" FirstName="IBaXsjERWBbSOhohgDxYjnnw"
                                  LastName="IBYdeXkohViYoRfSW+kQR6TB" State="WI" TaxGeoCode="00" ZipCode="53186" EmailID="">
                    <Extn ExtnIsPOBox="N" ExtnIsMilitary="N"/>
                </PersonInfoShipTo>
                <OrderDates>
                    <OrderDate CommittedDate="2023-12-04T01:04:07-05:00" DateTypeId="KOHLS_SHIP_DATE"
                               ExpectedDate="2023-11-23T01:04:07-05:00" RequestedDate="2023-12-04T01:04:07-05:00"/>
                </OrderDates>
                <CustomAttributes/>
            </OrderLine>
        </OrderLines>
        <PersonInfoBillTo AddressLine1="3020 Threecastles Way" AddressLine2="" AddressLine3="" City="Dublin" Country="US"
                          DayPhone="1231231234" FirstName="IBYg8BLuqekIXJ2qpuG5jU43" LastName="IBYg8BLuqekIXJ2qpuG5jU43"
                          State="CA" ZipCode="IBYOXQvHuWnNVzGp08P15llZ"/>
        <PaymentMethods>
            <PaymentMethod PaymentType="KPP" PaymentReference1="10000000000000000004"
                           PaymentReference2="pi_ProETeRzRaUlajRMCtsRxt63KDgSDw" MaxChargeLimit="77.63"
                           CreditCardType="PAYPAL" UnlimitedCharges="N">
                <PaymentDetailsList>
                    <PaymentDetails AuthAmount="77.63" AuthCode="" AuthReturnCode="" AuthReturnFlag="" AuthReturnMessage=""
                                    AuthTime="" AuthorizationExpirationDate=""
                                    AuthorizationID="pi_ProETeRzRaUlajRMCtsRxt63KDgSDw" CVVAuthCode="" ChargeSequence=""
                                    ChargeType="AUTHORIZATION" PaymentType="KPP" HoldAgainstBook="Y" ProcessedAmount="77.63"
                                    Reference1="" Reference2="" RequestAmount="77.63" RequestId="89421542054810001"/>
                </PaymentDetailsList>
            </PaymentMethod>
        </PaymentMethods>
        <Extn ExtnVersion="1.3">
            <KohlsOrderKCDetailsList>
                <KohlsOrderKCDetails IsLoyaltyPilotCust="N" LKCAmountKCC="" LKCAmountNonKCC="" KCCouponNo=""
                                     KCCouponEventID="62489" KCEventEarnAmount="10.0" KCQualifyingAmount="64.98"
                                     KCTransAmountActivateTol="10.0" KCCouponAlgorithm=""/>
            </KohlsOrderKCDetailsList>
            <KOHLSCashTableList/>
        </Extn>
        <CustomAttributes OriginatorID="66.232.236.102" KohlsRewardsEarned="0.0"/>
    </Order>

Json OrderId 6001380492 Expand source

    {
      "orderId": "6001380492",
      "cartId": "77991566397930002",
      "profileId": "3000000017481942",
      "statusCode": "PENDING_SUBMISSION",
      "orderType": "NORMAL",
      "orderPriceDetails": {
        "merchOriginalPrice": 45.0,
        "merchPromoPrice": 45.0,
        "merchOfferPrice": 45.0,
        "shipOriginalPrice": 8.95,
        "shipOfferPrice": 8.95,
        "giftWrapPrice": 0.0,
        "surchargeOriginalPrice": 0.0,
        "surchargeOfferPrice": 0.0,
        "merchTax": 4.22,
        "giftWrapTax": 0.0,
        "surchargeTax": 0.0,
        "taxFee": 0.0,
        "tax": 4.22,
        "netTotal": 58.17,
        "savings": 0.0
      },
      "channel": "WEB",
      "items": [
        {
          "itemId": "57921567207500001",
          "shipmentId": "57921567207500001",
          "skuId": "92048838",
          "productId": "883645",
          "originalOrderedQuantity": 0,
          "orderedQuantity": 1,
          "cancelledQuantity": 0,
          "displayPriceId": 57921567207500001,
          "statusCode": "initial",
          "registryInd": false,
          "bossInd": "false",
          "bopusInd": "false",
          "itemData": {
            "subClassNoPropertyName": "084",
            "fraudRisk": "Low",
            "itemMetaData": {
              "size": "14.5-32/33",
              "color": "Light Blue",
              "imageURL": "https://media.kohlsimg.com/is/image/kohls/883645_Light_Blue?wid=180&hei=180&op_sharpen=1",
              "seoURL": "/product/prd-883645/croft-barrow-slim-fit-solid-point-collar-dress-shirt.jsp",
              "upcNumber": "400920488382",
              "displayName": "Croft & Barrow® Slim-Fit Solid Point-Collar Dress Shirt",
              "specialSKUTypeCode": "N",
              "hazardous": false,
              "taxCode": "61000",
              "deptNo": "251",
              "packSlipDescription": "C&B Slim-Fit Dress Shirt",
              "isShipAlone": false,
              "productType": "OTHERS",
              "isDirectShipSku": false,
              "upcCode": "400920488382",
              "imageHeight": 180,
              "imageWidth": 180,
              "imageAltText": "Croft and Barrow Slim-Fit Solid Point-Collar Dress Shirt",
              "isBopusEligible": false,
              "isBossEligible": false,
              "taxExempt": false,
              "fromAddress": {
                "id": "fromAddr1",
                "preferredAddress": false,
                "expeditedCheckoutEligible": false,
                "apoFpo": false,
                "poBoxAddr": false,
                "expCheckoutInd": 0,
                "addr1": "fromAddr1",
                "city": "Middletown",
                "state": "OH",
                "postalCode": "45044",
                "county": "00"
              },
              "departmentName": "Clothing",
              "categoryName": "Tops",
              "subCategoryName": "Shirts & Blouses",
              "webExclusive": false,
              "avgRating": "2.0",
              "ratingCount": 4
            },
            "skuType": 0,
            "giftReceiptIncluded": false,
            "giftTogether": false,
            "selfRegistryAddr": false,
            "primeLineNum": 0,
            "storeClearance": false
          },
          "itemDisplayPrice": {
            "itemPriceId": 57921567207500001,
            "itemId": 57921567207500001,
            "saleInd": false,
            "clearanceInd": false,
            "originalOrderedQuantity": 0,
            "quantity": 1,
            "cancelledQuantity": 0,
            "unitRegularPrice": 45.0,
            "unitSalePrice": 45.0,
            "shipOfferPrice": 0.0,
            "extendedSalePrice": 45.0,
            "extendedPromoPrice": 45.0,
            "extendedOfferPrice": 45.0,
            "extendedTaxablePrice": 45.0,
            "unitSurchargePrice": 0.0,
            "extendedSurchargePrice": 0.0,
            "itemTaxRate": 0.09375,
            "itemTaxAmount": 4.22,
            "itemTaxWithFeeTaxAmount": 4.22,
            "surchargeTaxRate": 0.0,
            "surchargeTaxAmount": 0.0,
            "regularPriceLabel": "REGULAR",
            "itemPriceModifiers": [],
            "primeLineNum": 1,
            "taxFeeAmount": 0.0,
            "shippingCost": 8.95,
            "taxAmtIncludingFee": 0.0,
            "isPriceOverride": false,
            "statusCode": "initial"
          },
          "itemPriceGroupDetails": [],
          "itemDisplayOrder": 1,
          "shippingCost": 8.95,
          "efcAvailableQuantity": 199906
        }
      ],
      "payments": [
        {
          "paymentId": "57921567207500001",
          "paymentType": "CreditCard",
          "amount": 58.17,
          "authorizedAmt": 58.17,
          "reversalAmount": 0.0,
          "statusCode": "7",
          "payInstrNumber": "AJgz0CRcqT6I1111",
          "sendInternalTokenToOms": false,
          "payInstrPin": "222",
          "payInstrType": "visa",
          "nameOnPayInstr": "test",
          "payInstrExpMon": "01",
          "payInstrExpYear": "2025",
          "addressId": "57921567207500001",
          "paymentData": {
            "reversedAmount": 0.0,
            "initialBalance": 0.0,
            "appliedPrice": 0.0,
            "appliedFee": 0.0,
            "appliedSurcharge": 0.0,
            "remainingBalance": 0.0,
            "initialAuthAmount": 0.0
          },
          "cardStatus": [
            {
              "authReversalDone": false,
              "mostValueCustomer": false,
              "rewardBalance": 0.0,
              "latest": false,
              "persisted": false,
              "storeStan": "865074",
              "torRequired": true,
              "amount": 0.0,
              "invoice": "2350",
              "errorMessage": "SocketTimeoutException has occured in the Service Call",
              "terminalNumber": "0032",
              "transactionId": "3222350",
              "transactionSuccess": true,
              "pendingAuthorization": true,
              "transactionTimestamp": "Dec 19, 2023 3:32:30 PM",
              "transactionType": "Sale"
            }
          ],
          "createdTmst": {
            "year": 2023,
            "month": 11,
            "dayOfMonth": 19,
            "hourOfDay": 15,
            "minute": 32,
            "second": 30
          },
          "lastUpdatedTmst": {
            "year": 2023,
            "month": 11,
            "dayOfMonth": 19,
            "hourOfDay": 15,
            "minute": 32,
            "second": 30
          }
        }
      ],
      "shipAddrMap": {
        "57921567207500002": {
          "addressType": "shipping",
          "id": "57921567207500002",
          "preferredAddress": true,
          "expeditedCheckoutEligible": true,
          "apoFpo": false,
          "poBoxAddr": false,
          "availableCounties": [
            {}
          ],
          "postalCodeExt": "5124",
          "expCheckoutInd": 0,
          "firstName": "TEST",
          "lastName": "User",
          "addr1": "620 N Macarthy Blvd",
          "addr2": "Site 620",
          "city": "Milpitas",
          "state": "CA",
          "postalCode": "95035",
          "county": "00",
          "countryCode": "US",
          "phoneNumber": "6564667666"
        }
      },
      "storeAddressMap": {},
      "shipmentInfos": [
        {
          "addressId": "57921567207500002",
          "shippingMethod": "STD",
          "shipmentPriceDetails": {
            "shipmentId": 57921567207500001,
            "shipmentPriceId": 57921567207500001,
            "originalPrice": 8.95,
            "offerPrice": 8.95,
            "taxRate": 0.0,
            "taxAmount": 0.0,
            "isPriceOverride": false
          },
          "shipmentId": "57921567207500001",
          "statusCode": "INITIAL",
          "minShipDt": "Dec 25, 2023 1:07:16 PM",
          "maxShipDt": "Jan 3, 2024 1:07:16 PM",
          "giftWrapCount": 0,
          "shipmentData": {
            "shipCutOffMsg": "Will arrive by Christmas",
            "shipCutOffDate": "2023-12-23T16:35:59-05:00",
            "freeShippingThresholdDelta": 0.0,
            "createShipment": false,
            "eliteFreeShipping": false
          },
          "createdTmst": {
            "year": 2023,
            "month": 11,
            "dayOfMonth": 19,
            "hourOfDay": 15,
            "minute": 32,
            "second": 30
          },
          "lastUpdatedTmst": {
            "year": 2023,
            "month": 11,
            "dayOfMonth": 19,
            "hourOfDay": 15,
            "minute": 32,
            "second": 30
          },
          "sequence": 0,
          "fulfillmentType": "HARDGOOD"
        }
      ],
      "billAddress": {
        "addressType": "billing",
        "id": "57921567207500001",
        "preferredAddress": false,
        "expeditedCheckoutEligible": true,
        "apoFpo": false,
        "poBoxAddr": false,
        "availableCounties": [
          {}
        ],
        "expCheckoutInd": 0,
        "email": "testfive@bh.exacttarget.com",
        "firstName": "Tarun",
        "lastName": "Agarwal",
        "addr1": "620 N Macarthy Blvd",
        "addr2": "Site 620",
        "city": "Milpitas",
        "state": "CA",
        "postalCode": "95035",
        "county": "00",
        "countryCode": "US",
        "phoneNumber": "6504545773"
      },
      "orderData": {
        "originOfOrder": "WEB",
        "ipAddress": "66.232.234.48",
        "sendToCosa": false,
        "fraudChecked": false,
        "orderBlocked": false,
        "orderRepriced": false,
        "sessionId": "3000000017481942",
        "kohlsCashEarned": 0.0,
        "kohlsRewardsEarned": 0.0,
        "cartId": "77991566397930002",
        "incentiveAmount": 0.0,
        "acespServiceEnabled": false,
        "carrierServiceEnabled": false,
        "isStageOrder": false,
        "loyaltyId": "",
        "enrollLoyalty": false,
        "optSalesAlert": false,
        "loyaltyKohlsCash": {
          "hasKcc": false,
          "loyaltyPilotUser": false,
          "updatedEarnTrackerBal": 0.0,
          "eventKohlsCashEarn": 0.0,
          "everydayEarnKcc": 0.0,
          "spendAwayEveryday": 0.0,
          "everydayEarnNonKcc": 0.0,
          "totalKcAmountToActivate": 0.0,
          "earnTrackerThreshold": 0.0,
          "eventEarnAmount": 0.0,
          "qulalifyingAmount": 0.0,
          "transAmountActivateTotal": 0.0,
          "rewardsKCStartingBalance": 0.0,
          "rewardsKCEarned": 0.0,
          "potentialKohlsRewards": 0.0
        },
        "hasKcc": false,
        "loyaltySystem": false,
        "skipHeaderChargeAndTaxForBopusItems": false,
        "omsLoyaltyEnabled": false,
        "syncInventoryGrid": true,
        "userHasKohlsChargeCard": false,
        "replacementOrder": false,
        "profileDetails": {
          "webSessionId": "9d1536a4-3f52-4484-99eb-cbe2f1f49ab0",
          "shippingAddressChangeDate": "2023-10-24 13:20:59.000",
          "billingAddressChangeDate": "2020-11-19 13:54:45.000",
          "lastLoginDate": "2023-12-19 15:00:10.0",
          "kohlsWalletId": "852161889",
          "billingPhoneNumberChangeDate": "2020-11-19 13:54:45.000",
          "associate": false
        },
        "billAddressId": "57921567207500001",
        "profileEmailId": "testfive@bh.exacttarget.com",
        "placeOrderWithEstimateTax": false,
        "expeditedCheckout": false,
        "xSessionId": "9d1536a4-3f52-4484-99eb-cbe2f1f49ab0",
        "isAnonymousOrder": false
      },
      "lastUpdatedTmst": {
        "year": 2023,
        "month": 11,
        "dayOfMonth": 19,
        "hourOfDay": 15,
        "minute": 32,
        "second": 30
      },
      "submittedTmst": {
        "year": 2023,
        "month": 11,
        "dayOfMonth": 19,
        "hourOfDay": 15,
        "minute": 32,
        "second": 30
      },
      "createdTmst": {
        "year": 2023,
        "month": 11,
        "dayOfMonth": 19,
        "hourOfDay": 15,
        "minute": 32,
        "second": 30
      },
      "puchaseEarnings": {
        "kohlsCash": {
          "redemptionStartDate": "2017-05-03",
          "redemptionEndDate": "2030-06-01",
          "currentPurchaseEarnAmount": 0.0,
          "awayAmount": 5.0,
          "rewardTrackerContribution": 0.0,
          "rewardTrackerPreviousBal": 0.0,
          "rewardTrackerUpdatedBal": 0.0
        },
        "rewards": {
          "awayPoints": 0,
          "currentPurchaseEarnPoint": 0
        }
      },
      "isGuest": false,
      "version": 1,
      "sentToAtg": false,
      "profileDetails": {
        "id": "3000000017481942",
        "mvcStatus": false,
        "loyaltyPilotUser": false,
        "hasKcc": false,
        "profileCreatedTime": "2020-10-12 15:03:12",
        "email": "testfive@bh.exacttarget.com",
        "profileCallSuccess": true,
        "eligibleForExpeditedCheckout": false,
        "customerSegments": {
          "segments": []
        },
        "webSessionId": "9d1536a4-3f52-4484-99eb-cbe2f1f49ab0",
        "shippingAddressChangeDate": "2023-10-24 13:20:59.000",
        "billingAddressChangeDate": "2020-11-19 13:54:45.000",
        "lastLoginDate": "2023-12-19 15:00:10.0",
        "kohlsWalletId": "852161889",
        "billingAddressPhoneNumberModifiedTimestamp": "2020-11-19 13:54:45.000",
        "associate": false
      },
      "openAPIRequest": false,
      "isSourceAsOrderConfirmation": false,
      "isPerfUser": false,
      "editOrder": false,
      "torRequired": true,
      "capturedOrderSource": "NDB",
      "vendorData": "client_user_agent=Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36"
    }

Spreadsheet

ROOT level

+----------------------+---------------+--------+----------------------+
| Checkout JSON Name   | Type          | Order  | Example              |
|                      |               | XML    |                      |
|                      |               | M      |                      |
|                      |               | apping |                      |
+----------------------+---------------+--------+----------------------+
| orderId              | String        |     o  | 6001380477           |
|                      |               | rderNo |                      |
+----------------------+---------------+--------+----------------------+
| cartId               | String        |        | 63491563001490001    |
|                      |               | cartId |                      |
+----------------------+---------------+--------+----------------------+
| profileId            | String        |        | 3000000017481942     |
+----------------------+---------------+--------+----------------------+
| statusCode           | String        |        | PENDING_SUBMISSION   |
+----------------------+---------------+--------+----------------------+
| orderType            | String        |        | NORMAL               |
|                      |               |    ord |                      |
|                      |               | erType |                      |
+----------------------+---------------+--------+----------------------+
| orderPriceDetails    | Orde          |        | [+]o                 |
|                      | rPriceDetails |        | rderPriceDetails { } |
+----------------------+---------------+--------+----------------------+
| orderModifiers       | Map           |        | [                    |
|                      |               |        | +]orderModifiers { } |
+----------------------+---------------+--------+----------------------+
| channel              | String        | Ent    | WEB                  |
|                      |               | ryType |                      |
+----------------------+---------------+--------+----------------------+
| items                | List<Items>   |        | [+]items [2]         |
+----------------------+---------------+--------+----------------------+
| payments             | L             |     P  | [+]payments [1]      |
|                      | ist<Payments> | ayment |                      |
|                      |               | Method |                      |
+----------------------+---------------+--------+----------------------+
| shipAddrMap          | Map           |        | [+]shipAddrMap { }   |
+----------------------+---------------+--------+----------------------+
| storeAddressMap      | Map           |        | [+                   |
|                      |               |        | ]storeAddressMap { } |
+----------------------+---------------+--------+----------------------+
| shipmentInfos        | List<s        |        | [+]shipmentInfos [1] |
|                      | hipmentInfos> |        |                      |
+----------------------+---------------+--------+----------------------+
| billAddress          | billAddress   |        | [+]billAddress { }   |
+----------------------+---------------+--------+----------------------+
| orderData            | orderData     |        | [+]orderData { }     |
+----------------------+---------------+--------+----------------------+
| lastUpdatedTmst      | Timestamp     |        | [+                   |
|                      |               |        | ]lastUpdatedTmst { } |
+----------------------+---------------+--------+----------------------+
| submittedTmst        | Timestamp     |        | [+]submittedTmst { } |
+----------------------+---------------+--------+----------------------+
| createdTmst          | Timestamp     |        | [+]createdTmst { }   |
+----------------------+---------------+--------+----------------------+
| puchaseEarnings      | Map           |        | [+                   |
|                      |               |        | ]puchaseEarnings { } |
+----------------------+---------------+--------+----------------------+
| isGuest              | Boolean       |        | false                |
+----------------------+---------------+--------+----------------------+
| version              | Integer       |        | 1                    |
+----------------------+---------------+--------+----------------------+
| sentToAtg            | Boolean       |        | false                |
+----------------------+---------------+--------+----------------------+
| profileDetails       |               |        | [                    |
|                      |               |        | +]profileDetails { } |
+----------------------+---------------+--------+----------------------+
| openAPIRequest       | Boolean       |        | false                |
+----------------------+---------------+--------+----------------------+
| isSourc              | Boolean       |        | false                |
| eAsOrderConfirmation |               |        |                      |
+----------------------+---------------+--------+----------------------+
| isPerfUser           | Boolean       |        | false                |
+----------------------+---------------+--------+----------------------+
| editOrder            | Boolean       |        | false                |
+----------------------+---------------+--------+----------------------+
| torRequired          | Boolean       |        | true                 |
+----------------------+---------------+--------+----------------------+
| capturedOrderSource  | String        |        | NDB                  |
+----------------------+---------------+--------+----------------------+
| vendorData           | String        |        | client_us            |
|                      |               |        | er_agent=Mozilla/5.0 |
|                      |               |        | (Macintosh; Intel    |
|                      |               |        | Mac OS X 10_15_7)    |
|                      |               |        | AppleWebKit/537.36   |
|                      |               |        | (KHTML, like Gecko)  |
|                      |               |        | Chrome/120.0.0.0     |
|                      |               |        | Safari/537.36        |
+----------------------+---------------+--------+----------------------+

OrderPriceDetails

  ------------------------ --------- ---------------- ---------
  Name                     Type      XML Mapping      Example

  merchOriginalPrice       Integer                    70

  merchPromoPrice          Integer                    49.99

  merchOfferPrice          Integer                    49.99

  shipOriginalPrice        Integer                    8.95

  shipOfferPrice           Integer                    8.95

  giftWrapPrice            Integer                    0

  surchargeOriginalPrice   Integer                    0

  surchargeOfferPrice      Integer                    0

  merchTax                 Integer                    4.69

  giftWrapTax              Integer                    0

  surchargeTax             Integer                    0

  taxFee                   Integer                    0

  tax                      Integer   LineTax/Tax ??   4.69

  netTotal                 Integer                    63.63

  savings                  Integer                    20.01
  ------------------------ --------- ---------------- ---------

Items

+----------------+----------------+----------------+----------------+
| Name           | Type           | XML Mapping    | Example        |
+----------------+----------------+----------------+----------------+
| itemId         | String         |                | 581            |
|                |                |                | 31566349290001 |
+----------------+----------------+----------------+----------------+
| shipmentId     | String         |                | 581            |
|                |                |                | 31566349290001 |
+----------------+----------------+----------------+----------------+
| skuId          | String         | OrderLi        | 93891424       |
|                |                | ne/Item/ItemID |                |
+----------------+----------------+----------------+----------------+
| productId      | String         |                | 1357459        |
+----------------+----------------+----------------+----------------+
| originalO      | Integer        |                | 0              |
| rderedQuantity |                |                |                |
+----------------+----------------+----------------+----------------+
| o              | Integer        | OrderL         | 1              |
| rderedQuantity |                | ine/OrderedQty |                |
+----------------+----------------+----------------+----------------+
| can            | Integer        |                | 0              |
| celledQuantity |                |                |                |
+----------------+----------------+----------------+----------------+
| displayPriceId | Integer        |                | 581            |
|                |                |                | 31566349290000 |
+----------------+----------------+----------------+----------------+
| statusCode     | String         |                | initial        |
+----------------+----------------+----------------+----------------+
| registryInd    | Boolean        |                | false          |
+----------------+----------------+----------------+----------------+
| bossInd        | String         |                | false          |
+----------------+----------------+----------------+----------------+
| bopusInd       | String         |                | false          |
+----------------+----------------+----------------+----------------+
| itemData       | ItemData       |                | [              |
|                |                |                | +]itemData { } |
+----------------+----------------+----------------+----------------+
| it             | iI             |                | [+]itemDi      |
| emDisplayPrice | emDisplayPrice |                | splayPrice { } |
+----------------+----------------+----------------+----------------+
| itemPri        | ItemPri        |                | [+]itemPriceGr |
| ceGroupDetails | ceGroupDetails |                | oupDetails [0] |
+----------------+----------------+----------------+----------------+
| it             | Integer        |                | 1              |
| emDisplayOrder |                |                |                |
+----------------+----------------+----------------+----------------+
| shippingCost   | Integer        | HeaderCharg    | 4.48           |
|                |                | e/ChargeAmount |                |
|                |                | for            |                |
|                |                | ChargeCat      |                |
|                |                | egory=Shipping |                |
+----------------+----------------+----------------+----------------+
| efcAva         | Integer        |                | 9975           |
| ilableQuantity |                |                |                |
+----------------+----------------+----------------+----------------+

ItemData

+------------------------+---------+-------------+---------------------+
| Name                   | Type    | XML Mapping | Example             |
+------------------------+---------+-------------+---------------------+
| subClassNoPropertyName | String  |             |     "029"           |
+------------------------+---------+-------------+---------------------+
| fraudRisk              | String  |             |     "Low"           |
+------------------------+---------+-------------+---------------------+
| itemMetaData           | Object  |             | [+]itemMetaData { } |
+------------------------+---------+-------------+---------------------+
| skuType                | Integer |             |     0               |
+------------------------+---------+-------------+---------------------+
| giftReceiptIncluded    | Boolean |             |     false           |
+------------------------+---------+-------------+---------------------+
| giftTogether           | Boolean |             |     false           |
+------------------------+---------+-------------+---------------------+
| selfRegistryAddr       | Boolean |             |     false           |
+------------------------+---------+-------------+---------------------+
| primeLineNum           | Integer |             | 0                   |
+------------------------+---------+-------------+---------------------+
| storeClearance         | Boolean |             |     false           |
+------------------------+---------+-------------+---------------------+

itemDisplayPrice

+------------------+---------+------------------+------------------+
| Name             | Type    | XML Mapping      | Example          |
+------------------+---------+------------------+------------------+
| itemPriceId      | String  |                  |     "81          |
|                  |         |                  | 781566440050001" |
+------------------+---------+------------------+------------------+
| itemId           | String  |                  |     "81          |
|                  |         |                  | 781566440050001" |
+------------------+---------+------------------+------------------+
| saleInd          | Boolean |                  | true             |
+------------------+---------+------------------+------------------+
| clearanceInd     | Boolean |                  |     false        |
+------------------+---------+------------------+------------------+
| origina          | Integer |                  |     0            |
| lOrderedQuantity |         |                  |                  |
+------------------+---------+------------------+------------------+
| quantity         | Integer | orde             |     2            |
|                  |         | rLine/orderedQty |                  |
+------------------+---------+------------------+------------------+
| c                | Integer |                  |     0            |
| ancelledQuantity |         |                  |                  |
+------------------+---------+------------------+------------------+
| unitRegularPrice | Integer |                  | 34.0             |
+------------------+---------+------------------+------------------+
| unitSalePrice    | Integer | LinePri          |     9.0          |
|                  |         | ceInfo/UnitPrice |                  |
+------------------+---------+------------------+------------------+
| shipOfferPrice   | Integer |                  | 0.0              |
+------------------+---------+------------------+------------------+
| e                | Integer |                  | 18.0             |
| xtendedSalePrice |         |                  |                  |
+------------------+---------+------------------+------------------+
| ex               | Integer |                  | 18.0             |
| tendedPromoPrice |         |                  |                  |
+------------------+---------+------------------+------------------+
| ex               | Integer |                  | 0.0              |
| tendedOfferPrice |         |                  |                  |
+------------------+---------+------------------+------------------+
| exte             | Integer |                  | 0.0              |
| ndedTaxablePrice |         |                  |                  |
+------------------+---------+------------------+------------------+
| un               | Integer |                  | 0.0              |
| itSurchargePrice |         |                  |                  |
+------------------+---------+------------------+------------------+
| extend           | Integer |                  | 0.0              |
| edSurchargePrice |         |                  |                  |
+------------------+---------+------------------+------------------+
| itemTaxRate      | Integer | Linet            | 0.0              |
|                  |         | ax/TaxPercentage |                  |
+------------------+---------+------------------+------------------+
| itemTaxAmount    | Integer | LineTax/Tax      | 0.0              |
+------------------+---------+------------------+------------------+
| itemTax          | Integer |                  | 0.0              |
| WithFeeTaxAmount |         |                  |                  |
+------------------+---------+------------------+------------------+
| surchargeTaxRate | Integer |                  | 0.0              |
+------------------+---------+------------------+------------------+
| su               | Integer |                  | 0.0              |
| rchargeTaxAmount |         |                  |                  |
+------------------+---------+------------------+------------------+
| r                | Integer |                  | ORIGINAL         |
| egularPriceLabel |         |                  |                  |
+------------------+---------+------------------+------------------+
| salePriceLabel   | Integer |                  | SALE             |
+------------------+---------+------------------+------------------+
| it               | Object  |                  | it               |
| emPriceModifiers |         |                  | emPriceModifiers |
+------------------+---------+------------------+------------------+
| primeLineNum     | Integer | Order            | 1                |
|                  |         | Line/primeLineNo |                  |
+------------------+---------+------------------+------------------+
| taxFeeAmount     | Integer |                  | 0.0              |
+------------------+---------+------------------+------------------+
| shippingCost     | Integer |                  | 0.0              |
+------------------+---------+------------------+------------------+
| ta               | Integer |                  | 0.0              |
| xAmtIncludingFee |         |                  |                  |
+------------------+---------+------------------+------------------+
| isPriceOverride  | Boolean |                  | false            |
+------------------+---------+------------------+------------------+
| statusCode       | String  |                  | initial          |
+------------------+---------+------------------+------------------+

itemPriceModifiers

+---------------------+---------+-------------+-------------------------+
| Name                | Type    | XML Mapping | Example                 |
+---------------------+---------+-------------+-------------------------+
| itemPriceModifierId | String  |             |     "81781566440050001" |
+---------------------+---------+-------------+-------------------------+
| itemPriceId         | String  |             |     "81781566440050001" |
+---------------------+---------+-------------+-------------------------+
| isDiscountBuyItem   | Boolean |             | false                   |
+---------------------+---------+-------------+-------------------------+
| isDiscountGetItem   | Boolean |             |     0false              |
+---------------------+---------+-------------+-------------------------+
| unQualifiedBwType   | Boolean |             |     false               |
+---------------------+---------+-------------+-------------------------+
| modifierCategory    | String  |             |     GROUP               |
+---------------------+---------+-------------+-------------------------+
| discountAmount      | Integer |             |     50.0                |
+---------------------+---------+-------------+-------------------------+
| modifierDescription | String  |             | BUY 2 FOR $18.00        |
+---------------------+---------+-------------+-------------------------+
| precedence          | Integer |             |     7                   |
+---------------------+---------+-------------+-------------------------+
| tierInfo            | Object  |             | tierInfo                |
+---------------------+---------+-------------+-------------------------+
| promoOffer          | Object  |             | promoOffer              |
+---------------------+---------+-------------+-------------------------+
| promoType           | String  |             | GAO                     |
+---------------------+---------+-------------+-------------------------+

Payments

+----------------+----------------+----------------+----------------+
| Name           | Type           | XML Mapping    | Example        |
+----------------+----------------+----------------+----------------+
| paymentId      | String         | Paym           | 581            |
|                |                | entMethods/Pay | 31566349290001 |
|                |                | mentMethod/Pay |                |
|                |                | mentReference2 |                |
+----------------+----------------+----------------+----------------+
| paymentType    | String         | PaymentMetho   | CreditCard     |
|                |                | ds/PaymentType |                |
+----------------+----------------+----------------+----------------+
| amount         | Integer        | Paymen         | 63.63          |
|                |                | tMethods/Payme |                |
|                |                | ntMethod/Payme |                |
|                |                | ntDetailsList/ |                |
|                |                | PaymentDetails |                |
|                |                | /RequestAmount |                |
+----------------+----------------+----------------+----------------+
| authorizedAmt  | Integer        | Pay            | 63.63          |
|                |                | mentMethods/Pa |                |
|                |                | ymentMethod/Pa |                |
|                |                | ymentDetailsLi |                |
|                |                | st/PaymentDeta |                |
|                |                | ils/AuthAmount |                |
+----------------+----------------+----------------+----------------+
| reversalAmount | Integer        |                | 0              |
+----------------+----------------+----------------+----------------+
| statusCode     | String         |                | 7              |
+----------------+----------------+----------------+----------------+
| payInstrNumber | String         |                | AJ             |
|                |                |                | gz0CRcqT6I1111 |
+----------------+----------------+----------------+----------------+
| sendInte       | Boolean        |                | false          |
| rnalTokenToOms |                |                |                |
+----------------+----------------+----------------+----------------+
| payInstrPin    | String         |                | 222            |
+----------------+----------------+----------------+----------------+
| payInstrType   | String         |                | visa           |
+----------------+----------------+----------------+----------------+
| nameOnPayInstr | String         |                | test           |
+----------------+----------------+----------------+----------------+
| payInstrExpMon | String         |                | 01             |
+----------------+----------------+----------------+----------------+
| p              | String         |                | 2025           |
| ayInstrExpYear |                |                |                |
+----------------+----------------+----------------+----------------+
| addressId      | String         |                | 581            |
|                |                |                | 31566349290001 |
+----------------+----------------+----------------+----------------+
| paymentData    | paymentData    |                | [+]p           |
|                |                |                | aymentData { } |
+----------------+----------------+----------------+----------------+
| cardStatus     | cardStatus     |                | [+]            |
|                |                |                | cardStatus [1] |
+----------------+----------------+----------------+----------------+
| createdTmst    | createdTmst    |                | [+]c           |
|                |                |                | reatedTmst { } |
+----------------+----------------+----------------+----------------+
| l              | l              |                | [+]lastU       |
| astUpdatedTmst | astUpdatedTmst |                | pdatedTmst { } |
+----------------+----------------+----------------+----------------+

paymentData

+-------------------+-----------+-------------+----------------+
| Name              | Type      | XML Mapping | Example        |
+-------------------+-----------+-------------+----------------+
| reversedAmount    | Integer   |             | 0.0            |
+-------------------+-----------+-------------+----------------+
| initialBalance    | Integer   |             | 0.0            |
+-------------------+-----------+-------------+----------------+
| appliedPrice      | Integer   |             | 0.0            |
+-------------------+-----------+-------------+----------------+
| appliedFee        | Integer   |             | 0.0            |
+-------------------+-----------+-------------+----------------+
| appliedSurcharge  | Integer   |             | 0.0            |
+-------------------+-----------+-------------+----------------+
| remainingBalance  | Integer   |             | 0.0            |
+-------------------+-----------+-------------+----------------+
| initialAuthAmount | Integer   |             | 0.0            |
+-------------------+-----------+-------------+----------------+
| giftWrapCount     | Integer   |             | 0.0            |
+-------------------+-----------+-------------+----------------+
| kohlsCash         | kohlsCash |             | [+]kohlsCash{} |
+-------------------+-----------+-------------+----------------+

kohlsCash

+----------------------+-----------+---------------------+-----------------+
| Name                 | Type      | XML Mapping         | Example         |
+----------------------+-----------+---------------------+-----------------+
| kohlsCashAssociation | String    |                     | Kohls Cash      |
+----------------------+-----------+---------------------+-----------------+
| kohlsCashNumber      | Integer   | KOHLSCashTable/     | 624899772690385 |
|                      |           |                     |                 |
|                      |           | KohlsCashID         |                 |
+----------------------+-----------+---------------------+-----------------+
| kohlsCashAmount      | Integer   | KOHLSCashTable/     | 0.0             |
|                      |           |                     |                 |
|                      |           | KohlsCashAmount     |                 |
+----------------------+-----------+---------------------+-----------------+
| kohlsCashExpDate     | Date      | KOHLSCashTable/     | 2030-06-01      |
|                      |           |                     |                 |
|                      |           | KohlsCashExpiryDate |                 |
+----------------------+-----------+---------------------+-----------------+
| kohlsCashExpTime     | Timestamp | KOHLSCashTable/     | 00:00:00.000    |
|                      |           |                     |                 |
|                      |           | KohlsCashExpiryDate |                 |
+----------------------+-----------+---------------------+-----------------+
| kohlsCashExpTimeZone | Timestamp | KOHLSCashTable/     | -05:00          |
|                      |           |                     |                 |
|                      |           | KohlsCashExpiryDate |                 |
+----------------------+-----------+---------------------+-----------------+

cardStatus

+--------------------+-----------+-------------+--------------------+
| Name               | Type      | XML Mapping | Example            |
+--------------------+-----------+-------------+--------------------+
| authReversalDone   | Boolean   |             | false              |
+--------------------+-----------+-------------+--------------------+
| mostValueCustomer  | Boolean   |             | false              |
+--------------------+-----------+-------------+--------------------+
| rewardBalance      | Integer   |             | 0.0                |
+--------------------+-----------+-------------+--------------------+
| latest             | Boolean   |             | false              |
+--------------------+-----------+-------------+--------------------+
| persisted          | Boolean   |             | false              |
+--------------------+-----------+-------------+--------------------+
| storeStan          | Integer   |             | 101269             |
+--------------------+-----------+-------------+--------------------+
| torRequired        | Boolean   |             | true               |
+--------------------+-----------+-------------+--------------------+
| amount             | Integer   |             | 0.0                |
+--------------------+-----------+-------------+--------------------+
| invoice            | Integer   |             | 2297               |
+--------------------+-----------+-------------+--------------------+
| errorMessage       | String    |             | "Sock              |
|                    |           |             | etTimeoutException |
|                    |           |             | has occured in the |
|                    |           |             | Service Call"      |
+--------------------+-----------+-------------+--------------------+
| terminalNumber     | Integer   |             | 0032               |
+--------------------+-----------+-------------+--------------------+
| transactionId      | Integer   |             | 3222297            |
+--------------------+-----------+-------------+--------------------+
| transactionSuccess | Boolean   |             | true               |
+--------------------+-----------+-------------+--------------------+
| pe                 | Boolean   |             | true               |
| ndingAuthorization |           |             |                    |
+--------------------+-----------+-------------+--------------------+
| tr                 | Timestamp |             | Dec 18, 2023       |
| ansactionTimestamp |           |             | 3:54:23 PM         |
+--------------------+-----------+-------------+--------------------+
| transactionType    | String    |             | Sale               |
+--------------------+-----------+-------------+--------------------+

shipmentInfos

+-------------+-------------+-------------+-------------+-------------+
| Name        | Type        | XML Mapping | Example     | Notes       |
+-------------+-------------+-------------+-------------+-------------+
| addressId   | String      |             | 581315      | P           |
|             |             |             | 66349290002 | ossibility: |
|             |             |             |             | Orde        |
|             |             |             |             | r.OrderLine |
|             |             |             |             | .Extn.ExtnA |
|             |             |             |             | TGShipGrpId |
+-------------+-------------+-------------+-------------+-------------+
| shi         | String      |             | STD         |             |
| ppingMethod |             |             |             |             |
+-------------+-------------+-------------+-------------+-------------+
| shipmentP   | shipmentP   |             | [+]sh       |             |
| riceDetails | riceDetails |             | ipmentPrice |             |
|             |             |             | Details { } |             |
+-------------+-------------+-------------+-------------+-------------+
| shipmentId  | Integer     |             | 581315      | P           |
|             |             |             | 66349290001 | ossibility: |
|             |             |             |             | Orde        |
|             |             |             |             | r.OrderLine |
|             |             |             |             | .Extn.ExtnA |
|             |             |             |             | TGShipGrpId |
+-------------+-------------+-------------+-------------+-------------+
| statusCode  | String      |             | INITIAL     |             |
+-------------+-------------+-------------+-------------+-------------+
| minShipDt   | String      |             | Dec 22,     |             |
|             |             |             | 2023        |             |
|             |             |             | 1:11:26 PM  |             |
+-------------+-------------+-------------+-------------+-------------+
| maxShipDt   | String      |             | Jan 2, 2024 |             |
|             |             |             | 1:11:26 PM  |             |
+-------------+-------------+-------------+-------------+-------------+
| gi          | Integer     |             | 0           |             |
| ftWrapCount |             |             |             |             |
+-------------+-------------+-------------+-------------+-------------+
| s           | s           |             | [+]shipm    |             |
| hipmentData | hipmentData |             | entData { } |             |
+-------------+-------------+-------------+-------------+-------------+
| createdTmst | createdTmst |             | [+]crea     |             |
|             |             |             | tedTmst { } |             |
+-------------+-------------+-------------+-------------+-------------+
| last        | last        |             | [+]lastUpda |             |
| UpdatedTmst | UpdatedTmst |             | tedTmst { } |             |
+-------------+-------------+-------------+-------------+-------------+
| sequence    | Integer     |             | 0           |             |
+-------------+-------------+-------------+-------------+-------------+
| fulf        | String      |             | HARDGOOD    |             |
| illmentType |             |             |             |             |
+-------------+-------------+-------------+-------------+-------------+

shipmentPriceDetails

+-----------------+---------+-------------+-------------------+
| Name            | Type    | XML Mapping | Example           |
+-----------------+---------+-------------+-------------------+
| shipmentId      | String  |             | 81781566440050001 |
+-----------------+---------+-------------+-------------------+
| shipmentPriceId | String  |             | 81781566440050001 |
+-----------------+---------+-------------+-------------------+
| originalPrice   | Integer |             | 0.0               |
+-----------------+---------+-------------+-------------------+
| offerPrice      | Integer |             | 0.0               |
+-----------------+---------+-------------+-------------------+
| taxRate         | Integer |             | 0.0               |
+-----------------+---------+-------------+-------------------+
| taxAmount       | Integer |             | 0.0               |
+-----------------+---------+-------------+-------------------+
| isPriceOverride | Boolean |             | false             |
+-----------------+---------+-------------+-------------------+

BillAddress

+----------------+----------------+----------------+----------------+
| Name           | Type           | XML Mapping    | Example        |
+----------------+----------------+----------------+----------------+
| addressType    | String         |                | billing        |
+----------------+----------------+----------------+----------------+
| id             | String         |                | 581            |
|                |                |                | 31566349290001 |
+----------------+----------------+----------------+----------------+
| pr             | Boolean        |                | false          |
| eferredAddress |                |                |                |
+----------------+----------------+----------------+----------------+
| expeditedCh    | Boolean        |                | true           |
| eckoutEligible |                |                |                |
+----------------+----------------+----------------+----------------+
| apoFpo         | Boolean        |                | false          |
+----------------+----------------+----------------+----------------+
| poBoxAddr      | Boolean        |                | false          |
+----------------+----------------+----------------+----------------+
| ava            | ava            |                | [+]availab     |
| ilableCounties | ilableCounties |                | leCounties [1] |
+----------------+----------------+----------------+----------------+
| expCheckoutInd | Integer        |                | 0              |
+----------------+----------------+----------------+----------------+
| email          | String         |                | testfive@bh.e  |
|                |                |                | xacttarget.com |
+----------------+----------------+----------------+----------------+
| firstName      | String         | PersonInfoBi   | Tarun          |
|                |                | llTo/FirstName |                |
+----------------+----------------+----------------+----------------+
| lastName       | String         | PersonInfoB    | Agarwal        |
|                |                | illTo/LastName |                |
+----------------+----------------+----------------+----------------+
| addr1          | String         | P              | 620 N Macarthy |
|                |                | ersonInfoBillT | Blvd           |
|                |                | o/AddressLine1 |                |
+----------------+----------------+----------------+----------------+
| addr2          | String         | P              | Site 620       |
|                |                | ersonInfoBillT |                |
|                |                | o/AddressLine2 |                |
+----------------+----------------+----------------+----------------+
| city           | String         | PersonI        | Milpitas       |
|                |                | nfoBillTo/City |                |
+----------------+----------------+----------------+----------------+
| state          | String         | PersonI        | CA             |
|                |                | nfoBillTo/City |                |
+----------------+----------------+----------------+----------------+
| postalCode     | String         | PersonInfo     | 95035          |
|                |                | BillTo/ZipCode |                |
+----------------+----------------+----------------+----------------+
| county         | String         |                | 00             |
+----------------+----------------+----------------+----------------+
| countryCode    | String         | PersonInfo     | US             |
|                |                | BillTo/Country |                |
+----------------+----------------+----------------+----------------+
| phoneNumber    | String         | PersonInfoB    | 6504545773     |
|                |                | illTo/DayPhone |                |
+----------------+----------------+----------------+----------------+

orderData

+----------------+----------------+----------------+----------------+
| Name           | Type           | XML Mapping    | Example        |
+----------------+----------------+----------------+----------------+
| originOfOrder  | String         |                | WEB            |
+----------------+----------------+----------------+----------------+
| ipAddress      | String         |                | 66.232.236.101 |
+----------------+----------------+----------------+----------------+
| sendToCosa     | Boolean        |                | false          |
+----------------+----------------+----------------+----------------+
| fraudChecked   | Boolean        |                | false          |
+----------------+----------------+----------------+----------------+
| orderBlocked   | Boolean        |                | false          |
+----------------+----------------+----------------+----------------+
| orderRepriced  | Boolean        |                | false          |
+----------------+----------------+----------------+----------------+
| sessionId      | String         |                | 30             |
|                |                |                | 00000017481942 |
+----------------+----------------+----------------+----------------+
| k              | Integer        | KohlsOrderKCD  | 10             |
| ohlsCashEarned |                | etailsList/KCE |                |
|                |                | ventEarnAmount |                |
+----------------+----------------+----------------+----------------+
| kohl           | Integer        | CustomA        | 0              |
| sRewardsEarned |                | ttributes/Kohl |                |
|                |                | sRewardsEarned |                |
+----------------+----------------+----------------+----------------+
| cartId         | String         |                | 634            |
|                |                |                | 91563001490001 |
+----------------+----------------+----------------+----------------+
| i              | Integer        |                | 0              |
| ncentiveAmount |                |                |                |
+----------------+----------------+----------------+----------------+
| acesp          | Boolean        |                | false          |
| ServiceEnabled |                |                |                |
+----------------+----------------+----------------+----------------+
| carrier        | Boolean        |                | false          |
| ServiceEnabled |                |                |                |
+----------------+----------------+----------------+----------------+
| isStageOrder   | Boolean        |                | false          |
+----------------+----------------+----------------+----------------+
| loyaltyId      | String         |                |                |
+----------------+----------------+----------------+----------------+
| enrollLoyalty  | Boolean        |                | false          |
+----------------+----------------+----------------+----------------+
| optSalesAlert  | Boolean        |                | false          |
+----------------+----------------+----------------+----------------+
| lo             | lo             |                | [+]loyalt      |
| yaltyKohlsCash | yaltyKohlsCash |                | yKohlsCash { } |
+----------------+----------------+----------------+----------------+
| hasKcc         | Boolean        |                | false          |
+----------------+----------------+----------------+----------------+
| loyaltySystem  | Boolean        |                | false          |
+----------------+----------------+----------------+----------------+
| skipHea        | Boolean        |                | false          |
| derChargeAndTa |                |                |                |
| xForBopusItems |                |                |                |
+----------------+----------------+----------------+----------------+
| oms            | Boolean        |                | false          |
| LoyaltyEnabled |                |                |                |
+----------------+----------------+----------------+----------------+
| syn            | Boolean        |                | true           |
| cInventoryGrid |                |                |                |
+----------------+----------------+----------------+----------------+
| userHasK       | Boolean        |                | false          |
| ohlsChargeCard |                |                |                |
+----------------+----------------+----------------+----------------+
| re             | Boolean        |                | false          |
| placementOrder |                |                |                |
+----------------+----------------+----------------+----------------+
| profileDetails | profileDetails |                | [+]prof        |
|                |                |                | ileDetails { } |
+----------------+----------------+----------------+----------------+
| billAddressId  | String         |                | 581            |
|                |                |                | 31566349290001 |
+----------------+----------------+----------------+----------------+
| profileEmailId | String         |                | testfive@bh.e  |
|                |                |                | xacttarget.com |
+----------------+----------------+----------------+----------------+
| placeOrderW    | Boolean        |                | false          |
| ithEstimateTax |                |                |                |
+----------------+----------------+----------------+----------------+
| exp            | Boolean        |                | false          |
| editedCheckout |                |                |                |
+----------------+----------------+----------------+----------------+
| xSessionId     | String         |                | c5af916c       |
|                |                |                | -f2e3-4838-a59 |
|                |                |                | 8-0ef1dbfd86cc |
+----------------+----------------+----------------+----------------+
| is             | Boolean        |                | false          |
| AnonymousOrder |                |                |                |
+----------------+----------------+----------------+----------------+

loyaltyKohlsCash

+------------------+------+-------------+-----------------------------+
| Name             | Type | XML Mapping | Example                     |
+------------------+------+-------------+-----------------------------+
| hasKcc           | Boo  |             | false                       |
|                  | lean |             |                             |
+------------------+------+-------------+-----------------------------+
| loyaltyPilotUser | Boo  |             | false                       |
|                  | lean |             |                             |
+------------------+------+-------------+-----------------------------+
| updat            | Int  |             | 0.0                         |
| edEarnTrackerBal | eger |             |                             |
+------------------+------+-------------+-----------------------------+
| ev               | Int  |             | 0.0                         |
| entKohlsCashEarn | eger |             |                             |
+------------------+------+-------------+-----------------------------+
| everydayEarnKcc  | Int  | KohlsOrder  | 0.0                         |
|                  | eger | KCDetails/L |                             |
|                  |      | KCAmountKCC |                             |
|                  |      | when tender |                             |
|                  |      | Kohls card  |                             |
+------------------+------+-------------+-----------------------------+
| s                | Int  |             | 0.0                         |
| pendAwayEveryday | eger |             |                             |
+------------------+------+-------------+-----------------------------+
| ev               | Int  | Ko          | 0.0                         |
| erydayEarnNonKcc | eger | hlsOrderKCD |                             |
|                  |      | etails/LKCA |                             |
|                  |      | mountNonKCC |                             |
|                  |      | when other  |                             |
|                  |      | tenders     |                             |
+------------------+------+-------------+-----------------------------+
| totalKc          | Int  |             | 0.0                         |
| AmountToActivate | eger |             |                             |
+------------------+------+-------------+-----------------------------+
| earn             | Int  |             | 0.0                         |
| TrackerThreshold | eger |             |                             |
+------------------+------+-------------+-----------------------------+
| eventEarnAmount  | Int  |             | 0.0                         |
|                  | eger |             |                             |
+------------------+------+-------------+-----------------------------+
| q                | Int  |             | 0.0                         |
| ulalifyingAmount | eger |             |                             |
+------------------+------+-------------+-----------------------------+
| transAmo         | Int  |             | 0.0                         |
| untActivateTotal | eger |             |                             |
+------------------+------+-------------+-----------------------------+
| rewardsK         | Int  |             | 0.0                         |
| CStartingBalance | eger |             |                             |
+------------------+------+-------------+-----------------------------+
| rewardsKCEarned  | Int  | Cu          | 0.0                         |
|                  | eger | stomAttribu |                             |
|                  |      | tes/KohlsRe |                             |
|                  |      | wardsEarned |                             |
+------------------+------+-------------+-----------------------------+
| poten            | Int  |             | 0.0                         |
| tialKohlsRewards | eger |             |                             |
+------------------+------+-------------+-----------------------------+

ProfileDetails

+----------------+----------------+----------------+----------------+
| Name           | Type           | XML Mapping    | Example        |
+----------------+----------------+----------------+----------------+
| id             | String         |                | 30             |
|                |                |                | 00000017481942 |
+----------------+----------------+----------------+----------------+
| mvcStatus      | Boolean        |                | false          |
+----------------+----------------+----------------+----------------+
| lo             | Boolean        | KohlsOrderKCDe | false          |
| yaltyPilotUser |                | tailsList/IsLo |                |
|                |                | yaltyPilotCust |                |
+----------------+----------------+----------------+----------------+
| hasKcc         | Boolean        |                | false          |
+----------------+----------------+----------------+----------------+
| prof           | String         |                | 2020-10-12     |
| ileCreatedTime |                |                | 15:03:12       |
+----------------+----------------+----------------+----------------+
| email          | String         | Order/C        | testfive@bh.e  |
|                |                | ustomerEMailID | xacttarget.com |
+----------------+----------------+----------------+----------------+
| prof           | Boolean        |                | true           |
| ileCallSuccess |                |                |                |
+----------------+----------------+----------------+----------------+
| eligibleForExp | Boolean        |                | false          |
| editedCheckout |                |                |                |
+----------------+----------------+----------------+----------------+
| cu             | cu             |                | [+]custom      |
| stomerSegments | stomerSegments |                | erSegments { } |
+----------------+----------------+----------------+----------------+
| webSessionId   | String         |                | a1c97b8a       |
|                |                |                | -c3ef-4739-8c4 |
|                |                |                | 4-4b0c63ee08f8 |
+----------------+----------------+----------------+----------------+
| shippingAdd    | String         |                | 2023-10-24     |
| ressChangeDate |                |                | 13:20:59.000   |
+----------------+----------------+----------------+----------------+
| billingAdd     | String         |                | 2020-11-19     |
| ressChangeDate |                |                | 13:54:45.000   |
+----------------+----------------+----------------+----------------+
| lastLoginDate  | String         |                | 2023-12-18     |
|                |                |                | 15:40:40.0     |
+----------------+----------------+----------------+----------------+
| kohlsWalletId  | String         |                | 852161889      |
+----------------+----------------+----------------+----------------+
| billingAddress | String         |                | 2020-11-19     |
| PhoneNumberMod |                |                | 13:54:45.000   |
| ifiedTimestamp |                |                |                |
+----------------+----------------+----------------+----------------+
| associate      | Boolean        |                | false          |
+----------------+----------------+----------------+----------------+

PurchaseEarnings

  ----------- -------- ------------- ------------------
  Name        Type     XML Mapping   Example

  kohlsCash   Object                 [+]kohlsCash { }

  rewards     Object                 [+]rewards { }
  ----------- -------- ------------- ------------------

KohlsCash

+---------------------------+--------+-------------+------------------+
| Name                      | Type   | XML Mapping | Example          |
+---------------------------+--------+-------------+------------------+
| redemptionStartDate       | String |             |     "2017-05-03" |
+---------------------------+--------+-------------+------------------+
| redemptionEndDate         | String |             |     "2030-06-01" |
+---------------------------+--------+-------------+------------------+
| currentPurchaseEarnAmount | Double |             |     0.0          |
+---------------------------+--------+-------------+------------------+
| awayAmount                | Double |             |     33.68        |
+---------------------------+--------+-------------+------------------+
| rewardTrackerContribution | Double |             |     0.0          |
+---------------------------+--------+-------------+------------------+
| rewardTrackerPreviousBal  | Double |             |     0.0          |
+---------------------------+--------+-------------+------------------+
| rewardTrackerUpdateBal    | Double |             |     0.0          |
+---------------------------+--------+-------------+------------------+

Rewards

+--------------------------+---------+-------------+---------+
| Name                     | Type    | XML Mapping | Example |
+--------------------------+---------+-------------+---------+
| awayPoints               | Integer |             |     0   |
+--------------------------+---------+-------------+---------+
| currentPurchaseEarnPoint | Integer |             |     0   |
+--------------------------+---------+-------------+---------+



=====================================================================
Document 3: Software Quality and Performance
=====================================================================
- Introduction:
This is confluence page converted to plain text.

keywords are: , qualities, items, operational, backlog, improvements, technical, decisions, tracking, represents, addressing, enhance, maintainability, measure, artifacts

- Description
Objective

The overall objective of this page is to improve the quality of our
applications through Developmental and Operational enhancements.

Addressing both of these qualities will enhance the software quality,
maintainability, and efficiency of our systems.  To achieve this
objective it is necessary for us to define how we can measure these
qualities to see that we are making effective changes.  So we will
define qualities, metrics, and artifacts we will use to produce the work
to perform these improvements, and track the decisions we made along the
way.

Qualities

As previously mentioned our focus is about improving our software from a
technical point of view while preserving the functionality of our system
and show the justification for the Developmental and Operational
qualities. 

The ISO/IEC 25010 standard establishes a quality model for software
product evaluation. It defines eight key quality characteristics which
provide a good framework for us to evaluate the quality of our
software.   We have further categorized it into three higher-level
categories.  Further we will not concern ourselves with the first -
Functional - since we already have a well defined means of addressing
this quality

  ------------------------------------------------------------------------------------
  Category                         Definition   ISO/IEC 25010 Quality Characteristics
  -------------------------------- ------------ --------------------------------------
  Functional                       What the     Functional Suitability, Usability
                                   software     
                                   does         

  Operational                      How the      Performance Efficiency, Compatibility,
                                   software     Reliability, Security
                                   behaves      

  Developmental                    How the      Maintainability, Portability
                                   software is  
                                   built        
  ------------------------------------------------------------------------------------

Affects of Certain Changes based on Category

When we make certain changes (under Type of Change) notice the impact of
that change based on these columns:

[]

Explanation

Type of Change

The type of change allows us to understand what kind of commit we are
undergoing:

-   Notice that a Feature Addition and a Bug Fix are the same except for
    when it occurs
-   Notice also that a Refactor and a Technical Debt are the same except
    for when it occurs
-   Functionality and Optimizations are witnessed during runtime vs
    Refactors and Technical Debt items before runtime

Other Columns

-   Affect represents what quality is ultimately enhanced
-   Occurs represents when in the process of software development we
    apply this change
    -   Proactively implies that we are in front of the enhancement and
        apply the change ahead of time
    -   Reactively implies that we need to perform enhancement due to
        managing the change for a later date or a result of monitoring
        or discovery after software development
-   Visibility of Change represents when the change is visible or
    manifests itself
-   Impact of Change on other areas describes what we can expect to
    happen to other qualities of our software when applying a type of
    change:
    -   Functional Change represent if it impacts the functionality of
        our software or what it does
    -   Operational Change represents if it impacts how the software
        behaves (caching, scaling, etc.)
    -   Developmental Change represent if it impacts how the software
        was built or deployed and helps to maintain the code
        (refactoring, and testing), or make it more portable or modular

Functional Qualities

Remember our objective is to keep this unchanged

Operational Qualities

Operational qualities are easy to track and measure since they can be
quantified.  Here are some examples:

-   response time
-   uptime/downtime
-   error rate
-   memory usage
-   throughput

Story development usually happens reactively as a result of monitoring
our system in Dynatrace. However, there are opportunities to incorporate
optimization stories proactively as we deem necessary based on
requirements and information that we have.

Developmental Qualities

Developmental qualities can be track but can be trickier to measure. 
Some indicators such as static code analyzers, defect density can be
quantified.  In most cases, an increase in our productivity can also be
an indicator depending on the criteria we use.  Other than quantifiable
measurements, most of these measurements are of an empirical nature:

-   Test coverage
-   Development approaches or implementation process
-   Ease of making quick changes to code
-   Fast test cycles
-   Cleaner more readable code
-   Knowledge share through design and code reviews
-   Efficiently and effectively managing technical debt
-   Topic discussions

Artifacts

There are two main artifacts to help in achieving this objective:

1.  A comprehensive backlog of operational and developmental work items,
    and
2.  A tracking board of all our technical decisions.

Software Quality and Performance Backlog

These work items are intended to enhance the software quality and
performance of our system. Work items can take the form of stories,
chores, spikes, or topics. By prioritizing and addressing these items,
we aim to improve the overall quality, maintainability, and efficiency
of our software.  Here is the start of a backlog, under Software Quality
and Performance Backlog.

Decision Tracking Board

The second artifact refines and catalogs all our decisions and
improvements made.  We have seeded this tracking board with decisions
we've made so far:

-   In the table on the Design improvements / Backlog(post shadow mode)
    page, and
-   As bulleted items found on the Standard and Design Practices pages.

These will be incorporated into a unified guidelines list found here on
the Decision Tracking Board page.

References

1.  The ISO/IEC 25010 standard: This is an international standard that
    establishes a quality model for software product evaluation. It
    defines eight key quality characteristics which provide a good
    framework for evaluating the quality of software.

2.  Dynatrace: This is a software intelligence platform that provides
    application performance management, artificial intelligence for
    operations, cloud infrastructure monitoring, and digital experience
    management.

3.  Software Quality and Performance Backlog: This is the start of a
    comprehensive backlog of operational and developmental work items
    intended to enhance the software quality and performance of the
    system.

4.  Decision Tracking Board: This is a unified guidelines list that
    catalogs all the technical decisions and improvements made.

5.  Design improvements / Backlog(post shadow mode): This page contains
    a table of design improvements and backlog items post shadow mode.

6.  Standard and Design Practices: These pages contain bulleted items of
    standards and design practices.

7.  Work Item 2x2 Prioritization Board:  This board is used to kick off
    our prioritization of work items into epics and stories that we can
    put into JIRA.



=====================================================================
Document 0: OMO-2094 - Review and Update the Kafka Consumer Lag for OLM
=====================================================================
- Introduction:
keywords are: story, OMO-2094

- Description
*As* an engineer
*I want to* review and update the Dynatrace monitoring for OLM's kafka consumer lag
*So* that there is monitoring for all of OLM's kafka topics

*Acceptance Criteria*:
* review the current DT monitoring for OLM's kafka topics
** ensure all kafka topics has monitoring for consumer lag
* work with OLM team to obtain all of OLM's kafka topics


=====================================================================
Document 1: OMO-1986 - Spike: PAYPAL order return failure - partial cancellation
=====================================================================
- Introduction:
keywords are: spike, OMO-1986

- Description
*As* an OLM engineer
*I want* to research why partially cancelled PAYPAL orders can't be returned
*Because we* need the amounts that are sent to KPP to be correct to work through return services (invoices loaded to the Return Service DB and numbers are correct)

This spike is ready for acceptance when:
 * We know the solution to return partially cancelled PAYPAL orders. 
 * We know the solution to return partially cancelled PAYPAL + KC orders
 * Create Jira to implement those

Notes:
 * [https://confluence.kohls.com:8443/display/OE/OMO-1961+Research+the+Cause+of+Paypal+Orders+Not+Appearing+in+the+Return+Service]


=====================================================================
Document 2: OMO-1968 - Ship to Home Phase 0
=====================================================================
- Introduction:
Able to validate the performance of adding the post checkout filtering

keywords are: parent, epic, OMO-1968, Ship to Home Phase 0

- Description
As OLM,

I want to be able to validate the performance of adding the post checkout filtering,

So that we could use this new service to filter orders to OLM.

 

Link to the STH Miro Board: https://miro.com/app/board/uXjVNPa9pHc=/

- Section  2.2: OMO-2125 - Investigate EFC6 S2H Shipment Delayed Email Integration 

- Introduction:
This is a child spike of epic OMO-1968, "Ship to Home Phase 0"

keywords are: child, spike, OMO-2125, Ship to Home Phase 0

- Description
*As* the OLM team
*I want to* understand the flow of a Shipment Delay email from an EFC.
*Because* we want to provide Shipment Delayed emails for S2H as a new feature.

*This spike is ready for acceptance when:*
 # We have clarity on how/when EFCs send Shipment Delay notifications
 ## Specifically EFC6
 # Propose a design for OLM to integrate with EFC Shipment Delay Notifications and send a Shipment Delayed email.
 # Create Stories to implement the design

*Notes & Assumptions:*
 * Prior research done on Shipment Delayed emails [https://confluence.kohls.com:8443/display/OE/OMO-1973%3A+Investigating+Trigger+Events+for+Delayed+Email+Notifications+in+nOLM]
 * EFC sided delays were chosen over Carrier Delays due to inconsistencies between carrier notifications. 

- Section  2.2: OMO-2077 - Order Router - Retry flow processing

- Introduction:
This is a child story of epic OMO-1968, "Ship to Home Phase 0"

keywords are: child, story, OMO-2077, Ship to Home Phase 0

- Description
*As* the OLM Router
*I want to* publish to OLM_ERROR topic on processing errors
*So that* order gets processed through existing retry flow.

 

*Acceptance Criteria:*
 * When service consumes invalid json ,json gets stored in error-detail collection marked as false for retry.

*Note:*
 * Invoice service is a good example for reference.

- Section  2.2: OMO-2069 - Order Router Metrics Dashboard for Ship to Home

- Introduction:
This is a child story of epic OMO-1968, "Ship to Home Phase 0"

keywords are: child, story, OMO-2069, Ship to Home Phase 0

- Description
*As the* Order Router system,
*I want to* create a dashboard showing key performance metrics for Ship to Home orders,
*So that* we can monitor and improve system performance.

*Acceptance Criteria:*
*Given* the Order Router is processing Ship to Home orders,
*When* checking the dashboard,
*Then* it should display important metrics like processing times and error rates.

- Section  2.2: OMO-2068 - Implementing Logging for Order Router

- Introduction:
This is a child story of epic OMO-1968, "Ship to Home Phase 0"

keywords are: child, story, OMO-2068, Ship to Home Phase 0

- Description
*As the* Order Router system{*},{*}
*I want to* implement logging with relevant information for troubleshooting,
*So that* errors during the Ship to Home process can be quickly identified and resolved.

*Acceptance Criteria:*
*Given* an error occurs in the Ship to Home process,
*When* the Order Router processes the order,
*Then* logs should capture detailed error information and relevant data for resolution.

*Notes:*
 * Emphasize capturing key data points help in diagnosing and solving issues.

- Section  2.2: OMO-2066 - How to split SF as separate microservices

- Introduction:
This is a child spike of epic OMO-1968, "Ship to Home Phase 0"

keywords are: child, spike, OMO-2066, Ship to Home Phase 0

- Description
*As* an OLM engineer
*I want to* research how to split the Store Fulfillment app into separate apps
*Because we* want to prepare Store Fulfillment to support S2H

This spike is ready for acceptance when:
* document an approach on how to split the Store Fulfillment into separate apps
** API vs kafka consumer
** ideally each app should be responsible for one major task
* discuss with team on the design approach
* create stories to implement the changes
* reference OMO-1825

- Section  2.2: OMO-2065 - Checkout JSON->XML: Understand the possibly dynamic aspects of the conversion code

- Introduction:
This is a child spike of epic OMO-1968, "Ship to Home Phase 0"

keywords are: , child, spike, OMO-2065, Ship to Home Phase 0

- Description
*As* OLM
*I want to* understand the possibly dynamic aspects of Checkout's conversion code
*Because* anything dynamic might impact the conversion approach

*This spike is ready for acceptance when:*
 # We have clarity on any aspect of the conversion code that could be dynamic
 ## Examples:
 ### BossSwitchUtil (Spring Bean)
 ### OrderManager (Spring Bean)
 ### CartUtil (Spring Bean)
 ### OMSXmlConfiguration (part of JSON model, also a Spring Bean)
 #### Pulls values from a config file
 ### Anything else you can find that might be dynamic
 # If there are dynamic aspects of the conversion, conduct analysis on what we should do or how that changes things.
 # We have a page in confluence to document our findings and analysis
 # If needed, we have new spikes & stories written based on the findings

*Notes & Assumptions:*
 * Access to Checkout code (and relevant class) can be found here:
 ** [https://confluence.kohls.com:8443/display/OE/OMS-1980+Analyze+Checkout%27s+Order+Data]
 * You probably need to connect with a Checkout engineer to help answer some of these questions
 ** Chinmaya Kumar Swain (Staff Eng)
 ** Tarun Agarwal (Eng Manager)
 ** Maybe others ... ?

- Section  2.2: OMO-2063 - Kafka Message Handling in Order Router

- Introduction:
This is a child story of epic OMO-1968, "Ship to Home Phase 0"

keywords are: child, story, OMO-2063, Ship to Home Phase 0

- Description
*As* the Order Router system,
*I want to* investigate the message handling from the new Kafka Topic (order-asynch-topic)
*Because* we need to resolve issues with the auto-commit flag causing duplicate messages when off and no consumption when on.

*Acceptance Criteria:*
 # Understand the cause of duplicate messages with auto-commit off.
 # Determine why turning auto-commit on stops message consumption.
 # Develop a strategy for accurate message handling.

*Notes:*
 * Focus on practical and reliable solutions.
 * Document all findings.

- Section  2.2: OMO-2054 - Design Approach for Order Comparison in OMS and OLM

- Introduction:
This is a child spike of epic OMO-1968, "Ship to Home Phase 0"

keywords are: child, spike, OMO-2054, Ship to Home Phase 0

- Description
*As the* OLM Development Team,
*I want to* investigate design options for comparing orders between OMS and OLM,
*Because* accurate order comparison is essential for our order router to preserve functionality when orders are routed to it from Checkout

*This spike is ready for acceptance when:*
 # *We explore* design options for enabling order comparison through OMSe
 # *We propose* a design for capturing and comparing orders from MQ, considering the constraints in accessing the live OMS database.

*Notes & Assumptions:*
 * Direct querying of the OMS database is currently limited, and may need alternative design approaches.
 ** For instance this data may be available via the Checkout team's DB
 * Consider talking also to SRE teams to see what other capabilities we have for fetching orders from OMS system
 * The spike should result in a clear design proposal documented for future implementation.

- Section  2.2: OMO-1988 - Convert Checkout's Order JSON to Existing MQ's Order XML

- Introduction:
This is a child story of epic OMO-1968, "Ship to Home Phase 0"

keywords are: child, story, OMO-1988, Ship to Home Phase 0

- Description
*As an OLM Engineer,*

*I want to* convert order data from JSON to XML in Post Checkout,

*So that* when we convert it to Order XML, it is identical to what Checkout is posting on the Existing MQ.

{*}Acceptance Criteria{*}:
 * *Given* order data in JSON format from Checkout's Kafka topic,
 * *When* this data is converted to XML format,
 * *Then* the converted XML order data should be identical to the Order XML posted by Checkout on the Existing MQ.

{*}Notes & Assumptions{*}:
 * Investigate the possibility of reusing or adapting code from Chinmaya on the Checkout team for this conversion.

- Section  2.2: OMO-1982 - Validate Order Consistency Between New Kafka Topic and Existing MQ

- Introduction:
This is a child story of epic OMO-1968, "Ship to Home Phase 0"

keywords are: child, story, OMO-1982, Ship to Home Phase 0

- Description
*As an* OLM Engineer,
*I want to* implement or perform an order comparison check,
*So that* I can confirm the new Kafka topic is receiving the same orders as the existing MQ.

{*}Acceptance Criteria 1{*}:
 * *Given* orders are published to both the new Kafka topic and existing MQ,
 * *When* these orders are processed,
 * *Then* there should be a match in the order data received in both systems.

{*}Acceptance Criteria 2{*}:
 * *Given* orders are published to both the new Kafka topic and existing MQ,
 * *When* these orders are processed,
 * *Then* orders should be saved to a mongo DB for future auditing purposes.

{*}Notes & Assumptions{*}:
 * Can the OMS passive DB used for comparing the OMS vs OLM (mongo)?
 * Discrepancies, if any, should be logged and investigated.
 * Identify a way to automate the auditing process is in scope.
 * This story is critical for ensuring data integrity and system reliability.
 * Link to the STH Phase 0 Miro: [https://miro.com/app/board/uXjVNPa9pHc=/]

- Section  2.2: OMO-1981 - Develop Microservice for Post-Checkout Order Filtering

- Introduction:
This is a child story of epic OMO-1968, "Ship to Home Phase 0"

keywords are: child, story, OMO-1981, Ship to Home Phase 0

- Description
*As an* OLM Engineer,
*I want to* develop a microservice for post-checkout filtering,
*So that* I can audit and validate orders without impacting existing order flows.

{*}Acceptance Criteria 1{*}:
 * *Given* an order is sent to the new Kafka topic,
 * *When* the a order is pass to the microservice,
 * *Then* it should receive the order without modifying it and the order could be logged.

{*}Notes & Assumptions{*}:
 * The microservice should be capable of handling high throughput.
 * This microservice is for auditing purposes and should not alter the order data.

- Section  2.2: OMO-1980 - Connect to Checkout's Existing Kafka Topic and Analyze Order Data

- Introduction:
This is a child spike of epic OMO-1968, "Ship to Home Phase 0"

keywords are: child, spike, OMO-1980, Ship to Home Phase 0

- Description
*As an OLM Engineer,*

*I want to* connect to the existing Kafka topic from the Checkout team,

*So that* I can integrate with the topic and analyze the structure of the order data in JSON format.

{*}Acceptance Criteria{*}:
 * *Given* the existing Kafka topic from the Checkout team,
 * *When* an order is captured,
 * *Then* analyze the data to understand its structure and content.

{*}Notes & Assumptions{*}:
 * The Kafka topic is capturing 100% of post-checkout orders in JSON format.
 * The analysis will focus on understanding the JSON structure so that we can understand what it would take to move it to an identical Order XML that is currently being posted to Existing MQ from Checkout

- Section  2.2: OMO-1976 - nOLM's Role in Setting Estimated Shipment Dates

- Introduction:
This is a child spike of epic OMO-1968, "Ship to Home Phase 0"

keywords are: child, spike, OMO-1976, Ship to Home Phase 0

- Description
*As* the nOLM system,

*I want to* understand how the current system determines estimated shipment dates when an order is created,

*Because* this understanding is important to sticking to accurate shipping threshold mapping which comes in from OMSe for delivery.

*This spike is ready for acceptance when:*
 # We have clarity on nOLM's process for assigning shipment dates during order creation by looking at Order XML in order-create
 # We document the procedure and any insights as we lead up to our Phase 4 Scenario

*Notes & Assumptions:*
 * The investigation should consider existing shipping threshold mappings in OMSe
 * Phase 4 Scenario can be used for a context to get insights into this process
 * Relevant Confluence page for this investigation: https://confluence.kohls.com:8443/display/OE/OMO-1976+nOLM%27s+Role+in+Setting+Estimated+Shipment+Dates

- Section  2.2: OMO-1975 - Optimal Approach for Demand Updates Post-Cancellation

- Introduction:
This is a child spike of epic OMO-1968, "Ship to Home Phase 0"

keywords are: child, spike, OMO-1975, Ship to Home Phase 0

- Description
*As* the nOLM system,

*I want to* determine whether demand updates following cancellations should be routed through OLM or directly from EFC,

*Because* this will help streamline cancellation handling and inventory accuracy.

*This spike is ready for acceptance when:*
 # We identify the how demand updates should be appropriately handled after cancellations
 # (Optional) We look for opportunities for an efficient pathway f this is feasible
 # Document findings on Confluence.

*Notes & Assumptions:*
 * The decision impacts the accuracy of inventory management
 * We should look at what OMSe is doing today
 * This will involve working with Customer Fulfillment team to understand what is done upon cancellation
 * Relevant Confluence page for this investigation: [insert confluence link].

- Section  2.2: OMO-1973 - Investigating Trigger Events for Shipment Delays Email Notifications in nOLM

- Introduction:
This is a child spike of epic OMO-1968, "Ship to Home Phase 0"

keywords are: child, spike, OMO-1973, Ship to Home Phase 0

- Description
*As* the nOLM system,

*I want to* investigate & identify the specific event/condition(s) that triggers shipment delayed email notifications,

*Because* understanding this trigger is important to addressing how to define this new email type, and modernizing customer communication.

*This spike is ready for acceptance when:*
 # Does this email exist in OMSe today?
 # We determine the event or condition(s) that leads to the sending of shipment delayed emails.
 # We document our findings and potential underlying cause that can help us define shipment delayed emails
 # Followup story is create to implement this new email (OOM team)

*Notes & Assumptions:*
 *  The nOLM process with systems like Customer Fulfillment/Carrier services
 * Relevant Confluence page for findings

- Section  2.2: OMO-1971 - Optimizing nOLM Email Notifications for 'Shipped' Status

- Introduction:
This is a child spike of epic OMO-1968, "Ship to Home Phase 0"

keywords are: , child, spike, OMO-1971, Ship to Home Phase 0

- Description
*As* the nOLM system,

*I want to* evaluate the timing mechanism for 'Shipped' status email notifications,

*Because* timely communication is important for accurate customer updates.
h3. This spike is ready for acceptance when:
 # We analyze the current lag between marking a shipment as 'Shipped' and sending the corresponding email.
 # We explore the possibility of syncing with a new carrier feed for real-time shipment status.

h3. Notes & Assumptions:
 * The scope of this spike is for
 ** Ship to home only (fulfill by EFCs) with an expectation to expand into SFSs in the future.
 ** SLSQ Single Shipnode with PayPal orders
 ** New spikes will be created for MLMQ scenarios (depending on the complexity) 
 * Understanding the existing gap in email notification timing is key
 * Technical feasibility and integration with a new carrier feed will be investigated.
 * Relevant insights and findings to be documented on Confluence: [insert confluence link].

- Section  2.2: OMO-850 - Learn about Current Customer Comm. for Pack Slip Email (n/a for BOPUS today)

- Introduction:
This is a child spike of epic OMO-1968, "Ship to Home Phase 0"

keywords are: , pickup, child, spike, OMO-850, Ship to Home Phase 0

- Description
*WE SHOULD* understand when, why, and what +Customer Communication+ is done today by the legacy solution, and what service it interacts with, during fulfillment, pickup, cancels etc. for BOPUS shipments

*BEFORE* we implement +Customer Communication+ for BOPUS

*BECAUSE* we want to provide similar functionality for BOPUS orders processed by new OLM in the future, to insure +Customer Communication+ is properly triggered during appropriate times, and need a deeper understanding of the current functionality before determining how to approach it for new OLM. This will help us sort out the stories that are needed and reduce the risk of missing something important.

*We will know we are done when ({color:#ff8b00}highlighted in Orange is in scope{color}):*
 * When the current +Customer Communication+ (email and text if it's available and requested by the customer) by the legacy solution throughout order processing for BOPUS shipments is well understood
 ** {color:#172b4d}Ready for Pickup (and text){color}
 ** {color:#172b4d}Ready for Pickup Initial Reminder{color}
 ** {color:#172b4d}Ready for Pickup Final Reminder{color}
 ** {color:#172b4d}Ready for Pickup - APP (Alternate Pickup person emails) {color}
 *** {color:#172b4d}Ready for pickup - APP{color}
 *** {color:#172b4d}Ready for Pickup Initial Reminder - APP{color}
 *** {color:#172b4d}Ready for Pickup Final Reminder - APP{color}
 ** -----------------------------------------------
 ** {color:#ff8b00}Pack Slip email (generated after ready for pickup when you go online to lookup your order and click the button of print pack slip) {color}
 ** -----------------------------------------------
 ** Store Order Complete (aka Customer Picked Up)
 ** Store Order Complete (aka Customer Picked Up) APP (Alternate Pickup person emails)
 ** -----------------------------------------------
 ** Order Cancellation KI
 ** -----------------------------------------------
 ** Order Modification KI Responsive Email (Order Modified email, part of the order was cancelled - not applicable to SLSQ)
 ** -----------------------------------------------
 ** Store Order Delayed Responsive Email (BOPUS order delayed email)
 ** -----------------------------------------------
 ** Ready for Pickup - APP Changed - should be covered within Ready for Pickup (Changes made to the alternate pickup person email)
 ** Ready for Pickup - APP Removed - should be covered within Ready for Pickup (Alternative deleted email - only goes to the customer)
 ** Ready for Pickup - No longer APP - should be covered within Ready for Pickup (Alternative removed - only goes to the alternative)

 * When we clearly understood what services the current solution interacts with to initiate +Customer Communication+ 
 * Document the payload/data that is included when we trigger that email and mapping the source for each attribute
 * Exception handling is well understood
 * All the learnings are documented in a Confluence Page

*Notes/Assumptions:*
 * Wallet and Account own the page that triggers the email, start with them first
 * +Customer Communication+ is required for active mode of our first thin slice
 * We need to develop this in the future but it does not apply to SLSQ or may be owned by the returns team (mapping required)
 ** Order Modification KI Responsive Email
 ** Store Order Customer Cancelled (aka Auto Refund)
 ** Store Order Customer Cancelled (aka Auto Refund) APP

*Reference:*
 * [https://confluence.kohls.com:8443/display/OE/1.1+OMO-28+-+Analysis+and+Design]
 * Transactional Email UAT Spreadsheet (OCF Tab): [https://docs.google.com/spreadsheets/d/1YBuIG2XTguKkmz-gUknz_FM06LGvkT_f-IVwjib04b0/edit#gid=2073458429]
 * Link to an assortment of production email examples: [https://miro.com/app/board/uXjVOU0EyYI=/?moveToWidget=3458764538551545135&cot=14]
 * Link to Customer Comm. BT Transactional Emails list: [https://docs.google.com/spreadsheets/d/159Zo99VUGPTzAdjGS1imvV6h_my2g82Ulff87mBoGzQ/edit#gid=0]



=====================================================================
Document 3: OMO-1969 - Ship to Home Phase 1
=====================================================================
- Introduction:
Able to validate and preserve the existing functionality while using the post checkout filtering

keywords are: parent, epic, OMO-1969, Ship to Home Phase 1

- Description
As OLM,

I want to be able to validate and preserve the existing functionality while using the post checkout filtering micro service,

So that we could use the Post Checkout service to send orders from the new Kafka topic to existing MQ and processed by OMSe.

 

Link to the STH Miro Board: https://miro.com/app/board/uXjVNPa9pHc=/

- Section  3.3: OMO-2056 -  Playbook Creation for Phase 1 Launch

- Introduction:
This is a child story of epic OMO-1969, "Ship to Home Phase 1"

keywords are: child, story, OMO-2056, Ship to Home Phase 1

- Description
*As an* OLM team member,
*I want to* collaborate with SREs to create a playbook,
*So that* we have a clear action plan for the Phase 1 launch.

*Acceptance Criteria 1:*
 * *Given* the upcoming Phase 1 launch,
 * *When* we're putting together the playbook,
 * *Then* it should outline essential steps, responsibilities, and how to handle issues.

*Acceptance Criteria 2:*
 * *Given* the playbook is ready,
 * *When* reviewed by our team and the SREs,
 * *Then* everyone should agree it's complete and useful for Phase 1.

*Notes:*
 * We need this playbook to make sure Phase 1 goes smoothly.
 * It's important to keep the SREs in the loop to make sure we include everything necessary.

- Section  3.3: OMO-1993 - Back-Out Plan for Post-Checkout Failures

- Introduction:
This is a child story of epic OMO-1969, "Ship to Home Phase 1"

keywords are: child, story, OMO-1993, Ship to Home Phase 1

- Description
*As a* Software Engineer

*I want* a simple back-out plan

*So that* we're prepared if the post-checkout service fails.

*Acceptance Criteria 1*
 * *Given* a rollback scenario,
 * *When* executed,
 * *Then* all steps should be documented for review.

*Notes:*
 * We should ensure that rollback scenario allows for transitioning back to the original Existing MQ
 * This may take some coordination with the Checkout team to identify what would need to be done on their side to roll back to the original posting of orders on Existing MQ

 

- Section  3.3: OMO-1992 - Post Checkout Dashboard with Key Metrics

- Introduction:
This is a child story of epic OMO-1969, "Ship to Home Phase 1"

keywords are: child, story, OMO-1992, Ship to Home Phase 1

- Description
*As an* OLM Support Team,

*I want to* create a dashboard for Post Checkout that includes Kafka lag and essential metrics,

*So that* we can effectively monitor its performance.

*Acceptance Criteria 1:*
 * *Given* Post Checkout is active,
 * *When* checking the dashboard,
 * *Then* I should see essential service metrics

*Acceptance Criteria 2:*
 * *Given* Post Checkout is active,
 * *When* checking the health of kafka topic,
 * *Then* I should see kafka lag metrics

*Notes:*
 * Align the dashboard's functionality with the monitoring features of other microservices.

- Section  3.3: OMO-1991 - Kafka to MQ Order Handling

- Introduction:
This is a child story of epic OMO-1969, "Ship to Home Phase 1"

keywords are: child, story, OMO-1991, Ship to Home Phase 1

- Description
*As a* Post Checkout service,

*I want to* send orders from Kafka to MQ and post Order XML to Existing MQ,

*So that* we maintain our current process while adding this new step.

*Acceptance Criteria:*
 * *Given* an order in Kafka,
 * *When* Post Checkout processes it,
 * *Then* the order goes to MQ and its XML to the Existing MQ.

*Notes:*
 * Keep it compatible with our existing system.
 * Testing should check that orders are routed right and existing features work as usual.



=====================================================================
Document 4: OMO-1970 - Ship to Home Phase 2
=====================================================================
- Introduction:
Develop the OLM sourcing Facade to audit and validate the orders against the OMS orders

keywords are: parent, epic, OMO-1970, Ship to Home Phase 2

- Description
As OLM,

I want to introducing the OLM sourcing Facade,

so that we could begin audit and validate the orders against the OMS orders (compare the request to the sourcing; New Kafka vs Existing MQ).

 

Link to the STH Miro Board: [https://miro.com/app/board/uXjVNPa9pHc=/]

- Section  4.4: OMO-2071 - OLM Sourcing Facade Metrics Dashboard for Ship to Home

- Introduction:
This is a child story of epic OMO-1970, "Ship to Home Phase 2"

keywords are: child, story, OMO-2071, Ship to Home Phase 2

- Description
*As the* OLM Sourcing Facade system,
*I want to* create a dashboard showing key performance metrics for sourcing requests and responses,
*So that* we can monitor and improve system performance.

*Acceptance Criteria:*
*Given* the OLM Sourcing Facade is processing sourcing requests and responses,
*When* checking the dashboard,
*Then* it should display important metrics like processing times and error rates.

- Section  4.4: OMO-2070 - Implementing Logging for OLM Sourcing Facade

- Introduction:
This is a child story of epic OMO-1970, "Ship to Home Phase 2"

keywords are: child, story, OMO-2070, Ship to Home Phase 2

- Description
*As the* OLM Sourcing Facade system{*},{*}
*I want to* implement logging with relevant information for troubleshooting,
*So that* errors during the Ship to Home process can be quickly identified and resolved.

*Acceptance Criteria:*
*Given* an error occurs in the Ship to Home process,
*When* the OLM Sourcing Facade processes the sourcing requests and responses,
*Then* logs should capture detailed error information and relevant data for resolution.

*Notes:*
 * Emphasize capturing key data points help in diagnosing and solving issues.

- Section  4.4: OMO-1997 - OLM Sourcing Facade Dashboard with Key Metrics

- Introduction:
This is a child story of epic OMO-1970, "Ship to Home Phase 2"

keywords are: child, story, OMO-1997, Ship to Home Phase 2

- Description
*As an* OLM Support Team,

*I want to* create a dashboard for OLM Sourcing Facade that includes Kafka lag and essential metrics,

*So that* we can effectively monitor its performance.

*Acceptance Criteria 1:*
 * *Given* OLM Sourcing Facade is active,
 * *When* checking the dashboard,
 * *Then* I should see essential service metrics

*Acceptance Criteria 2:*
 * *Given* OLM Sourcing Facade is active,
 * *When* checking the health of kafka topic,
 * *Then* I should see kafka lag metrics

*Notes:*
 * Align the dashboard's functionality with the monitoring features of other microservices.

- Section  4.4: OMO-1996 - Order Comparison for Sourcing Facade and Request MQ

- Introduction:
This is a child story of epic OMO-1970, "Ship to Home Phase 2"

keywords are: child, story, OMO-1996, Ship to Home Phase 2

- Description
*As the* OLM Sourcing Facade,

*I want to* compare orders sent to me (via new Kafka topic) with those in the request MQ sent by OMS,

*So that* we can make sure it is consistent and accurate

*Acceptance Criteria:*
 * *Given* orders are sent to the Sourcing Facade via Kafka Topic and orders sent to request MQ from OMS
 * *When* comparing these orders,
 * *Then* identify any discrepancies and confirm they match up correctly.

*Notes:*
 * Emphasis on accurately matching orders between the new Kafka topic and request MQ.
 * Develop a method to easily spot and resolve differences.

- Section  4.4: OMO-1995 - OLM Sourcing Facade Collaboration with Promising and Sourcing Team

- Introduction:
This is a child story of epic OMO-1970, "Ship to Home Phase 2"

keywords are: child, story, OMO-1995, Ship to Home Phase 2

- Description
*As the* OLM Development Team,

*I want to* work closely with the promising and sourcing team,

*So that* our OLM Sourcing Facade fits well with their system and avoids overlapping work.

*Acceptance Criteria:*
 * *Given* we're building the OLM Sourcing Facade,
 * *When* we tie it into the sourcing process via their ACL,
 * *Then* it should source orders just once and stop OMS from doing it again if it's already been sourced.



=====================================================================
Document 5: OMO-1972 - Ship to Home Phase 3
=====================================================================
- Introduction:
Able to Use the Sourcing Facade in Prod

keywords are: parent, epic, OMO-1972, Ship to Home Phase 3

- Description
As OLM,

I want to be able to use the OLM sourcing Facade,

so that we could begin sourcing orders that was filtered to OMSe from the Post Checkout Service.

 

Link to the Ship to Home Miro Board: https://miro.com/app/board/uXjVNPa9pHc=/

- Section  5.5: OMO-2005 - Adding MongoDB for Sourcing Data in Facade

- Introduction:
This is a child story of epic OMO-1972, "Ship to Home Phase 3"

keywords are: child, story, OMO-2005, Ship to Home Phase 3

- Description
*As the* OLM Sourcing Facade,

*I want to* use MongoDB,

*So that* we persist all our sourcing requests and responses

*Acceptance Criteria:*
 * *Given* we're working with sourcing requests and responses,
 * *When* we receive this data from Sourcing ACL,
 * *Then* it should be reliably stored in MongoDB.

*Notes:*
 * MongoDB will help us prevent resourcing by matching it with sourcing requests which already have been made

- Section  5.5: OMO-2004 - Kafka Response Topic and Lag on Dashboard

- Introduction:
This is a child story of epic OMO-1972, "Ship to Home Phase 3"

keywords are: child, story, OMO-2004, Ship to Home Phase 3

- Description
*As the* OLM Support Team,

*I want to* add the new Kafka response topic and its lag metrics to our Monitoring Dashboard,

*So that* we have insights into its performance.

*Acceptance Criteria:*
 * *Given* the Kafka response topic is active,
 * *When* monitoring the system,
 * *Then* we should see both the topic activity and its lag time on the Dashboard.

- Section  5.5: OMO-2003 - Load Test for Sourcing Facade

- Introduction:
This is a child story of epic OMO-1972, "Ship to Home Phase 3"

keywords are: child, story, OMO-2003, Ship to Home Phase 3

- Description
*As the* OLM Team,

*I want to* run a load test on the Sourcing Facade,

*So that* we know it can handle the busy times.

*Acceptance Criteria:*
 * *Given* the Facade is up,
 * *When* testing how much it can take,
 * *Then* make sure it deals with loads as expected given its STPS (specified transactions per second).

*Notes:*
 * Simulate "real" use to see how it holds up.
 * Identify any weak spots
 * Check it stays steady when it’s really busy.

- Section  5.5: OMO-2002 - OMS Shift from MQ to Kafka

- Introduction:
This is a child story of epic OMO-1972, "Ship to Home Phase 3"

keywords are: child, story, OMO-2002, Ship to Home Phase 3

- Description
*As the* OMS Team working with us,

*I want to* switch OMS from listening to the existing MQ to the new Kafka topics for requests and responses,

*So that* OMS updates to our new communication channels.

*Acceptance Criteria:*
 * *Given* OMS currently uses the existing MQ,
 * *When* changing to listen to Kafka topics,
 * *Then* OMS should stop using MQ and start using Kafka for all incoming and outgoing messages.

*Notes:*
 * The change involves turning off OMS's connection to MQ and activating it in Kafka.

- Section  5.5: OMO-2001 - Facade-to-OMS Response Routing via Kafka

- Introduction:
This is a child story of epic OMO-1972, "Ship to Home Phase 3"

keywords are: child, story, OMO-2001, Ship to Home Phase 3

- Description
*As the* OLM Sourcing Facade,

*I want to* set up a new Kafka response topic,

*So that* responses can be efficiently directed through Kafka to OMS.

*Acceptance Criteria:*
 * *Given* we have responses ready in the Facade,
 * *When* they need to reach OMS,
 * *Then* they should go through the new Kafka topic.

- Section  5.5: OMO-2000 - OLM Facade Handling MQ Responses and Kafka Topic

- Introduction:
This is a child story of epic OMO-1972, "Ship to Home Phase 3"

keywords are: child, story, OMO-2000, Ship to Home Phase 3

- Description
*As the* OLM Sourcing Facade,

*I want to* listen to responses from MQ and relay them to the New Kafka response topic,

*So that* information flows correctly through our system.

*Acceptance Criteria:*
 * *Given* the OLM Facade is linked to MQ,
 * *When* it receives a response from MQ,
 * *Then* it should forward this response to the New Kafka response topic.

*Notes:*
 * This is about ensuring that the Facade accurately captures and relays MQ responses to Kafka.

- Section  5.5: OMO-1999 - OLM Sourcing Facade integration with MQ Topics

- Introduction:
This is a child story of epic OMO-1972, "Ship to Home Phase 3"

keywords are: child, story, OMO-1999, Ship to Home Phase 3

- Description
*As the* OLM Sourcing Facade,

*I want to* connect with both the Request and Response MQ,

*So that* our requests and responses are managed efficiently.

*Acceptance Criteria:*
 * *Given* the OLM Sourcing Facade is active,
 * *When* it interacts with MQ,
 * *Then* ensure seamless sending and receiving of data.

*Notes:*
 * These are the existing Request and Response MQ that OMS was using to talk to Sourcing Blackbox.
 * Ensure reliable communication between the Facade and MQ.
 * Thoroughly test the connection for accurate message handling.

- Section  5.5: OLM-1384 - Referencing ShipNode in existing OMS for Sourcing

- Introduction:
This is a child story of epic OMO-1972, "Ship to Home Phase 3"

keywords are: child, story, OLM-1384, Ship to Home Phase 3

- Description
*As* Sterling OMSe system,

*I want to* shipNode value for identify where to source S2H orders,

*So that* we do not make duplicate call to Sourcing engine from Sterling OMSe

*Acceptance Criteria:*
 * *Given* we're working S2H orders,
 * *When* we receive shipNode from filtering ACL in OMSe,
 * *Then* OMSe should not make another sourcing call.

*Notes:*
 * Sourcing response that is required to actually source order to a node can be pulled from sourcing facade or mongo db.
 * If this option does not work then we need to mock sourcing call from OMSe at sourcing faccde to return the response from original sourcing call.



=====================================================================
Document 6: OMO-1974 - Ship to Home Phase 4
=====================================================================
- Introduction:
Able to Throttling Orders at Post Checkout to Create Shipments in OLM

keywords are: parent, epic, OMO-1974, Ship to Home Phase 4

- Description
As OLM,

I want to be able to throttling limited orders at the Post Checkout service,

so that we could begin 
 # Creating shipments in OLM
 # Monitoring performance by processing 10 orders per day

 

Link to the Ship to Home Miro Board: https://miro.com/app/board/uXjVNPa9pHc=/

- Section  6.6: OMO-2079 - Discuss Modernization Efforts of the PackSlip Email Trigger Endpoint

- Introduction:
This is a child spike of epic OMO-1974, "Ship to Home Phase 4"

keywords are: child, spike, OMO-2079, Ship to Home Phase 4

- Description
*As* OLM
*I want to* trigger email communication of the packing slip to the customer using a modern REST endpoint
*Because* we would like to continue modernizing as we add new features

This spike is ready for acceptance when:
 * We have talked with the O&OM (CCS) team about modernizing the Pack Slip trigger endpoint
 ** this will include which fields to keep and remove based on [OMO-850 spreadsheet|https://docs.google.com/spreadsheets/d/17IPdP1l_z9pjjekjf7yf7XRrbyv6MsUefBdz4OClIEA/edit#gid=0]

- Section  6.6: OMO-2078 - Understand Packslip View and Email Endpoints

- Introduction:
This is a child spike of epic OMO-1974, "Ship to Home Phase 4"

keywords are: child, spike, OMO-2078, Ship to Home Phase 4

- Description
*As* a Kohl's customer
*I want to* be able to view my packing slip and email it to myself using nOLM
*Because* it is an important document within the STH flow

This spike is ready for acceptance when:
 * We understand how e-comm communicates to OMS
 ** Endpoints it uses to get pack slip information and triggering the email
 ** Request body and format (SOAP?) - also if there are plans to modernize
 ** Response that is returned by OMS
 * Document these findings in Confluence

- Section  6.6: OMO-2055 - Ensuring Effective Throttling in the Order Router

- Introduction:
This is a child story of epic OMO-1974, "Ship to Home Phase 4"

keywords are: child, story, OMO-2055, Ship to Home Phase 4

- Description
*As the* Order Router,
*I want to* monitor and validate the throttling process,
*So that* we can confirm it's working as intended and understand its impact on order processing.

*Acceptance Criteria 1:*
 * *Given* the Order Router is implementing throttling,
 * *When* orders are being processed,
 * *Then* the system should track and report the number of processed and queued orders each hour to confirm effective throttling.

*Acceptance Criteria 2:*
 * *Given* the monitoring feature is operational,
 * *When* evaluating the system’s performance,
 * *Then* there should be reliable data to show that throttling is correctly managing the order flow.

 

*Notes:*
 * We need this to make sure our system is throttling orders right and not causing problems.

- Section  6.6: OMO-2024 - OLM Sourcing Response Verification in Mongo Database

- Introduction:
This is a child story of epic OMO-1974, "Ship to Home Phase 4"

keywords are: child, story, OMO-2024, Ship to Home Phase 4

- Description
*As* the OLM system,

*I want* to check in the Mongo database for existing sourcing responses,

*So that* I can verify if the response to a sourcing request already exists.

{*}Acceptance Criteria 1{*}:
 * *Given* a sourcing request is made in OLM,
 * *When* checking the Mongo database,
 * *Then* the system should look for any existing responses to that request.

{*}Notes{*}:
 * This check helps avoid duplicate sourcing.
 * Make sure the search in Mongo is accurate.

- Section  6.6: OMO-2023 - E2E Testing for Post Checkout and OLM Workflow

- Introduction:
This is a child story of epic OMO-1974, "Ship to Home Phase 4"

keywords are: child, story, OMO-2023, Ship to Home Phase 4

- Description
*As* the OLM-S2H Testing team,

*I want* a basic end-to-end test for the Post Checkout to OLM process,

*So that* we can make sure orders move correctly from Post Checkout to OLM.

{*}Acceptance Criteria 1{*}:
 * *Given* orders are processed through Post Checkout,
 * *When* they are passed to OLM,
 * *Then* the test should verify that this transition happens smoothly.

{*}Notes{*}:
 * Focus the test on the standard, expected workflow (the "happy path").
 * Ensure the test is simple and covers all essential steps.
 * Regular testing to maintain consistent and reliable order processing.

- Section  6.6: OMO-2021 - Detailed Validation for Order and Shipment Creation in OLM

- Introduction:
This is a child story of epic OMO-1974, "Ship to Home Phase 4"

keywords are: child, story, OMO-2021, Ship to Home Phase 4

- Description
*As* a member of the OLM team,

*I want* to validate the creation of orders and shipments in OLM for orders coming from the Create Order Topic,

*So that* we can ensure that each order and its shipments are created correctly, particularly with the new, more detailed attributes for S2H and fulfillment.

{*}Acceptance Criteria 1{*}:
 * *Given* an order passes through the Create Order Topic and enters OLM,
 * *When* it triggers order and shipment creation,
 * *Then* the system should accurately create the order and all associated shipments.

{*}Acceptance Criteria 2{*}:
 * *Given* an order is being processed in OLM,
 * *When* it's a filtered order from the Create Order Topic,
 * *Then* validate that the order and shipment details are complete and match the expected set of shipments, including the new attributes.

{*}Notes & Assumptions{*}:
 * Emphasize correctness and detail in processing orders and their associated shipments.
 * The new attributes for S2H and fulfillment nodes should be correctly identified and incorporated into the order and shipment details.

- Section  6.6: OMO-2020 - Post Checkout Order Filtering to Create Order Topic

- Introduction:
This is a child story of epic OMO-1974, "Ship to Home Phase 4"

keywords are: child, story, OMO-2020, Ship to Home Phase 4

- Description
*As* the Post Checkout service,

*I want* to filter orders to the Create Order Topic,

*So that* only relevant orders are sent to the existing topic used for BOPUS.

{*}Acceptance Criteria 1{*}:
 * *Given* the filtering mechanism is in place,
 * *When* an order is processed,
 * *Then* it should be checked against BOPUS criteria before being directed to the Create Order Topic.

{*}Notes & Assumptions{*}:
 * Define clear criteria for BOPUS-eligible orders.
 * The filtering process should make sure to prevent any non-BOPUS orders from being sent to the Create Order Topic

- Section  6.6: OMO-2018 - Update Post Checkout with Order Throttling Feature

- Introduction:
This is a child story of epic OMO-1974, "Ship to Home Phase 4"

keywords are: child, story, OMO-2018, Ship to Home Phase 4

- Description
*As* the Post Checkout service,

*I want* to add an order throttling feature,

*So that* the service can limit the rate of sourcing calls to 10 orders per hour.

{*}Acceptance Criteria 1{*}:
 * *Given* orders are being processed by Post Checkout,
 * *When* they are queued for sourcing,
 * *Then* only 10 orders should be sent to the Sourcing Facade per hour.

{*}Acceptance Criteria 2{*}:
 * *Given* the order throttling feature is active,
 * *When* more than 10 orders are processed in an hour,
 * *Then* the excess orders should be queued for the next available time slot.

{*}Notes & Assumptions{*}:
 * The throttling mechanism should be configurable to adapt to future changes in order processing rates.
 * Ensure that the queued orders are processed in a timely manner without data loss.

- Section  6.6: OMO-2017 - Integration of Post Checkout with Sourcing Facade

- Introduction:
This is a child story of epic OMO-1974, "Ship to Home Phase 4"

keywords are: child, story, OMO-2017, Ship to Home Phase 4

- Description
*As* the Post Checkout service,

*I want* to integrate with the Sourcing Facade service,

*So that* requests and responses can be exchanged between the request and response topics.

{*}Acceptance Criteria 1{*}:
 * *Given* an order is processed by Post Checkout,
 * *When* it interacts with the Sourcing Facade,
 * *Then* the request should be sent accurately to the Sourcing Facade.

{*}Acceptance Criteria 2{*}:
 * *Given* the integration is in place,
 * *When* the Sourcing Facade sends back a response,
 * *Then* Post Checkout should receive and handle it correctly.

{*}Notes & Assumptions{*}:
 * Ensure that the integration facilitates accurate communication between the services.

- Section  6.6: OMO-1467 - Write Message to legacy Cancel MQ for Stores when S2H Ships

- Introduction:
This is a child story of epic OMO-1974, "Ship to Home Phase 4"

keywords are: , child, story, OMO-1467, Ship to Home Phase 4

- Description
*As* new OLM

*I want* to inform Stores when a S2H shipment has shipped

*So that* that stores remain in sync, consistent with existing legacy processing

+*Acceptance Criteria 1:*+
 * *Given* an order exists in new OLM with a S2H shipment 
 * *When* the S2H shipment moves to Shipped status
 * *Then* a message is published to the existing IBM MQ (same one used for Cancel messages)  for Stores to consume


+*Notes & Assumptions*+
 * Based off of cancel spike: OMO-1220 and related stories
 * This only applies when in Active mode, no Shipped messages should be published to the queue in Shadow mode
 * MQ is not consumed by stores directly, but a process owned by Fulfillment + Pickup team consumes messages and forwards them on to the appropriate store(s)
 * MQ should eventually replaced by Kafka or another solution, but while orders are still being processed by the legacy solution the Fulfillment + Pickup team does not want to change their processing to receive messages 2 different ways in the interim.
* Todd Miesfeld from Fulfillment + Pickup team told us about this Shipped status message for S2H while we were validating our first BOPUS thin slice;  this story was created to help us remember.

- Section  6.6: OMO-1372 - OLM Gateway OTS Order Detail Endpoint - Decrypt ShipTo encrypted values from nOLM

- Introduction:
This is a child story of epic OMO-1974, "Ship to Home Phase 4"

keywords are: child, story, OMO-1372, Ship to Home Phase 4

- Description
*As* OLM Gateway
*I want* nOLM OTS order-details response data that is specific to ship to home to be in readable format and add Protegrity 9 
*So that* it is consistent with the legacy data already in this table 

*Acceptance Criteria 1:*
 * Decrypt all encrypted values and provide those on nOLM OTS order-details response.

personInfoShipTo.firstName
personInfoShipTo.lastName

+*Notes & Assumptions*+
* These were removed from OMO-1319, which decrypted values applicable to BOPUS orders;  creating this story now to help us remember to come back to it for the first S2H thin slice we take up 
 * [https://miro.com/app/board/uXjVOU0EyYI=/?moveToWidget=3458764541855300275&cot=14] - Order Visibility design
 *  https://confluence.kohls.com:8443/display/OE/Protegrity+v9+Installation



=====================================================================
Document 7: OMO-2008 - Ship to Home Phase 5
=====================================================================
- Introduction:
Able to Fulfill STH SLSQ orders at EFC6

keywords are: parent, epic, OMO-2008, Ship to Home Phase 5

- Description
As OLM,

I want to be able to process and fulfill orders at EFC6 by using the Post Checkout service and the sourcing facade,

so that we could begin 
 # Using OLM to fulfill limited orders (10?) from EFC6 (re-visit all the nOLM microservices)
 # Able to use OLM to cancel (no re-sourcing and customer impact is limited)

 

Link to the Ship to Home Miro Board: [https://miro.com/app/board/uXjVNPa9pHc=/]

- Section  7.7: OMO-2124 - Investigate Shipment Confirmation API

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: , child, spike, OMO-2124, Ship to Home Phase 5

- Description
*As* the boundary between the Order domain and the domain of Customer Fulfillment
*I want to* Investigate the Shipment Confirmation API
*Because* we need to understand this integration before shipments can be invoiced

*This spike is ready for acceptance when:*
 # We build a spreadsheet documenting the request and response of the Shipment Confirmation API: expected values, required fields, error codes, etc{*}{{*}}
 # We understand and document its functionality at a high level for both confirmations and cancellation
 # We understand the channel in which this call happens today (We have been told that this is done via API for some EFCs and MQ for others)
 ## On a high level, get an understanding on if Customer Fulfillment has the bandwidth to switch from MQ to API for the other EFCs
 # If one exists, find the WSDL for this API
 # Create the following follow up stories:
 ## Store Fulfillment to support the shipment confirmation functionality (this can be a few spikes/stories, we can keep this iterative like we did with BOPUS APIs-basic happy path first, then error codes, then understanding cancel flows)
 ## EFC ACL to support routing Shipment Confirmation calls to either OMS or OLM (this can be a couple stories too if it seems too big to have all at once)

*Notes & Assumptions:*
 * [https://docs.google.com/spreadsheets/d/1LZ7nvTMLnTweTssJO_BHVqU4pk31ZgmdlwlzPexuSZo/edit#gid=0] Link to boundary request mapping
 * Master Miro Reference: [https://miro.com/app/board/uXjVPjzxRLY=/?moveToWidget=3458764575833473448&cot=14] 

- Section  7.7: OMO-2123 - Create empty EFC ACL application

- Introduction:
This is a child story of epic OMO-2008, "Ship to Home Phase 5"

keywords are: , child, story, OMO-2123, Ship to Home Phase 5

- Description
*As* the EFC ACL
*I want to* Create a new empty EFC ACL application
*So that* we can begin the interface between our internal Order domain and Customer Fulfillment's domain

*Acceptance Criteria 1:*
 * *Create* an empty application, using one of our existing applications as a reference
 ** Has all of the normal features: KADO, Java 21, deploys to review/staging/prod, runs locally, connects to our config server
 * EFC ACL is more of a description of the application, not the official, agreed upon, name. When naming the application, include ACL in the title (like order-acl and store-commerce-acl have), to make it clear this is a boundary application that we have hopes of eventually retiring once all orders are onto nOLM
 ** customer-fulfillment-acl
 ** efc-acl
 ** ship-to-home-acl (If it isn't clear, I am not good at naming things)

*Notes & Assumptions:*
 * [https://docs.google.com/spreadsheets/d/1LZ7nvTMLnTweTssJO_BHVqU4pk31ZgmdlwlzPexuSZo/edit#gid=0] Link to boundary request mapping
 * Master Miro Reference: [https://miro.com/app/board/uXjVPjzxRLY=/?moveToWidget=3458764575833473448&cot=14] 

- Section  7.7: OMO-2122 - Get EFC6 Kafka Connection Details for all Appropriate Environments

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2122, Ship to Home Phase 5

- Description
*As* the boundary between OLM and Customer Fulfillment
*I want to* Get EFC6 Connection Details for all Appropriate Environments
*Because* we need to publish to this topic

*This spike is ready for acceptance when:*
 # We work with the Customer Fulfillment Team to get all required connection details to connect to the Kafka topic used by EFC6 (dev/staging/prod)
 # We document this information somewhere for future stories

*Notes & Assumptions:*
 * [https://docs.google.com/spreadsheets/d/1LZ7nvTMLnTweTssJO_BHVqU4pk31ZgmdlwlzPexuSZo/edit#gid=0] Link to boundary request mapping
 * Master Miro Reference: [https://miro.com/app/board/uXjVPjzxRLY=/?moveToWidget=3458764575833473448&cot=14] 
 * Kafka Topic name is: *of_release_order_kafka*

- Section  7.7: OMO-2121 - Decide Kafka topic and format EFC ACL will consume from for EFC processing

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2121, Ship to Home Phase 5

- Description
*As* the boundary between Store Fulfillment and the EFC ACL
*I want to* Decide Kafka topic and format EFC ACL will consume from for EFC processing
*Because* we need to determine if we need a new topic or use an existing one for EFC processing

*This spike is ready for acceptance when:*
 # We decide if there is an existing topic/message we can utilize that Store Fulfillment publishes to, that the EFC ACL can consume from to send messages to the EFCs
 ## Consider the following:
 ### Will we need to make a call back to Order Create or Store Fulfillment for Order/Shipment information ([https://docs.google.com/spreadsheets/d/1LZ7nvTMLnTweTssJO_BHVqU4pk31ZgmdlwlzPexuSZo/edit#gid=0)]
 ### Would error retries on this existing topic cause any issues by current consumers
 ### WIll the EFC ACL have to do filtering on the messages published to this topic? If so, do we think the filtering will impact performance?
 # If there is not a topic yet, we propose a name for the new topic that would interface between Store Fulfillment and the EFC ACL and propose the message structure too
 # Create a story for Store Fulfillment to publish to the new topic (if applicable), and EFC ACL to consume from whatever topic is chosen.

*Notes & Assumptions:*
 * [https://docs.google.com/spreadsheets/d/1LZ7nvTMLnTweTssJO_BHVqU4pk31ZgmdlwlzPexuSZo/edit#gid=0] Link to boundary request mapping
 * Master Miro Reference: [https://miro.com/app/board/uXjVPjzxRLY=/?moveToWidget=3458764575833473448&cot=14] 

- Section  7.7: OMO-2117 - Investigate Red/Yellow fields for EFC6 Mapping

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2117, Ship to Home Phase 5

- Description
*As* the owner of ship 2 home orders
*I want to* Investigate Red/Yellow fields for EFC6 Mapping
*Because* we need to publish data to EFC6

*This spike is ready for acceptance when:*
 # Work with OMS and/or Customer Fulfillment to understand red/yellow fields required by EFC6:
 ## priority
 ## releaseNo
 ## extnPickTicketNo
 ## extnRG
 ## extnWMSInstType
 ## itemDesc
 # Based on 1. create up to two stories:
 ## story for providing the yellow/red fields that we should own internally
 ## story to have our EFC ACL application handle any fields we should not be the owner of

*Notes & Assumptions:*
 * Document with list of required red/yellow fields for EFC6: https://docs.google.com/spreadsheets/d/1LZ7nvTMLnTweTssJO_BHVqU4pk31ZgmdlwlzPexuSZo/edit#gid=0

- Section  7.7: OMO-2107 - Understand the message that goes to all EFCs

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2107, Ship to Home Phase 5

- Description
*We should* analyze all the messages that goes to all EFCs
*Because* we want to identify a consistent way to send order message to all EFCs.

*We are done when* 
 # Differences are identified and documented
 # A design approach is proposed on how we would send the messages to all EFCs regardless of the version of the warehouse management system. e.g. Do we want to move existing from XML to Json format? Do we need to build a ACL to do the conversion? Do we need to work with Customer Fulfillment about providing information that isn't our domain (Item data via PICs)

Notes:

1. This spike isn't about understanding a full mapping for each EFC between OMS and EFCs, it is focused on commonality in message structure and format

- Section  7.7: OMO-2091 - Understand changes to populating OverallTotals for Ship To Home orders

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2091, Ship to Home Phase 5

- Description
*As* the OLM team
*I want to* verify if we need to change how we populate our fields within OverallTotals on the Order model
*Because* we need to find necessary changes to take on STH orders.

*This spike is ready for acceptance when:*
 # We have clarity on the calculations for OverallTotals for ship to home orders
 # If work is small, make changes so overallTotals is working with a STH order

*Notes & Assumptions:*
 * [https://confluence.kohls.com:8443/display/OE/OMO-1975%3A+EFC+Post-Cancellation+GIV+Interactions] – page for EFC information like shipNode.
 * Currently there are several fields in OverallTotals that stay set to 0, still spike is to identify if we finally need to add calculation logic for some of these currently zeroed out fields
 * The OTS OrderDetails call would be a good mechanism to understand how Sterling populates OverallTotals for s2h, as most/all of those fields are exposed on that endpoint

- Section  7.7: OMO-2088 - Understanding Mapping for EFC6 with Customer Fulfillment

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2088, Ship to Home Phase 5

- Description
*As the* OLM system,

*I want to* understand the mapping process for EFC6 with Customer Fulfillment,

*because* it is crucial to have seamless integration for fulling S2H orders

 

*This spike is ready for acceptance when:*
 # We have a clear understanding of how EFC6 interfaces with the Customer Fulfillment system.
 # A detailed mapping of the data flow and processes between EFC6 and Customer Fulfillment has been documented.

- Section  7.7: OMO-2062 - Research Existing Checkout team integration with TVS

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2062, Ship to Home Phase 5

- Description
*As* the OLM system,

*I want to* investigate the Checkout team's method for TVS calls during repricing,

*Because* we need to understand their process to create a direct TVS integration without splitting order lines.

*Acceptance Criteria:*
 # Understand the Checkout team's method for TVS calls.
 # Identify why they split order lines.
 # Propose a direct TVS call method avoiding line splits.

*Notes:*
 * Aim to simplify our process.
 * Work with the Checkout team for insights.
 * Document findings.
 

- Section  7.7: OMO-2053 - Handling Earned KC Values in S2H Orders

- Introduction:
This is a child story of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, story, OMO-2053, Ship to Home Phase 5

- Description
*As an* OLM Engineer,
*I want to* correctly capture earned KC values in S2H orders,
*So that* customers receive accurate invoices

*Acceptance Criteria 1:*
 * *Given* a S2H order is processed without the earned KC value,
 * *When* a second message with earned KC information arrives,
 * *Then* the OLM system should combine this data to complete the order invoice.

*Acceptance Criteria 2:*
 * *Given* both the initial S2H order and the earned KC information are received,
 * *When* these are processed by OLM,
 * *Then* the invoice should accurately reflect the earned KC.

*Notes:*
 * Need to confirm with Chinmaya regarding the separate KC value message for S2H orders.
 * Coordination with the Checkout team might be necessary for message handling.

- Section  7.7: OMO-2048 - Integrate with Other EFCs (Phase X)

- Introduction:
This is a child story of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, story, OMO-2048, Ship to Home Phase 5

- Description
*As the OLM Sourcing Facade,*

*I want to* integrate with other EFCs,

*So that* I can fulfill orders from multiple EFCs effectively.

*Acceptance Criteria 1:*

*Given* the OLM Sourcing Facade is operational,

*When* it receives an order,

*Then* it should be able to select the most suitable EFCs for fulfillment based on current sourcing criteria.

*Notes & Assumptions:*
 * Ensure seamless integration with other EFCs without disrupting existing processes.
 * Coordination with EFCs is essential for consistent fulfillment strategies.

- Section  7.7: OMO-2047 - Develop Scheduler for Auto-Cancelling Orders with Delayed EFC Updates

- Introduction:
This is a child story of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, story, OMO-2047, Ship to Home Phase 5

- Description
*Description:*
*As the* OLM system,
*I want to* build a scheduler that automatically cancels orders if there are no updates from EFC after a specified number of days,
*So that* the system remains efficient and responsive to delays.

*Acceptance Criteria 1:*
*Given* an order has not received any updates from EFC within the specified timeframe,
*When* this time limit is reached,
*Then* the scheduler should automatically initiate cancellation of the order.

*Acceptance Criteria 2:*
*Given* the scheduler is operational,
*When* it detects an order eligible for cancellation,
*Then* it should process the cancellation and update the order status accordingly.

*Notes & Assumptions:*
 * The timeframe for awaiting updates (x days) should be determined based on average processing times and customer service standards.
 * The scheduler should be robust and reliable, ensuring no false cancellations occur.

- Section  7.7: OMO-2046 - Identifying Automatic Order Cancellation After Delayed Updates from EFC

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2046, Ship to Home Phase 5

- Description
*Description:*
*As the* OLM system,
*I want to* identify a method to automatically cancel orders after a certain number of days if no updates are received from EFC,
*Because* timely updates are crucial, and long delays need a response.

*This spike is ready for acceptance when:*
 * *We have a clear strategy* for automatically cancelling orders that lack updates from EFC after a specified time.
 * *We have documented* the triggers and conditions when these cancellations occur.

*Notes & Assumptions:*
 * The time frame for awaiting updates from EFC before triggering cancellation needs to be reasonable and aligned with customer expectations.
 * Ensure that the mechanism for this process is reliable and integrates smoothly with the existing OLM system.

- Section  7.7: OMO-2045 - Enhance Cancel Shipment Processor for EFC Confirmations

- Introduction:
This is a child story of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, story, OMO-2045, Ship to Home Phase 5

- Description
*Description:*
*As the* Cancel Shipment Processor,
*I want to* receive and process shipment cancellation confirmations from EFC,
*So that* I can keep the order status up to date and manage cancellations accurately.

*Acceptance Criteria 1:*
*Given* a cancellation confirmation is received from EFC,
*When* this information is processed,
*Then* I should accurately update the order's cancellation status.

*Acceptance Criteria 2:*
*Given* the order status needs to be updated,
*When* I process the EFC confirmation,
*Then* it should ensure the system reflects the correct current status of the order.

*Notes & Assumptions:*
 * The process should be prompt to avoid any discrepancies in order status.
 * The updates should be accurately reflected across the system for consistency.

- Section  7.7: OMO-2043 - XML Converter Update for EFC6 Orders

- Introduction:
This is a child story of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, story, OMO-2043, Ship to Home Phase 5

- Description
*As the* OLM team,
*I want to* explore how the XML Converter should be updated for EFC6,
*So that* it converts any new entities or attributes in existing entities correctly

*Acceptance:*
 * Make changes for handling STH Orders:
 ** Hardcode shipNode to EFC6's shipNode (849)
 ** Set fulfillmentMethod to STH when not Bopus or VGC
 * Clarify these changes with STH fulfillment as it relates to EFC6 (if this is applicable to the specific values for EFCs)

- Section  7.7: OMO-2042 - VGC Activator Review for EFC6 Compatibility

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2042, Ship to Home Phase 5

- Description
*Description:*
*As the* OLM team,
*I want to* assess the VGC Activator's functionality with EFC6 orders,
*So that* it activates gift cards effectively in this context.

*Acceptance:*
 * Document changes needed for the VGC Activator in the EFC6 setup.
 * Describe how it integrates with EFC6 order processing.

- Section  7.7: OMO-2041 - Enhancing Store Fulfillment for EFC6

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2041, Ship to Home Phase 5

- Description
*Description:*
*As the* OLM team,
*I want to* determine what needs to change in Store Fulfillment for EFC6 orders,
*So that* store-based fulfillment aligns with EFC6 needs.

*Acceptance:*
 * Identify adjustments for the Store Fulfillment service for EFC6 order handling.
 * Clarify its operational role with EFC6.
 * Create any follow-up stories or spikes

- Section  7.7: OMO-2040 - Store Commerce Proxy Adaptation for EFC6

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2040, Ship to Home Phase 5

- Description
*Description:*
*As the* OLM team,
*I want to* figure out changes for the Store Commerce Proxy with EFC6 orders,
*So that* it facilitates smooth EFC6 transactions.

*Acceptance:*
 * List required modifications for the Store Commerce Proxy in the EFC6 environment.
 * Explain how it functions with EFC6 order processing.

- Section  7.7: OMO-2039 - Store Commerce ACL Alignment with EFC6

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2039, Ship to Home Phase 5

- Description
*Description:*
*As the* OLM team,
*I want to* identify how the Store Commerce ACL should be tailored for EFC6,
*So that* it supports EFC6 orders effectively.

*Acceptance:*
 * Write down necessary updates for the Store Commerce ACL in EFC6 scenarios.
 * Describe its role in EFC6 order management.

- Section  7.7: OMO-2038 - Shipment Fulfillment Processor Update for EFC6

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2038, Ship to Home Phase 5

- Description
*Description:*
*As the* OLM team,
*I want to* explore adjustments needed in the Shipment Fulfillment Processor for EFC6,
*So that* it processes EFC6 shipments.

*Acceptance:*
 * Document changes for handling EFC6 shipments in the Shipment Fulfillment Processor.
 * Clarify its integration with EFC6 fulfillment.

- Section  7.7: OMO-2037 - Order Create Process Review for EFC6

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2037, Ship to Home Phase 5

- Description
*Description:*
*As the* OLM team,
*I want to* assess the Order Create microservice for updates with EFC6 orders,
*So that* order creation aligns with EFC6's requirements.

*Acceptance:*
 * Detail necessary changes for creating orders in the EFC6 framework.
 * Explain how it interacts with the EFC6 fulfillment process.

*Notes:*
 # Link to the STH flow
 # Contacts for the customer fulfillment team: [~TKA02PE] (PM)

- Section  7.7: OMO-2036 - Updating OLM Payment Cancel for EFC6

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2036, Ship to Home Phase 5

- Description
*Description:*
*As the* OLM team,
*I want to* determine how the OLM Payment Cancel needs to be modified for EFC6 orders,
*So that* payment cancellations are handled correctly.

*Acceptance:*
 * List changes for the OLM Payment Cancel service in the context of EFC6.
 * Describe its function in the EFC6 payment process.

- Section  7.7: OMO-2035 - OLM Gateway Compatibility with EFC6

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2035, Ship to Home Phase 5

- Description
*Description:*
*As the* OLM team,
*I want to* identify necessary changes in the OLM Gateway for EFC6 integration,
*So that* it functions smoothly with EFC6 order handling.

*Acceptance:*
 * Outline needed updates for the OLM Gateway in the EFC6 setup.
 * Clarify its role in managing EFC6 orders.

- Section  7.7: OMO-2034 - Adapting Invoice for EFC6 Orders

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2034, Ship to Home Phase 5

- Description
*Description:*
*As the* OLM team,
*I want to* identify updates needed in the Invoice microservice for EFC6 order processing,
*So that* invoicing is accurate and timely for these orders.

*Acceptance:*
 * Document required modifications for EFC6-related invoicing.
 * Explain how it will integrate with the EFC6 order process.

- Section  7.7: OMO-2033 - Tailoring Hard Totals for EFC6 Order Processing

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2033, Ship to Home Phase 5

- Description
*As the* OLM team,
*I want to* pinpoint what needs to be changed in Hard Totals for EFC6 orders,
*So that* all calculations remain accurate.

*Acceptance:*
 * Identify adjustments for accurate total calculations in EFC6 orders.
 * Describe how it will work with EFC6's order system.

- Section  7.7: OMO-2032 - Checking Expire Shipment Processor with EFC6

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2032, Ship to Home Phase 5

- Description
*As the* OLM team,
*I want to* figure out changes for the Expire Shipment Processor in the EFC6 context,
*So that* it handles order expirations correctly.

*Acceptance:*
 * Write down changes for managing EFC6 order expirations.
 * Clarify its integration with EFC6's fulfillment process.

- Section  7.7: OMO-2031 - Error Reprocessor's Readiness for EFC6 Orders

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2031, Ship to Home Phase 5

- Description
*Description:*
*As the* OLM team,
*I want to* evaluate the Error Reprocessor with EFC6 orders,
*So that* any reprocessing is done without issues.

*Acceptance:*
 * Ensure it reprocesses EFC6 order errors effectively.
 * Pinpoint areas for enhancement.

- Section  7.7: OMO-2030 - Error Consumer Effectiveness in EFC6-Integrated Environment

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2030, Ship to Home Phase 5

- Description
*As the* OLM development team,
*I want to* evaluate the Error Consumer microservice within the context of EFC6 integration,
*Because* robust error handling is necessary for the smooth operation of limited order processing.

*This spike is ready for acceptance when:*
 * *We have assessed* the Error Consumer's capability to manage errors in an EFC6-centric workflow.
 * *We have documented* any modifications needed to ensure its effectiveness.

- Section  7.7: OMO-2029 - Customer Notification Compatibility with EFC6 Order Processing

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2029, Ship to Home Phase 5

- Description
*Description:*
*As the* OLM development team,
*I want to* assess the Customer Notification microservice for compatibility with EFC6 order processing,
*Because* it's essential to maintain effective customer communication during limited order fulfillment.

*This spike is ready for acceptance when:*
 * *We ensure* the Customer Notification system functions correctly with the order flow involving EFC6.
 * *We identify* any adjustments needed for working with the new fulfillment process.

- Section  7.7: OMO-2028 - Alignment of Cancel Shipment Processor with EFC6 Fulfillment

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2028, Ship to Home Phase 5

- Description
*As the* OLM development team,
*I want to* make sure the Cancel Shipment Processor microservice aligns with EFC6's fulfillment processes,
*Because* accurate cancellation processing is critical when using OLM to fulfill limited orders from EFC6.

*This spike is ready for acceptance when:*
 * *We have verified* that the Cancel Shipment Processor can handle cancellations without re-sourcing or significant customer impact.
 * *We have outlined* any necessary updates to integrate seamlessly with EFC6.

- Section  7.7: OMO-2027 - Integration with EFC6

- Introduction:
This is a child story of epic OMO-2008, "Ship to Home Phase 5"

keywords are: efc6, child, story, OMO-2027, Ship to Home Phase 5

- Description
*Description:*

*As the* EFC ACL,

*I want to* integrate with EFC6,

*So that* we can efficiently manage and process these orders within the set capacity.

 

*Acceptance Criteria 1:*

*Given* a shipment is identified for EFC6 fulfillment,

*When* it is sent to the EFC ACL,

*Then* the message should be converted into the XML format expected by EFC6* (see note)

 

*Acceptance Criteria 2:*

*Given* a shipment is sent to the EFC ACL,

*After* it is converted to the expected XML format

*And* a newly added feature flag disables publishing to EFCs**

*Then* no message should be published to the kafka topic for EFC6 (we want prod to be like this for now)

 

*Acceptance Criteria 3:*

*Given* a shipment is sent to the EFC ACL,

*After* it is converted to the expected XML format

*And* a newly added feature flag is enabled, but *does not* list publishing to EFC6**

*Then* no message should be published to the kafka topic for EFC6

 

*Acceptance Criteria 4:*

*Given* a shipment is sent to the EFC ACL,

*After* it is converted to the expected XML format

*And* a newly added feature flag is enabled, and *does* list publishing to EFC6**

*Then* a message should be published to the kafka topic for EFC6 (we want staging like this for now)

*Notes & Assumptions:*
 * Integration should be tested for accuracy
 * https://jiradc.kohls.com:8443/browse/OMO-2122 should be done before working on this, it will have connection details
 * This also cannot be worked on until we have an EFC ACL, with messages being published to it from our core OLM system
 * *Use this doc to find 'green fields' required for EFC6 [https://docs.google.com/spreadsheets/d/1LZ7nvTMLnTweTssJO_BHVqU4pk31ZgmdlwlzPexuSZo/edit#gid=0]
 * **The idea is to have something similar to the skip-repricing feature flag found on order create, where not only can you enable/disable the feature, you can also enable it for specific EFCs (for now EFC6)

- Section  7.7: OMO-1989 - Assess Feasibility of 30-Min Grace Period in OLM

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-1989, Ship to Home Phase 5

- Description
*As an OLM Engineer,*

*I want to* review the Self Service use case,

*So that* I can understand the feasibility of moving the 30-minute grace period from Checkout to OLM.

{*}Acceptance Criteria{*}:
 * *Given* the current implementation of the 30-minute grace period in the Checkout system,
 * *When* reviewing the Self Service use case,
 * *Then* assess the technical feasibility of integrating this grace period into OLM.

{*}Notes & Assumptions{*}:
 * The review should consider the technical implications and challenges.
 * We should work with the Checkout team to maintain customer experience and order processing
 * We should understand at a high level what other downstream integrations are impacted assuming control of this grace period


=====================================================================
Document 0: OMO-2094 - Review and Update the Kafka Consumer Lag for OLM
=====================================================================
- Introduction:
keywords are: story, OMO-2094

- Description
*As* an engineer
*I want to* review and update the Dynatrace monitoring for OLM's kafka consumer lag
*So* that there is monitoring for all of OLM's kafka topics

*Acceptance Criteria*:
* review the current DT monitoring for OLM's kafka topics
** ensure all kafka topics has monitoring for consumer lag
* work with OLM team to obtain all of OLM's kafka topics


=====================================================================
Document 1: OMO-1986 - Spike: PAYPAL order return failure - partial cancellation
=====================================================================
- Introduction:
keywords are: spike, OMO-1986

- Description
*As* an OLM engineer
*I want* to research why partially cancelled PAYPAL orders can't be returned
*Because we* need the amounts that are sent to KPP to be correct to work through return services (invoices loaded to the Return Service DB and numbers are correct)

This spike is ready for acceptance when:
 * We know the solution to return partially cancelled PAYPAL orders. 
 * We know the solution to return partially cancelled PAYPAL + KC orders
 * Create Jira to implement those

Notes:
 * [https://confluence.kohls.com:8443/display/OE/OMO-1961+Research+the+Cause+of+Paypal+Orders+Not+Appearing+in+the+Return+Service]


=====================================================================
Document 2: OMO-1968 - Ship to Home Phase 0
=====================================================================
- Introduction:
Able to validate the performance of adding the post checkout filtering

keywords are: parent, epic, OMO-1968, Ship to Home Phase 0

- Description
As OLM,

I want to be able to validate the performance of adding the post checkout filtering,

So that we could use this new service to filter orders to OLM.

 

Link to the STH Miro Board: https://miro.com/app/board/uXjVNPa9pHc=/

- Section  2.2: OMO-2125 - Investigate EFC6 S2H Shipment Delayed Email Integration 

- Introduction:
This is a child spike of epic OMO-1968, "Ship to Home Phase 0"

keywords are: child, spike, OMO-2125, Ship to Home Phase 0

- Description
*As* the OLM team
*I want to* understand the flow of a Shipment Delay email from an EFC.
*Because* we want to provide Shipment Delayed emails for S2H as a new feature.

*This spike is ready for acceptance when:*
 # We have clarity on how/when EFCs send Shipment Delay notifications
 ## Specifically EFC6
 # Propose a design for OLM to integrate with EFC Shipment Delay Notifications and send a Shipment Delayed email.
 # Create Stories to implement the design

*Notes & Assumptions:*
 * Prior research done on Shipment Delayed emails [https://confluence.kohls.com:8443/display/OE/OMO-1973%3A+Investigating+Trigger+Events+for+Delayed+Email+Notifications+in+nOLM]
 * EFC sided delays were chosen over Carrier Delays due to inconsistencies between carrier notifications. 

- Section  2.2: OMO-2077 - Order Router - Retry flow processing

- Introduction:
This is a child story of epic OMO-1968, "Ship to Home Phase 0"

keywords are: child, story, OMO-2077, Ship to Home Phase 0

- Description
*As* the OLM Router
*I want to* publish to OLM_ERROR topic on processing errors
*So that* order gets processed through existing retry flow.

 

*Acceptance Criteria:*
 * When service consumes invalid json ,json gets stored in error-detail collection marked as false for retry.

*Note:*
 * Invoice service is a good example for reference.

- Section  2.2: OMO-2069 - Order Router Metrics Dashboard for Ship to Home

- Introduction:
This is a child story of epic OMO-1968, "Ship to Home Phase 0"

keywords are: child, story, OMO-2069, Ship to Home Phase 0

- Description
*As the* Order Router system,
*I want to* create a dashboard showing key performance metrics for Ship to Home orders,
*So that* we can monitor and improve system performance.

*Acceptance Criteria:*
*Given* the Order Router is processing Ship to Home orders,
*When* checking the dashboard,
*Then* it should display important metrics like processing times and error rates.

- Section  2.2: OMO-2068 - Implementing Logging for Order Router

- Introduction:
This is a child story of epic OMO-1968, "Ship to Home Phase 0"

keywords are: child, story, OMO-2068, Ship to Home Phase 0

- Description
*As the* Order Router system{*},{*}
*I want to* implement logging with relevant information for troubleshooting,
*So that* errors during the Ship to Home process can be quickly identified and resolved.

*Acceptance Criteria:*
*Given* an error occurs in the Ship to Home process,
*When* the Order Router processes the order,
*Then* logs should capture detailed error information and relevant data for resolution.

*Notes:*
 * Emphasize capturing key data points help in diagnosing and solving issues.

- Section  2.2: OMO-2066 - How to split SF as separate microservices

- Introduction:
This is a child spike of epic OMO-1968, "Ship to Home Phase 0"

keywords are: child, spike, OMO-2066, Ship to Home Phase 0

- Description
*As* an OLM engineer
*I want to* research how to split the Store Fulfillment app into separate apps
*Because we* want to prepare Store Fulfillment to support S2H

This spike is ready for acceptance when:
* document an approach on how to split the Store Fulfillment into separate apps
** API vs kafka consumer
** ideally each app should be responsible for one major task
* discuss with team on the design approach
* create stories to implement the changes
* reference OMO-1825

- Section  2.2: OMO-2065 - Checkout JSON->XML: Understand the possibly dynamic aspects of the conversion code

- Introduction:
This is a child spike of epic OMO-1968, "Ship to Home Phase 0"

keywords are: , child, spike, OMO-2065, Ship to Home Phase 0

- Description
*As* OLM
*I want to* understand the possibly dynamic aspects of Checkout's conversion code
*Because* anything dynamic might impact the conversion approach

*This spike is ready for acceptance when:*
 # We have clarity on any aspect of the conversion code that could be dynamic
 ## Examples:
 ### BossSwitchUtil (Spring Bean)
 ### OrderManager (Spring Bean)
 ### CartUtil (Spring Bean)
 ### OMSXmlConfiguration (part of JSON model, also a Spring Bean)
 #### Pulls values from a config file
 ### Anything else you can find that might be dynamic
 # If there are dynamic aspects of the conversion, conduct analysis on what we should do or how that changes things.
 # We have a page in confluence to document our findings and analysis
 # If needed, we have new spikes & stories written based on the findings

*Notes & Assumptions:*
 * Access to Checkout code (and relevant class) can be found here:
 ** [https://confluence.kohls.com:8443/display/OE/OMS-1980+Analyze+Checkout%27s+Order+Data]
 * You probably need to connect with a Checkout engineer to help answer some of these questions
 ** Chinmaya Kumar Swain (Staff Eng)
 ** Tarun Agarwal (Eng Manager)
 ** Maybe others ... ?

- Section  2.2: OMO-2063 - Kafka Message Handling in Order Router

- Introduction:
This is a child story of epic OMO-1968, "Ship to Home Phase 0"

keywords are: child, story, OMO-2063, Ship to Home Phase 0

- Description
*As* the Order Router system,
*I want to* investigate the message handling from the new Kafka Topic (order-asynch-topic)
*Because* we need to resolve issues with the auto-commit flag causing duplicate messages when off and no consumption when on.

*Acceptance Criteria:*
 # Understand the cause of duplicate messages with auto-commit off.
 # Determine why turning auto-commit on stops message consumption.
 # Develop a strategy for accurate message handling.

*Notes:*
 * Focus on practical and reliable solutions.
 * Document all findings.

- Section  2.2: OMO-2054 - Design Approach for Order Comparison in OMS and OLM

- Introduction:
This is a child spike of epic OMO-1968, "Ship to Home Phase 0"

keywords are: child, spike, OMO-2054, Ship to Home Phase 0

- Description
*As the* OLM Development Team,
*I want to* investigate design options for comparing orders between OMS and OLM,
*Because* accurate order comparison is essential for our order router to preserve functionality when orders are routed to it from Checkout

*This spike is ready for acceptance when:*
 # *We explore* design options for enabling order comparison through OMSe
 # *We propose* a design for capturing and comparing orders from MQ, considering the constraints in accessing the live OMS database.

*Notes & Assumptions:*
 * Direct querying of the OMS database is currently limited, and may need alternative design approaches.
 ** For instance this data may be available via the Checkout team's DB
 * Consider talking also to SRE teams to see what other capabilities we have for fetching orders from OMS system
 * The spike should result in a clear design proposal documented for future implementation.

- Section  2.2: OMO-1988 - Convert Checkout's Order JSON to Existing MQ's Order XML

- Introduction:
This is a child story of epic OMO-1968, "Ship to Home Phase 0"

keywords are: child, story, OMO-1988, Ship to Home Phase 0

- Description
*As an OLM Engineer,*

*I want to* convert order data from JSON to XML in Post Checkout,

*So that* when we convert it to Order XML, it is identical to what Checkout is posting on the Existing MQ.

{*}Acceptance Criteria{*}:
 * *Given* order data in JSON format from Checkout's Kafka topic,
 * *When* this data is converted to XML format,
 * *Then* the converted XML order data should be identical to the Order XML posted by Checkout on the Existing MQ.

{*}Notes & Assumptions{*}:
 * Investigate the possibility of reusing or adapting code from Chinmaya on the Checkout team for this conversion.

- Section  2.2: OMO-1982 - Validate Order Consistency Between New Kafka Topic and Existing MQ

- Introduction:
This is a child story of epic OMO-1968, "Ship to Home Phase 0"

keywords are: child, story, OMO-1982, Ship to Home Phase 0

- Description
*As an* OLM Engineer,
*I want to* implement or perform an order comparison check,
*So that* I can confirm the new Kafka topic is receiving the same orders as the existing MQ.

{*}Acceptance Criteria 1{*}:
 * *Given* orders are published to both the new Kafka topic and existing MQ,
 * *When* these orders are processed,
 * *Then* there should be a match in the order data received in both systems.

{*}Acceptance Criteria 2{*}:
 * *Given* orders are published to both the new Kafka topic and existing MQ,
 * *When* these orders are processed,
 * *Then* orders should be saved to a mongo DB for future auditing purposes.

{*}Notes & Assumptions{*}:
 * Can the OMS passive DB used for comparing the OMS vs OLM (mongo)?
 * Discrepancies, if any, should be logged and investigated.
 * Identify a way to automate the auditing process is in scope.
 * This story is critical for ensuring data integrity and system reliability.
 * Link to the STH Phase 0 Miro: [https://miro.com/app/board/uXjVNPa9pHc=/]

- Section  2.2: OMO-1981 - Develop Microservice for Post-Checkout Order Filtering

- Introduction:
This is a child story of epic OMO-1968, "Ship to Home Phase 0"

keywords are: child, story, OMO-1981, Ship to Home Phase 0

- Description
*As an* OLM Engineer,
*I want to* develop a microservice for post-checkout filtering,
*So that* I can audit and validate orders without impacting existing order flows.

{*}Acceptance Criteria 1{*}:
 * *Given* an order is sent to the new Kafka topic,
 * *When* the a order is pass to the microservice,
 * *Then* it should receive the order without modifying it and the order could be logged.

{*}Notes & Assumptions{*}:
 * The microservice should be capable of handling high throughput.
 * This microservice is for auditing purposes and should not alter the order data.

- Section  2.2: OMO-1980 - Connect to Checkout's Existing Kafka Topic and Analyze Order Data

- Introduction:
This is a child spike of epic OMO-1968, "Ship to Home Phase 0"

keywords are: child, spike, OMO-1980, Ship to Home Phase 0

- Description
*As an OLM Engineer,*

*I want to* connect to the existing Kafka topic from the Checkout team,

*So that* I can integrate with the topic and analyze the structure of the order data in JSON format.

{*}Acceptance Criteria{*}:
 * *Given* the existing Kafka topic from the Checkout team,
 * *When* an order is captured,
 * *Then* analyze the data to understand its structure and content.

{*}Notes & Assumptions{*}:
 * The Kafka topic is capturing 100% of post-checkout orders in JSON format.
 * The analysis will focus on understanding the JSON structure so that we can understand what it would take to move it to an identical Order XML that is currently being posted to Existing MQ from Checkout

- Section  2.2: OMO-1976 - nOLM's Role in Setting Estimated Shipment Dates

- Introduction:
This is a child spike of epic OMO-1968, "Ship to Home Phase 0"

keywords are: child, spike, OMO-1976, Ship to Home Phase 0

- Description
*As* the nOLM system,

*I want to* understand how the current system determines estimated shipment dates when an order is created,

*Because* this understanding is important to sticking to accurate shipping threshold mapping which comes in from OMSe for delivery.

*This spike is ready for acceptance when:*
 # We have clarity on nOLM's process for assigning shipment dates during order creation by looking at Order XML in order-create
 # We document the procedure and any insights as we lead up to our Phase 4 Scenario

*Notes & Assumptions:*
 * The investigation should consider existing shipping threshold mappings in OMSe
 * Phase 4 Scenario can be used for a context to get insights into this process
 * Relevant Confluence page for this investigation: https://confluence.kohls.com:8443/display/OE/OMO-1976+nOLM%27s+Role+in+Setting+Estimated+Shipment+Dates

- Section  2.2: OMO-1975 - Optimal Approach for Demand Updates Post-Cancellation

- Introduction:
This is a child spike of epic OMO-1968, "Ship to Home Phase 0"

keywords are: child, spike, OMO-1975, Ship to Home Phase 0

- Description
*As* the nOLM system,

*I want to* determine whether demand updates following cancellations should be routed through OLM or directly from EFC,

*Because* this will help streamline cancellation handling and inventory accuracy.

*This spike is ready for acceptance when:*
 # We identify the how demand updates should be appropriately handled after cancellations
 # (Optional) We look for opportunities for an efficient pathway f this is feasible
 # Document findings on Confluence.

*Notes & Assumptions:*
 * The decision impacts the accuracy of inventory management
 * We should look at what OMSe is doing today
 * This will involve working with Customer Fulfillment team to understand what is done upon cancellation
 * Relevant Confluence page for this investigation: [insert confluence link].

- Section  2.2: OMO-1973 - Investigating Trigger Events for Shipment Delays Email Notifications in nOLM

- Introduction:
This is a child spike of epic OMO-1968, "Ship to Home Phase 0"

keywords are: child, spike, OMO-1973, Ship to Home Phase 0

- Description
*As* the nOLM system,

*I want to* investigate & identify the specific event/condition(s) that triggers shipment delayed email notifications,

*Because* understanding this trigger is important to addressing how to define this new email type, and modernizing customer communication.

*This spike is ready for acceptance when:*
 # Does this email exist in OMSe today?
 # We determine the event or condition(s) that leads to the sending of shipment delayed emails.
 # We document our findings and potential underlying cause that can help us define shipment delayed emails
 # Followup story is create to implement this new email (OOM team)

*Notes & Assumptions:*
 *  The nOLM process with systems like Customer Fulfillment/Carrier services
 * Relevant Confluence page for findings

- Section  2.2: OMO-1971 - Optimizing nOLM Email Notifications for 'Shipped' Status

- Introduction:
This is a child spike of epic OMO-1968, "Ship to Home Phase 0"

keywords are: , child, spike, OMO-1971, Ship to Home Phase 0

- Description
*As* the nOLM system,

*I want to* evaluate the timing mechanism for 'Shipped' status email notifications,

*Because* timely communication is important for accurate customer updates.
h3. This spike is ready for acceptance when:
 # We analyze the current lag between marking a shipment as 'Shipped' and sending the corresponding email.
 # We explore the possibility of syncing with a new carrier feed for real-time shipment status.

h3. Notes & Assumptions:
 * The scope of this spike is for
 ** Ship to home only (fulfill by EFCs) with an expectation to expand into SFSs in the future.
 ** SLSQ Single Shipnode with PayPal orders
 ** New spikes will be created for MLMQ scenarios (depending on the complexity) 
 * Understanding the existing gap in email notification timing is key
 * Technical feasibility and integration with a new carrier feed will be investigated.
 * Relevant insights and findings to be documented on Confluence: [insert confluence link].

- Section  2.2: OMO-850 - Learn about Current Customer Comm. for Pack Slip Email (n/a for BOPUS today)

- Introduction:
This is a child spike of epic OMO-1968, "Ship to Home Phase 0"

keywords are: , pickup, child, spike, OMO-850, Ship to Home Phase 0

- Description
*WE SHOULD* understand when, why, and what +Customer Communication+ is done today by the legacy solution, and what service it interacts with, during fulfillment, pickup, cancels etc. for BOPUS shipments

*BEFORE* we implement +Customer Communication+ for BOPUS

*BECAUSE* we want to provide similar functionality for BOPUS orders processed by new OLM in the future, to insure +Customer Communication+ is properly triggered during appropriate times, and need a deeper understanding of the current functionality before determining how to approach it for new OLM. This will help us sort out the stories that are needed and reduce the risk of missing something important.

*We will know we are done when ({color:#ff8b00}highlighted in Orange is in scope{color}):*
 * When the current +Customer Communication+ (email and text if it's available and requested by the customer) by the legacy solution throughout order processing for BOPUS shipments is well understood
 ** {color:#172b4d}Ready for Pickup (and text){color}
 ** {color:#172b4d}Ready for Pickup Initial Reminder{color}
 ** {color:#172b4d}Ready for Pickup Final Reminder{color}
 ** {color:#172b4d}Ready for Pickup - APP (Alternate Pickup person emails) {color}
 *** {color:#172b4d}Ready for pickup - APP{color}
 *** {color:#172b4d}Ready for Pickup Initial Reminder - APP{color}
 *** {color:#172b4d}Ready for Pickup Final Reminder - APP{color}
 ** -----------------------------------------------
 ** {color:#ff8b00}Pack Slip email (generated after ready for pickup when you go online to lookup your order and click the button of print pack slip) {color}
 ** -----------------------------------------------
 ** Store Order Complete (aka Customer Picked Up)
 ** Store Order Complete (aka Customer Picked Up) APP (Alternate Pickup person emails)
 ** -----------------------------------------------
 ** Order Cancellation KI
 ** -----------------------------------------------
 ** Order Modification KI Responsive Email (Order Modified email, part of the order was cancelled - not applicable to SLSQ)
 ** -----------------------------------------------
 ** Store Order Delayed Responsive Email (BOPUS order delayed email)
 ** -----------------------------------------------
 ** Ready for Pickup - APP Changed - should be covered within Ready for Pickup (Changes made to the alternate pickup person email)
 ** Ready for Pickup - APP Removed - should be covered within Ready for Pickup (Alternative deleted email - only goes to the customer)
 ** Ready for Pickup - No longer APP - should be covered within Ready for Pickup (Alternative removed - only goes to the alternative)

 * When we clearly understood what services the current solution interacts with to initiate +Customer Communication+ 
 * Document the payload/data that is included when we trigger that email and mapping the source for each attribute
 * Exception handling is well understood
 * All the learnings are documented in a Confluence Page

*Notes/Assumptions:*
 * Wallet and Account own the page that triggers the email, start with them first
 * +Customer Communication+ is required for active mode of our first thin slice
 * We need to develop this in the future but it does not apply to SLSQ or may be owned by the returns team (mapping required)
 ** Order Modification KI Responsive Email
 ** Store Order Customer Cancelled (aka Auto Refund)
 ** Store Order Customer Cancelled (aka Auto Refund) APP

*Reference:*
 * [https://confluence.kohls.com:8443/display/OE/1.1+OMO-28+-+Analysis+and+Design]
 * Transactional Email UAT Spreadsheet (OCF Tab): [https://docs.google.com/spreadsheets/d/1YBuIG2XTguKkmz-gUknz_FM06LGvkT_f-IVwjib04b0/edit#gid=2073458429]
 * Link to an assortment of production email examples: [https://miro.com/app/board/uXjVOU0EyYI=/?moveToWidget=3458764538551545135&cot=14]
 * Link to Customer Comm. BT Transactional Emails list: [https://docs.google.com/spreadsheets/d/159Zo99VUGPTzAdjGS1imvV6h_my2g82Ulff87mBoGzQ/edit#gid=0]



=====================================================================
Document 3: OMO-1969 - Ship to Home Phase 1
=====================================================================
- Introduction:
Able to validate and preserve the existing functionality while using the post checkout filtering

keywords are: parent, epic, OMO-1969, Ship to Home Phase 1

- Description
As OLM,

I want to be able to validate and preserve the existing functionality while using the post checkout filtering micro service,

So that we could use the Post Checkout service to send orders from the new Kafka topic to existing MQ and processed by OMSe.

 

Link to the STH Miro Board: https://miro.com/app/board/uXjVNPa9pHc=/

- Section  3.3: OMO-2056 -  Playbook Creation for Phase 1 Launch

- Introduction:
This is a child story of epic OMO-1969, "Ship to Home Phase 1"

keywords are: child, story, OMO-2056, Ship to Home Phase 1

- Description
*As an* OLM team member,
*I want to* collaborate with SREs to create a playbook,
*So that* we have a clear action plan for the Phase 1 launch.

*Acceptance Criteria 1:*
 * *Given* the upcoming Phase 1 launch,
 * *When* we're putting together the playbook,
 * *Then* it should outline essential steps, responsibilities, and how to handle issues.

*Acceptance Criteria 2:*
 * *Given* the playbook is ready,
 * *When* reviewed by our team and the SREs,
 * *Then* everyone should agree it's complete and useful for Phase 1.

*Notes:*
 * We need this playbook to make sure Phase 1 goes smoothly.
 * It's important to keep the SREs in the loop to make sure we include everything necessary.

- Section  3.3: OMO-1993 - Back-Out Plan for Post-Checkout Failures

- Introduction:
This is a child story of epic OMO-1969, "Ship to Home Phase 1"

keywords are: child, story, OMO-1993, Ship to Home Phase 1

- Description
*As a* Software Engineer

*I want* a simple back-out plan

*So that* we're prepared if the post-checkout service fails.

*Acceptance Criteria 1*
 * *Given* a rollback scenario,
 * *When* executed,
 * *Then* all steps should be documented for review.

*Notes:*
 * We should ensure that rollback scenario allows for transitioning back to the original Existing MQ
 * This may take some coordination with the Checkout team to identify what would need to be done on their side to roll back to the original posting of orders on Existing MQ

 

- Section  3.3: OMO-1992 - Post Checkout Dashboard with Key Metrics

- Introduction:
This is a child story of epic OMO-1969, "Ship to Home Phase 1"

keywords are: child, story, OMO-1992, Ship to Home Phase 1

- Description
*As an* OLM Support Team,

*I want to* create a dashboard for Post Checkout that includes Kafka lag and essential metrics,

*So that* we can effectively monitor its performance.

*Acceptance Criteria 1:*
 * *Given* Post Checkout is active,
 * *When* checking the dashboard,
 * *Then* I should see essential service metrics

*Acceptance Criteria 2:*
 * *Given* Post Checkout is active,
 * *When* checking the health of kafka topic,
 * *Then* I should see kafka lag metrics

*Notes:*
 * Align the dashboard's functionality with the monitoring features of other microservices.

- Section  3.3: OMO-1991 - Kafka to MQ Order Handling

- Introduction:
This is a child story of epic OMO-1969, "Ship to Home Phase 1"

keywords are: child, story, OMO-1991, Ship to Home Phase 1

- Description
*As a* Post Checkout service,

*I want to* send orders from Kafka to MQ and post Order XML to Existing MQ,

*So that* we maintain our current process while adding this new step.

*Acceptance Criteria:*
 * *Given* an order in Kafka,
 * *When* Post Checkout processes it,
 * *Then* the order goes to MQ and its XML to the Existing MQ.

*Notes:*
 * Keep it compatible with our existing system.
 * Testing should check that orders are routed right and existing features work as usual.



=====================================================================
Document 4: OMO-1970 - Ship to Home Phase 2
=====================================================================
- Introduction:
Develop the OLM sourcing Facade to audit and validate the orders against the OMS orders

keywords are: parent, epic, OMO-1970, Ship to Home Phase 2

- Description
As OLM,

I want to introducing the OLM sourcing Facade,

so that we could begin audit and validate the orders against the OMS orders (compare the request to the sourcing; New Kafka vs Existing MQ).

 

Link to the STH Miro Board: [https://miro.com/app/board/uXjVNPa9pHc=/]

- Section  4.4: OMO-2071 - OLM Sourcing Facade Metrics Dashboard for Ship to Home

- Introduction:
This is a child story of epic OMO-1970, "Ship to Home Phase 2"

keywords are: child, story, OMO-2071, Ship to Home Phase 2

- Description
*As the* OLM Sourcing Facade system,
*I want to* create a dashboard showing key performance metrics for sourcing requests and responses,
*So that* we can monitor and improve system performance.

*Acceptance Criteria:*
*Given* the OLM Sourcing Facade is processing sourcing requests and responses,
*When* checking the dashboard,
*Then* it should display important metrics like processing times and error rates.

- Section  4.4: OMO-2070 - Implementing Logging for OLM Sourcing Facade

- Introduction:
This is a child story of epic OMO-1970, "Ship to Home Phase 2"

keywords are: child, story, OMO-2070, Ship to Home Phase 2

- Description
*As the* OLM Sourcing Facade system{*},{*}
*I want to* implement logging with relevant information for troubleshooting,
*So that* errors during the Ship to Home process can be quickly identified and resolved.

*Acceptance Criteria:*
*Given* an error occurs in the Ship to Home process,
*When* the OLM Sourcing Facade processes the sourcing requests and responses,
*Then* logs should capture detailed error information and relevant data for resolution.

*Notes:*
 * Emphasize capturing key data points help in diagnosing and solving issues.

- Section  4.4: OMO-1997 - OLM Sourcing Facade Dashboard with Key Metrics

- Introduction:
This is a child story of epic OMO-1970, "Ship to Home Phase 2"

keywords are: child, story, OMO-1997, Ship to Home Phase 2

- Description
*As an* OLM Support Team,

*I want to* create a dashboard for OLM Sourcing Facade that includes Kafka lag and essential metrics,

*So that* we can effectively monitor its performance.

*Acceptance Criteria 1:*
 * *Given* OLM Sourcing Facade is active,
 * *When* checking the dashboard,
 * *Then* I should see essential service metrics

*Acceptance Criteria 2:*
 * *Given* OLM Sourcing Facade is active,
 * *When* checking the health of kafka topic,
 * *Then* I should see kafka lag metrics

*Notes:*
 * Align the dashboard's functionality with the monitoring features of other microservices.

- Section  4.4: OMO-1996 - Order Comparison for Sourcing Facade and Request MQ

- Introduction:
This is a child story of epic OMO-1970, "Ship to Home Phase 2"

keywords are: child, story, OMO-1996, Ship to Home Phase 2

- Description
*As the* OLM Sourcing Facade,

*I want to* compare orders sent to me (via new Kafka topic) with those in the request MQ sent by OMS,

*So that* we can make sure it is consistent and accurate

*Acceptance Criteria:*
 * *Given* orders are sent to the Sourcing Facade via Kafka Topic and orders sent to request MQ from OMS
 * *When* comparing these orders,
 * *Then* identify any discrepancies and confirm they match up correctly.

*Notes:*
 * Emphasis on accurately matching orders between the new Kafka topic and request MQ.
 * Develop a method to easily spot and resolve differences.

- Section  4.4: OMO-1995 - OLM Sourcing Facade Collaboration with Promising and Sourcing Team

- Introduction:
This is a child story of epic OMO-1970, "Ship to Home Phase 2"

keywords are: child, story, OMO-1995, Ship to Home Phase 2

- Description
*As the* OLM Development Team,

*I want to* work closely with the promising and sourcing team,

*So that* our OLM Sourcing Facade fits well with their system and avoids overlapping work.

*Acceptance Criteria:*
 * *Given* we're building the OLM Sourcing Facade,
 * *When* we tie it into the sourcing process via their ACL,
 * *Then* it should source orders just once and stop OMS from doing it again if it's already been sourced.



=====================================================================
Document 5: OMO-1972 - Ship to Home Phase 3
=====================================================================
- Introduction:
Able to Use the Sourcing Facade in Prod

keywords are: parent, epic, OMO-1972, Ship to Home Phase 3

- Description
As OLM,

I want to be able to use the OLM sourcing Facade,

so that we could begin sourcing orders that was filtered to OMSe from the Post Checkout Service.

 

Link to the Ship to Home Miro Board: https://miro.com/app/board/uXjVNPa9pHc=/

- Section  5.5: OMO-2005 - Adding MongoDB for Sourcing Data in Facade

- Introduction:
This is a child story of epic OMO-1972, "Ship to Home Phase 3"

keywords are: child, story, OMO-2005, Ship to Home Phase 3

- Description
*As the* OLM Sourcing Facade,

*I want to* use MongoDB,

*So that* we persist all our sourcing requests and responses

*Acceptance Criteria:*
 * *Given* we're working with sourcing requests and responses,
 * *When* we receive this data from Sourcing ACL,
 * *Then* it should be reliably stored in MongoDB.

*Notes:*
 * MongoDB will help us prevent resourcing by matching it with sourcing requests which already have been made

- Section  5.5: OMO-2004 - Kafka Response Topic and Lag on Dashboard

- Introduction:
This is a child story of epic OMO-1972, "Ship to Home Phase 3"

keywords are: child, story, OMO-2004, Ship to Home Phase 3

- Description
*As the* OLM Support Team,

*I want to* add the new Kafka response topic and its lag metrics to our Monitoring Dashboard,

*So that* we have insights into its performance.

*Acceptance Criteria:*
 * *Given* the Kafka response topic is active,
 * *When* monitoring the system,
 * *Then* we should see both the topic activity and its lag time on the Dashboard.

- Section  5.5: OMO-2003 - Load Test for Sourcing Facade

- Introduction:
This is a child story of epic OMO-1972, "Ship to Home Phase 3"

keywords are: child, story, OMO-2003, Ship to Home Phase 3

- Description
*As the* OLM Team,

*I want to* run a load test on the Sourcing Facade,

*So that* we know it can handle the busy times.

*Acceptance Criteria:*
 * *Given* the Facade is up,
 * *When* testing how much it can take,
 * *Then* make sure it deals with loads as expected given its STPS (specified transactions per second).

*Notes:*
 * Simulate "real" use to see how it holds up.
 * Identify any weak spots
 * Check it stays steady when it’s really busy.

- Section  5.5: OMO-2002 - OMS Shift from MQ to Kafka

- Introduction:
This is a child story of epic OMO-1972, "Ship to Home Phase 3"

keywords are: child, story, OMO-2002, Ship to Home Phase 3

- Description
*As the* OMS Team working with us,

*I want to* switch OMS from listening to the existing MQ to the new Kafka topics for requests and responses,

*So that* OMS updates to our new communication channels.

*Acceptance Criteria:*
 * *Given* OMS currently uses the existing MQ,
 * *When* changing to listen to Kafka topics,
 * *Then* OMS should stop using MQ and start using Kafka for all incoming and outgoing messages.

*Notes:*
 * The change involves turning off OMS's connection to MQ and activating it in Kafka.

- Section  5.5: OMO-2001 - Facade-to-OMS Response Routing via Kafka

- Introduction:
This is a child story of epic OMO-1972, "Ship to Home Phase 3"

keywords are: child, story, OMO-2001, Ship to Home Phase 3

- Description
*As the* OLM Sourcing Facade,

*I want to* set up a new Kafka response topic,

*So that* responses can be efficiently directed through Kafka to OMS.

*Acceptance Criteria:*
 * *Given* we have responses ready in the Facade,
 * *When* they need to reach OMS,
 * *Then* they should go through the new Kafka topic.

- Section  5.5: OMO-2000 - OLM Facade Handling MQ Responses and Kafka Topic

- Introduction:
This is a child story of epic OMO-1972, "Ship to Home Phase 3"

keywords are: child, story, OMO-2000, Ship to Home Phase 3

- Description
*As the* OLM Sourcing Facade,

*I want to* listen to responses from MQ and relay them to the New Kafka response topic,

*So that* information flows correctly through our system.

*Acceptance Criteria:*
 * *Given* the OLM Facade is linked to MQ,
 * *When* it receives a response from MQ,
 * *Then* it should forward this response to the New Kafka response topic.

*Notes:*
 * This is about ensuring that the Facade accurately captures and relays MQ responses to Kafka.

- Section  5.5: OMO-1999 - OLM Sourcing Facade integration with MQ Topics

- Introduction:
This is a child story of epic OMO-1972, "Ship to Home Phase 3"

keywords are: child, story, OMO-1999, Ship to Home Phase 3

- Description
*As the* OLM Sourcing Facade,

*I want to* connect with both the Request and Response MQ,

*So that* our requests and responses are managed efficiently.

*Acceptance Criteria:*
 * *Given* the OLM Sourcing Facade is active,
 * *When* it interacts with MQ,
 * *Then* ensure seamless sending and receiving of data.

*Notes:*
 * These are the existing Request and Response MQ that OMS was using to talk to Sourcing Blackbox.
 * Ensure reliable communication between the Facade and MQ.
 * Thoroughly test the connection for accurate message handling.

- Section  5.5: OLM-1384 - Referencing ShipNode in existing OMS for Sourcing

- Introduction:
This is a child story of epic OMO-1972, "Ship to Home Phase 3"

keywords are: child, story, OLM-1384, Ship to Home Phase 3

- Description
*As* Sterling OMSe system,

*I want to* shipNode value for identify where to source S2H orders,

*So that* we do not make duplicate call to Sourcing engine from Sterling OMSe

*Acceptance Criteria:*
 * *Given* we're working S2H orders,
 * *When* we receive shipNode from filtering ACL in OMSe,
 * *Then* OMSe should not make another sourcing call.

*Notes:*
 * Sourcing response that is required to actually source order to a node can be pulled from sourcing facade or mongo db.
 * If this option does not work then we need to mock sourcing call from OMSe at sourcing faccde to return the response from original sourcing call.



=====================================================================
Document 6: OMO-1974 - Ship to Home Phase 4
=====================================================================
- Introduction:
Able to Throttling Orders at Post Checkout to Create Shipments in OLM

keywords are: parent, epic, OMO-1974, Ship to Home Phase 4

- Description
As OLM,

I want to be able to throttling limited orders at the Post Checkout service,

so that we could begin 
 # Creating shipments in OLM
 # Monitoring performance by processing 10 orders per day

 

Link to the Ship to Home Miro Board: https://miro.com/app/board/uXjVNPa9pHc=/

- Section  6.6: OMO-2079 - Discuss Modernization Efforts of the PackSlip Email Trigger Endpoint

- Introduction:
This is a child spike of epic OMO-1974, "Ship to Home Phase 4"

keywords are: child, spike, OMO-2079, Ship to Home Phase 4

- Description
*As* OLM
*I want to* trigger email communication of the packing slip to the customer using a modern REST endpoint
*Because* we would like to continue modernizing as we add new features

This spike is ready for acceptance when:
 * We have talked with the O&OM (CCS) team about modernizing the Pack Slip trigger endpoint
 ** this will include which fields to keep and remove based on [OMO-850 spreadsheet|https://docs.google.com/spreadsheets/d/17IPdP1l_z9pjjekjf7yf7XRrbyv6MsUefBdz4OClIEA/edit#gid=0]

- Section  6.6: OMO-2078 - Understand Packslip View and Email Endpoints

- Introduction:
This is a child spike of epic OMO-1974, "Ship to Home Phase 4"

keywords are: child, spike, OMO-2078, Ship to Home Phase 4

- Description
*As* a Kohl's customer
*I want to* be able to view my packing slip and email it to myself using nOLM
*Because* it is an important document within the STH flow

This spike is ready for acceptance when:
 * We understand how e-comm communicates to OMS
 ** Endpoints it uses to get pack slip information and triggering the email
 ** Request body and format (SOAP?) - also if there are plans to modernize
 ** Response that is returned by OMS
 * Document these findings in Confluence

- Section  6.6: OMO-2055 - Ensuring Effective Throttling in the Order Router

- Introduction:
This is a child story of epic OMO-1974, "Ship to Home Phase 4"

keywords are: child, story, OMO-2055, Ship to Home Phase 4

- Description
*As the* Order Router,
*I want to* monitor and validate the throttling process,
*So that* we can confirm it's working as intended and understand its impact on order processing.

*Acceptance Criteria 1:*
 * *Given* the Order Router is implementing throttling,
 * *When* orders are being processed,
 * *Then* the system should track and report the number of processed and queued orders each hour to confirm effective throttling.

*Acceptance Criteria 2:*
 * *Given* the monitoring feature is operational,
 * *When* evaluating the system’s performance,
 * *Then* there should be reliable data to show that throttling is correctly managing the order flow.

 

*Notes:*
 * We need this to make sure our system is throttling orders right and not causing problems.

- Section  6.6: OMO-2024 - OLM Sourcing Response Verification in Mongo Database

- Introduction:
This is a child story of epic OMO-1974, "Ship to Home Phase 4"

keywords are: child, story, OMO-2024, Ship to Home Phase 4

- Description
*As* the OLM system,

*I want* to check in the Mongo database for existing sourcing responses,

*So that* I can verify if the response to a sourcing request already exists.

{*}Acceptance Criteria 1{*}:
 * *Given* a sourcing request is made in OLM,
 * *When* checking the Mongo database,
 * *Then* the system should look for any existing responses to that request.

{*}Notes{*}:
 * This check helps avoid duplicate sourcing.
 * Make sure the search in Mongo is accurate.

- Section  6.6: OMO-2023 - E2E Testing for Post Checkout and OLM Workflow

- Introduction:
This is a child story of epic OMO-1974, "Ship to Home Phase 4"

keywords are: child, story, OMO-2023, Ship to Home Phase 4

- Description
*As* the OLM-S2H Testing team,

*I want* a basic end-to-end test for the Post Checkout to OLM process,

*So that* we can make sure orders move correctly from Post Checkout to OLM.

{*}Acceptance Criteria 1{*}:
 * *Given* orders are processed through Post Checkout,
 * *When* they are passed to OLM,
 * *Then* the test should verify that this transition happens smoothly.

{*}Notes{*}:
 * Focus the test on the standard, expected workflow (the "happy path").
 * Ensure the test is simple and covers all essential steps.
 * Regular testing to maintain consistent and reliable order processing.

- Section  6.6: OMO-2021 - Detailed Validation for Order and Shipment Creation in OLM

- Introduction:
This is a child story of epic OMO-1974, "Ship to Home Phase 4"

keywords are: child, story, OMO-2021, Ship to Home Phase 4

- Description
*As* a member of the OLM team,

*I want* to validate the creation of orders and shipments in OLM for orders coming from the Create Order Topic,

*So that* we can ensure that each order and its shipments are created correctly, particularly with the new, more detailed attributes for S2H and fulfillment.

{*}Acceptance Criteria 1{*}:
 * *Given* an order passes through the Create Order Topic and enters OLM,
 * *When* it triggers order and shipment creation,
 * *Then* the system should accurately create the order and all associated shipments.

{*}Acceptance Criteria 2{*}:
 * *Given* an order is being processed in OLM,
 * *When* it's a filtered order from the Create Order Topic,
 * *Then* validate that the order and shipment details are complete and match the expected set of shipments, including the new attributes.

{*}Notes & Assumptions{*}:
 * Emphasize correctness and detail in processing orders and their associated shipments.
 * The new attributes for S2H and fulfillment nodes should be correctly identified and incorporated into the order and shipment details.

- Section  6.6: OMO-2020 - Post Checkout Order Filtering to Create Order Topic

- Introduction:
This is a child story of epic OMO-1974, "Ship to Home Phase 4"

keywords are: child, story, OMO-2020, Ship to Home Phase 4

- Description
*As* the Post Checkout service,

*I want* to filter orders to the Create Order Topic,

*So that* only relevant orders are sent to the existing topic used for BOPUS.

{*}Acceptance Criteria 1{*}:
 * *Given* the filtering mechanism is in place,
 * *When* an order is processed,
 * *Then* it should be checked against BOPUS criteria before being directed to the Create Order Topic.

{*}Notes & Assumptions{*}:
 * Define clear criteria for BOPUS-eligible orders.
 * The filtering process should make sure to prevent any non-BOPUS orders from being sent to the Create Order Topic

- Section  6.6: OMO-2018 - Update Post Checkout with Order Throttling Feature

- Introduction:
This is a child story of epic OMO-1974, "Ship to Home Phase 4"

keywords are: child, story, OMO-2018, Ship to Home Phase 4

- Description
*As* the Post Checkout service,

*I want* to add an order throttling feature,

*So that* the service can limit the rate of sourcing calls to 10 orders per hour.

{*}Acceptance Criteria 1{*}:
 * *Given* orders are being processed by Post Checkout,
 * *When* they are queued for sourcing,
 * *Then* only 10 orders should be sent to the Sourcing Facade per hour.

{*}Acceptance Criteria 2{*}:
 * *Given* the order throttling feature is active,
 * *When* more than 10 orders are processed in an hour,
 * *Then* the excess orders should be queued for the next available time slot.

{*}Notes & Assumptions{*}:
 * The throttling mechanism should be configurable to adapt to future changes in order processing rates.
 * Ensure that the queued orders are processed in a timely manner without data loss.

- Section  6.6: OMO-2017 - Integration of Post Checkout with Sourcing Facade

- Introduction:
This is a child story of epic OMO-1974, "Ship to Home Phase 4"

keywords are: child, story, OMO-2017, Ship to Home Phase 4

- Description
*As* the Post Checkout service,

*I want* to integrate with the Sourcing Facade service,

*So that* requests and responses can be exchanged between the request and response topics.

{*}Acceptance Criteria 1{*}:
 * *Given* an order is processed by Post Checkout,
 * *When* it interacts with the Sourcing Facade,
 * *Then* the request should be sent accurately to the Sourcing Facade.

{*}Acceptance Criteria 2{*}:
 * *Given* the integration is in place,
 * *When* the Sourcing Facade sends back a response,
 * *Then* Post Checkout should receive and handle it correctly.

{*}Notes & Assumptions{*}:
 * Ensure that the integration facilitates accurate communication between the services.

- Section  6.6: OMO-1467 - Write Message to legacy Cancel MQ for Stores when S2H Ships

- Introduction:
This is a child story of epic OMO-1974, "Ship to Home Phase 4"

keywords are: , child, story, OMO-1467, Ship to Home Phase 4

- Description
*As* new OLM

*I want* to inform Stores when a S2H shipment has shipped

*So that* that stores remain in sync, consistent with existing legacy processing

+*Acceptance Criteria 1:*+
 * *Given* an order exists in new OLM with a S2H shipment 
 * *When* the S2H shipment moves to Shipped status
 * *Then* a message is published to the existing IBM MQ (same one used for Cancel messages)  for Stores to consume


+*Notes & Assumptions*+
 * Based off of cancel spike: OMO-1220 and related stories
 * This only applies when in Active mode, no Shipped messages should be published to the queue in Shadow mode
 * MQ is not consumed by stores directly, but a process owned by Fulfillment + Pickup team consumes messages and forwards them on to the appropriate store(s)
 * MQ should eventually replaced by Kafka or another solution, but while orders are still being processed by the legacy solution the Fulfillment + Pickup team does not want to change their processing to receive messages 2 different ways in the interim.
* Todd Miesfeld from Fulfillment + Pickup team told us about this Shipped status message for S2H while we were validating our first BOPUS thin slice;  this story was created to help us remember.

- Section  6.6: OMO-1372 - OLM Gateway OTS Order Detail Endpoint - Decrypt ShipTo encrypted values from nOLM

- Introduction:
This is a child story of epic OMO-1974, "Ship to Home Phase 4"

keywords are: child, story, OMO-1372, Ship to Home Phase 4

- Description
*As* OLM Gateway
*I want* nOLM OTS order-details response data that is specific to ship to home to be in readable format and add Protegrity 9 
*So that* it is consistent with the legacy data already in this table 

*Acceptance Criteria 1:*
 * Decrypt all encrypted values and provide those on nOLM OTS order-details response.

personInfoShipTo.firstName
personInfoShipTo.lastName

+*Notes & Assumptions*+
* These were removed from OMO-1319, which decrypted values applicable to BOPUS orders;  creating this story now to help us remember to come back to it for the first S2H thin slice we take up 
 * [https://miro.com/app/board/uXjVOU0EyYI=/?moveToWidget=3458764541855300275&cot=14] - Order Visibility design
 *  https://confluence.kohls.com:8443/display/OE/Protegrity+v9+Installation



=====================================================================
Document 7: OMO-2008 - Ship to Home Phase 5
=====================================================================
- Introduction:
Able to Fulfill STH SLSQ orders at EFC6

keywords are: parent, epic, OMO-2008, Ship to Home Phase 5

- Description
As OLM,

I want to be able to process and fulfill orders at EFC6 by using the Post Checkout service and the sourcing facade,

so that we could begin 
 # Using OLM to fulfill limited orders (10?) from EFC6 (re-visit all the nOLM microservices)
 # Able to use OLM to cancel (no re-sourcing and customer impact is limited)

 

Link to the Ship to Home Miro Board: [https://miro.com/app/board/uXjVNPa9pHc=/]

- Section  7.7: OMO-2124 - Investigate Shipment Confirmation API

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: , child, spike, OMO-2124, Ship to Home Phase 5

- Description
*As* the boundary between the Order domain and the domain of Customer Fulfillment
*I want to* Investigate the Shipment Confirmation API
*Because* we need to understand this integration before shipments can be invoiced

*This spike is ready for acceptance when:*
 # We build a spreadsheet documenting the request and response of the Shipment Confirmation API: expected values, required fields, error codes, etc{*}{{*}}
 # We understand and document its functionality at a high level for both confirmations and cancellation
 # We understand the channel in which this call happens today (We have been told that this is done via API for some EFCs and MQ for others)
 ## On a high level, get an understanding on if Customer Fulfillment has the bandwidth to switch from MQ to API for the other EFCs
 # If one exists, find the WSDL for this API
 # Create the following follow up stories:
 ## Store Fulfillment to support the shipment confirmation functionality (this can be a few spikes/stories, we can keep this iterative like we did with BOPUS APIs-basic happy path first, then error codes, then understanding cancel flows)
 ## EFC ACL to support routing Shipment Confirmation calls to either OMS or OLM (this can be a couple stories too if it seems too big to have all at once)

*Notes & Assumptions:*
 * [https://docs.google.com/spreadsheets/d/1LZ7nvTMLnTweTssJO_BHVqU4pk31ZgmdlwlzPexuSZo/edit#gid=0] Link to boundary request mapping
 * Master Miro Reference: [https://miro.com/app/board/uXjVPjzxRLY=/?moveToWidget=3458764575833473448&cot=14] 

- Section  7.7: OMO-2123 - Create empty EFC ACL application

- Introduction:
This is a child story of epic OMO-2008, "Ship to Home Phase 5"

keywords are: , child, story, OMO-2123, Ship to Home Phase 5

- Description
*As* the EFC ACL
*I want to* Create a new empty EFC ACL application
*So that* we can begin the interface between our internal Order domain and Customer Fulfillment's domain

*Acceptance Criteria 1:*
 * *Create* an empty application, using one of our existing applications as a reference
 ** Has all of the normal features: KADO, Java 21, deploys to review/staging/prod, runs locally, connects to our config server
 * EFC ACL is more of a description of the application, not the official, agreed upon, name. When naming the application, include ACL in the title (like order-acl and store-commerce-acl have), to make it clear this is a boundary application that we have hopes of eventually retiring once all orders are onto nOLM
 ** customer-fulfillment-acl
 ** efc-acl
 ** ship-to-home-acl (If it isn't clear, I am not good at naming things)

*Notes & Assumptions:*
 * [https://docs.google.com/spreadsheets/d/1LZ7nvTMLnTweTssJO_BHVqU4pk31ZgmdlwlzPexuSZo/edit#gid=0] Link to boundary request mapping
 * Master Miro Reference: [https://miro.com/app/board/uXjVPjzxRLY=/?moveToWidget=3458764575833473448&cot=14] 

- Section  7.7: OMO-2122 - Get EFC6 Kafka Connection Details for all Appropriate Environments

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2122, Ship to Home Phase 5

- Description
*As* the boundary between OLM and Customer Fulfillment
*I want to* Get EFC6 Connection Details for all Appropriate Environments
*Because* we need to publish to this topic

*This spike is ready for acceptance when:*
 # We work with the Customer Fulfillment Team to get all required connection details to connect to the Kafka topic used by EFC6 (dev/staging/prod)
 # We document this information somewhere for future stories

*Notes & Assumptions:*
 * [https://docs.google.com/spreadsheets/d/1LZ7nvTMLnTweTssJO_BHVqU4pk31ZgmdlwlzPexuSZo/edit#gid=0] Link to boundary request mapping
 * Master Miro Reference: [https://miro.com/app/board/uXjVPjzxRLY=/?moveToWidget=3458764575833473448&cot=14] 
 * Kafka Topic name is: *of_release_order_kafka*

- Section  7.7: OMO-2121 - Decide Kafka topic and format EFC ACL will consume from for EFC processing

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2121, Ship to Home Phase 5

- Description
*As* the boundary between Store Fulfillment and the EFC ACL
*I want to* Decide Kafka topic and format EFC ACL will consume from for EFC processing
*Because* we need to determine if we need a new topic or use an existing one for EFC processing

*This spike is ready for acceptance when:*
 # We decide if there is an existing topic/message we can utilize that Store Fulfillment publishes to, that the EFC ACL can consume from to send messages to the EFCs
 ## Consider the following:
 ### Will we need to make a call back to Order Create or Store Fulfillment for Order/Shipment information ([https://docs.google.com/spreadsheets/d/1LZ7nvTMLnTweTssJO_BHVqU4pk31ZgmdlwlzPexuSZo/edit#gid=0)]
 ### Would error retries on this existing topic cause any issues by current consumers
 ### WIll the EFC ACL have to do filtering on the messages published to this topic? If so, do we think the filtering will impact performance?
 # If there is not a topic yet, we propose a name for the new topic that would interface between Store Fulfillment and the EFC ACL and propose the message structure too
 # Create a story for Store Fulfillment to publish to the new topic (if applicable), and EFC ACL to consume from whatever topic is chosen.

*Notes & Assumptions:*
 * [https://docs.google.com/spreadsheets/d/1LZ7nvTMLnTweTssJO_BHVqU4pk31ZgmdlwlzPexuSZo/edit#gid=0] Link to boundary request mapping
 * Master Miro Reference: [https://miro.com/app/board/uXjVPjzxRLY=/?moveToWidget=3458764575833473448&cot=14] 

- Section  7.7: OMO-2117 - Investigate Red/Yellow fields for EFC6 Mapping

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2117, Ship to Home Phase 5

- Description
*As* the owner of ship 2 home orders
*I want to* Investigate Red/Yellow fields for EFC6 Mapping
*Because* we need to publish data to EFC6

*This spike is ready for acceptance when:*
 # Work with OMS and/or Customer Fulfillment to understand red/yellow fields required by EFC6:
 ## priority
 ## releaseNo
 ## extnPickTicketNo
 ## extnRG
 ## extnWMSInstType
 ## itemDesc
 # Based on 1. create up to two stories:
 ## story for providing the yellow/red fields that we should own internally
 ## story to have our EFC ACL application handle any fields we should not be the owner of

*Notes & Assumptions:*
 * Document with list of required red/yellow fields for EFC6: https://docs.google.com/spreadsheets/d/1LZ7nvTMLnTweTssJO_BHVqU4pk31ZgmdlwlzPexuSZo/edit#gid=0

- Section  7.7: OMO-2107 - Understand the message that goes to all EFCs

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2107, Ship to Home Phase 5

- Description
*We should* analyze all the messages that goes to all EFCs
*Because* we want to identify a consistent way to send order message to all EFCs.

*We are done when* 
 # Differences are identified and documented
 # A design approach is proposed on how we would send the messages to all EFCs regardless of the version of the warehouse management system. e.g. Do we want to move existing from XML to Json format? Do we need to build a ACL to do the conversion? Do we need to work with Customer Fulfillment about providing information that isn't our domain (Item data via PICs)

Notes:

1. This spike isn't about understanding a full mapping for each EFC between OMS and EFCs, it is focused on commonality in message structure and format

- Section  7.7: OMO-2091 - Understand changes to populating OverallTotals for Ship To Home orders

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2091, Ship to Home Phase 5

- Description
*As* the OLM team
*I want to* verify if we need to change how we populate our fields within OverallTotals on the Order model
*Because* we need to find necessary changes to take on STH orders.

*This spike is ready for acceptance when:*
 # We have clarity on the calculations for OverallTotals for ship to home orders
 # If work is small, make changes so overallTotals is working with a STH order

*Notes & Assumptions:*
 * [https://confluence.kohls.com:8443/display/OE/OMO-1975%3A+EFC+Post-Cancellation+GIV+Interactions] – page for EFC information like shipNode.
 * Currently there are several fields in OverallTotals that stay set to 0, still spike is to identify if we finally need to add calculation logic for some of these currently zeroed out fields
 * The OTS OrderDetails call would be a good mechanism to understand how Sterling populates OverallTotals for s2h, as most/all of those fields are exposed on that endpoint

- Section  7.7: OMO-2088 - Understanding Mapping for EFC6 with Customer Fulfillment

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2088, Ship to Home Phase 5

- Description
*As the* OLM system,

*I want to* understand the mapping process for EFC6 with Customer Fulfillment,

*because* it is crucial to have seamless integration for fulling S2H orders

 

*This spike is ready for acceptance when:*
 # We have a clear understanding of how EFC6 interfaces with the Customer Fulfillment system.
 # A detailed mapping of the data flow and processes between EFC6 and Customer Fulfillment has been documented.

- Section  7.7: OMO-2062 - Research Existing Checkout team integration with TVS

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2062, Ship to Home Phase 5

- Description
*As* the OLM system,

*I want to* investigate the Checkout team's method for TVS calls during repricing,

*Because* we need to understand their process to create a direct TVS integration without splitting order lines.

*Acceptance Criteria:*
 # Understand the Checkout team's method for TVS calls.
 # Identify why they split order lines.
 # Propose a direct TVS call method avoiding line splits.

*Notes:*
 * Aim to simplify our process.
 * Work with the Checkout team for insights.
 * Document findings.
 

- Section  7.7: OMO-2053 - Handling Earned KC Values in S2H Orders

- Introduction:
This is a child story of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, story, OMO-2053, Ship to Home Phase 5

- Description
*As an* OLM Engineer,
*I want to* correctly capture earned KC values in S2H orders,
*So that* customers receive accurate invoices

*Acceptance Criteria 1:*
 * *Given* a S2H order is processed without the earned KC value,
 * *When* a second message with earned KC information arrives,
 * *Then* the OLM system should combine this data to complete the order invoice.

*Acceptance Criteria 2:*
 * *Given* both the initial S2H order and the earned KC information are received,
 * *When* these are processed by OLM,
 * *Then* the invoice should accurately reflect the earned KC.

*Notes:*
 * Need to confirm with Chinmaya regarding the separate KC value message for S2H orders.
 * Coordination with the Checkout team might be necessary for message handling.

- Section  7.7: OMO-2048 - Integrate with Other EFCs (Phase X)

- Introduction:
This is a child story of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, story, OMO-2048, Ship to Home Phase 5

- Description
*As the OLM Sourcing Facade,*

*I want to* integrate with other EFCs,

*So that* I can fulfill orders from multiple EFCs effectively.

*Acceptance Criteria 1:*

*Given* the OLM Sourcing Facade is operational,

*When* it receives an order,

*Then* it should be able to select the most suitable EFCs for fulfillment based on current sourcing criteria.

*Notes & Assumptions:*
 * Ensure seamless integration with other EFCs without disrupting existing processes.
 * Coordination with EFCs is essential for consistent fulfillment strategies.

- Section  7.7: OMO-2047 - Develop Scheduler for Auto-Cancelling Orders with Delayed EFC Updates

- Introduction:
This is a child story of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, story, OMO-2047, Ship to Home Phase 5

- Description
*Description:*
*As the* OLM system,
*I want to* build a scheduler that automatically cancels orders if there are no updates from EFC after a specified number of days,
*So that* the system remains efficient and responsive to delays.

*Acceptance Criteria 1:*
*Given* an order has not received any updates from EFC within the specified timeframe,
*When* this time limit is reached,
*Then* the scheduler should automatically initiate cancellation of the order.

*Acceptance Criteria 2:*
*Given* the scheduler is operational,
*When* it detects an order eligible for cancellation,
*Then* it should process the cancellation and update the order status accordingly.

*Notes & Assumptions:*
 * The timeframe for awaiting updates (x days) should be determined based on average processing times and customer service standards.
 * The scheduler should be robust and reliable, ensuring no false cancellations occur.

- Section  7.7: OMO-2046 - Identifying Automatic Order Cancellation After Delayed Updates from EFC

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2046, Ship to Home Phase 5

- Description
*Description:*
*As the* OLM system,
*I want to* identify a method to automatically cancel orders after a certain number of days if no updates are received from EFC,
*Because* timely updates are crucial, and long delays need a response.

*This spike is ready for acceptance when:*
 * *We have a clear strategy* for automatically cancelling orders that lack updates from EFC after a specified time.
 * *We have documented* the triggers and conditions when these cancellations occur.

*Notes & Assumptions:*
 * The time frame for awaiting updates from EFC before triggering cancellation needs to be reasonable and aligned with customer expectations.
 * Ensure that the mechanism for this process is reliable and integrates smoothly with the existing OLM system.

- Section  7.7: OMO-2045 - Enhance Cancel Shipment Processor for EFC Confirmations

- Introduction:
This is a child story of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, story, OMO-2045, Ship to Home Phase 5

- Description
*Description:*
*As the* Cancel Shipment Processor,
*I want to* receive and process shipment cancellation confirmations from EFC,
*So that* I can keep the order status up to date and manage cancellations accurately.

*Acceptance Criteria 1:*
*Given* a cancellation confirmation is received from EFC,
*When* this information is processed,
*Then* I should accurately update the order's cancellation status.

*Acceptance Criteria 2:*
*Given* the order status needs to be updated,
*When* I process the EFC confirmation,
*Then* it should ensure the system reflects the correct current status of the order.

*Notes & Assumptions:*
 * The process should be prompt to avoid any discrepancies in order status.
 * The updates should be accurately reflected across the system for consistency.

- Section  7.7: OMO-2043 - XML Converter Update for EFC6 Orders

- Introduction:
This is a child story of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, story, OMO-2043, Ship to Home Phase 5

- Description
*As the* OLM team,
*I want to* explore how the XML Converter should be updated for EFC6,
*So that* it converts any new entities or attributes in existing entities correctly

*Acceptance:*
 * Make changes for handling STH Orders:
 ** Hardcode shipNode to EFC6's shipNode (849)
 ** Set fulfillmentMethod to STH when not Bopus or VGC
 * Clarify these changes with STH fulfillment as it relates to EFC6 (if this is applicable to the specific values for EFCs)

- Section  7.7: OMO-2042 - VGC Activator Review for EFC6 Compatibility

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2042, Ship to Home Phase 5

- Description
*Description:*
*As the* OLM team,
*I want to* assess the VGC Activator's functionality with EFC6 orders,
*So that* it activates gift cards effectively in this context.

*Acceptance:*
 * Document changes needed for the VGC Activator in the EFC6 setup.
 * Describe how it integrates with EFC6 order processing.

- Section  7.7: OMO-2041 - Enhancing Store Fulfillment for EFC6

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2041, Ship to Home Phase 5

- Description
*Description:*
*As the* OLM team,
*I want to* determine what needs to change in Store Fulfillment for EFC6 orders,
*So that* store-based fulfillment aligns with EFC6 needs.

*Acceptance:*
 * Identify adjustments for the Store Fulfillment service for EFC6 order handling.
 * Clarify its operational role with EFC6.
 * Create any follow-up stories or spikes

- Section  7.7: OMO-2040 - Store Commerce Proxy Adaptation for EFC6

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2040, Ship to Home Phase 5

- Description
*Description:*
*As the* OLM team,
*I want to* figure out changes for the Store Commerce Proxy with EFC6 orders,
*So that* it facilitates smooth EFC6 transactions.

*Acceptance:*
 * List required modifications for the Store Commerce Proxy in the EFC6 environment.
 * Explain how it functions with EFC6 order processing.

- Section  7.7: OMO-2039 - Store Commerce ACL Alignment with EFC6

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2039, Ship to Home Phase 5

- Description
*Description:*
*As the* OLM team,
*I want to* identify how the Store Commerce ACL should be tailored for EFC6,
*So that* it supports EFC6 orders effectively.

*Acceptance:*
 * Write down necessary updates for the Store Commerce ACL in EFC6 scenarios.
 * Describe its role in EFC6 order management.

- Section  7.7: OMO-2038 - Shipment Fulfillment Processor Update for EFC6

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2038, Ship to Home Phase 5

- Description
*Description:*
*As the* OLM team,
*I want to* explore adjustments needed in the Shipment Fulfillment Processor for EFC6,
*So that* it processes EFC6 shipments.

*Acceptance:*
 * Document changes for handling EFC6 shipments in the Shipment Fulfillment Processor.
 * Clarify its integration with EFC6 fulfillment.

- Section  7.7: OMO-2037 - Order Create Process Review for EFC6

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2037, Ship to Home Phase 5

- Description
*Description:*
*As the* OLM team,
*I want to* assess the Order Create microservice for updates with EFC6 orders,
*So that* order creation aligns with EFC6's requirements.

*Acceptance:*
 * Detail necessary changes for creating orders in the EFC6 framework.
 * Explain how it interacts with the EFC6 fulfillment process.

*Notes:*
 # Link to the STH flow
 # Contacts for the customer fulfillment team: [~TKA02PE] (PM)

- Section  7.7: OMO-2036 - Updating OLM Payment Cancel for EFC6

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2036, Ship to Home Phase 5

- Description
*Description:*
*As the* OLM team,
*I want to* determine how the OLM Payment Cancel needs to be modified for EFC6 orders,
*So that* payment cancellations are handled correctly.

*Acceptance:*
 * List changes for the OLM Payment Cancel service in the context of EFC6.
 * Describe its function in the EFC6 payment process.

- Section  7.7: OMO-2035 - OLM Gateway Compatibility with EFC6

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2035, Ship to Home Phase 5

- Description
*Description:*
*As the* OLM team,
*I want to* identify necessary changes in the OLM Gateway for EFC6 integration,
*So that* it functions smoothly with EFC6 order handling.

*Acceptance:*
 * Outline needed updates for the OLM Gateway in the EFC6 setup.
 * Clarify its role in managing EFC6 orders.

- Section  7.7: OMO-2034 - Adapting Invoice for EFC6 Orders

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2034, Ship to Home Phase 5

- Description
*Description:*
*As the* OLM team,
*I want to* identify updates needed in the Invoice microservice for EFC6 order processing,
*So that* invoicing is accurate and timely for these orders.

*Acceptance:*
 * Document required modifications for EFC6-related invoicing.
 * Explain how it will integrate with the EFC6 order process.

- Section  7.7: OMO-2033 - Tailoring Hard Totals for EFC6 Order Processing

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2033, Ship to Home Phase 5

- Description
*As the* OLM team,
*I want to* pinpoint what needs to be changed in Hard Totals for EFC6 orders,
*So that* all calculations remain accurate.

*Acceptance:*
 * Identify adjustments for accurate total calculations in EFC6 orders.
 * Describe how it will work with EFC6's order system.

- Section  7.7: OMO-2032 - Checking Expire Shipment Processor with EFC6

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2032, Ship to Home Phase 5

- Description
*As the* OLM team,
*I want to* figure out changes for the Expire Shipment Processor in the EFC6 context,
*So that* it handles order expirations correctly.

*Acceptance:*
 * Write down changes for managing EFC6 order expirations.
 * Clarify its integration with EFC6's fulfillment process.

- Section  7.7: OMO-2031 - Error Reprocessor's Readiness for EFC6 Orders

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2031, Ship to Home Phase 5

- Description
*Description:*
*As the* OLM team,
*I want to* evaluate the Error Reprocessor with EFC6 orders,
*So that* any reprocessing is done without issues.

*Acceptance:*
 * Ensure it reprocesses EFC6 order errors effectively.
 * Pinpoint areas for enhancement.

- Section  7.7: OMO-2030 - Error Consumer Effectiveness in EFC6-Integrated Environment

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2030, Ship to Home Phase 5

- Description
*As the* OLM development team,
*I want to* evaluate the Error Consumer microservice within the context of EFC6 integration,
*Because* robust error handling is necessary for the smooth operation of limited order processing.

*This spike is ready for acceptance when:*
 * *We have assessed* the Error Consumer's capability to manage errors in an EFC6-centric workflow.
 * *We have documented* any modifications needed to ensure its effectiveness.

- Section  7.7: OMO-2029 - Customer Notification Compatibility with EFC6 Order Processing

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2029, Ship to Home Phase 5

- Description
*Description:*
*As the* OLM development team,
*I want to* assess the Customer Notification microservice for compatibility with EFC6 order processing,
*Because* it's essential to maintain effective customer communication during limited order fulfillment.

*This spike is ready for acceptance when:*
 * *We ensure* the Customer Notification system functions correctly with the order flow involving EFC6.
 * *We identify* any adjustments needed for working with the new fulfillment process.

- Section  7.7: OMO-2028 - Alignment of Cancel Shipment Processor with EFC6 Fulfillment

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2028, Ship to Home Phase 5

- Description
*As the* OLM development team,
*I want to* make sure the Cancel Shipment Processor microservice aligns with EFC6's fulfillment processes,
*Because* accurate cancellation processing is critical when using OLM to fulfill limited orders from EFC6.

*This spike is ready for acceptance when:*
 * *We have verified* that the Cancel Shipment Processor can handle cancellations without re-sourcing or significant customer impact.
 * *We have outlined* any necessary updates to integrate seamlessly with EFC6.

- Section  7.7: OMO-2027 - Integration with EFC6

- Introduction:
This is a child story of epic OMO-2008, "Ship to Home Phase 5"

keywords are: efc6, child, story, OMO-2027, Ship to Home Phase 5

- Description
*Description:*

*As the* EFC ACL,

*I want to* integrate with EFC6,

*So that* we can efficiently manage and process these orders within the set capacity.

 

*Acceptance Criteria 1:*

*Given* a shipment is identified for EFC6 fulfillment,

*When* it is sent to the EFC ACL,

*Then* the message should be converted into the XML format expected by EFC6* (see note)

 

*Acceptance Criteria 2:*

*Given* a shipment is sent to the EFC ACL,

*After* it is converted to the expected XML format

*And* a newly added feature flag disables publishing to EFCs**

*Then* no message should be published to the kafka topic for EFC6 (we want prod to be like this for now)

 

*Acceptance Criteria 3:*

*Given* a shipment is sent to the EFC ACL,

*After* it is converted to the expected XML format

*And* a newly added feature flag is enabled, but *does not* list publishing to EFC6**

*Then* no message should be published to the kafka topic for EFC6

 

*Acceptance Criteria 4:*

*Given* a shipment is sent to the EFC ACL,

*After* it is converted to the expected XML format

*And* a newly added feature flag is enabled, and *does* list publishing to EFC6**

*Then* a message should be published to the kafka topic for EFC6 (we want staging like this for now)

*Notes & Assumptions:*
 * Integration should be tested for accuracy
 * https://jiradc.kohls.com:8443/browse/OMO-2122 should be done before working on this, it will have connection details
 * This also cannot be worked on until we have an EFC ACL, with messages being published to it from our core OLM system
 * *Use this doc to find 'green fields' required for EFC6 [https://docs.google.com/spreadsheets/d/1LZ7nvTMLnTweTssJO_BHVqU4pk31ZgmdlwlzPexuSZo/edit#gid=0]
 * **The idea is to have something similar to the skip-repricing feature flag found on order create, where not only can you enable/disable the feature, you can also enable it for specific EFCs (for now EFC6)

- Section  7.7: OMO-1989 - Assess Feasibility of 30-Min Grace Period in OLM

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-1989, Ship to Home Phase 5

- Description
*As an OLM Engineer,*

*I want to* review the Self Service use case,

*So that* I can understand the feasibility of moving the 30-minute grace period from Checkout to OLM.

{*}Acceptance Criteria{*}:
 * *Given* the current implementation of the 30-minute grace period in the Checkout system,
 * *When* reviewing the Self Service use case,
 * *Then* assess the technical feasibility of integrating this grace period into OLM.

{*}Notes & Assumptions{*}:
 * The review should consider the technical implications and challenges.
 * We should work with the Checkout team to maintain customer experience and order processing
 * We should understand at a high level what other downstream integrations are impacted assuming control of this grace period


=====================================================================
Document 0: OMO-2094 - Review and Update the Kafka Consumer Lag for OLM
=====================================================================
- Introduction:
keywords are: story, OMO-2094

- Description
*As* an engineer
*I want to* review and update the Dynatrace monitoring for OLM's kafka consumer lag
*So* that there is monitoring for all of OLM's kafka topics

*Acceptance Criteria*:
* review the current DT monitoring for OLM's kafka topics
** ensure all kafka topics has monitoring for consumer lag
* work with OLM team to obtain all of OLM's kafka topics


=====================================================================
Document 1: OMO-1986 - Spike: PAYPAL order return failure - partial cancellation
=====================================================================
- Introduction:
keywords are: spike, OMO-1986

- Description
*As* an OLM engineer
*I want* to research why partially cancelled PAYPAL orders can't be returned
*Because we* need the amounts that are sent to KPP to be correct to work through return services (invoices loaded to the Return Service DB and numbers are correct)

This spike is ready for acceptance when:
 * We know the solution to return partially cancelled PAYPAL orders. 
 * We know the solution to return partially cancelled PAYPAL + KC orders
 * Create Jira to implement those

Notes:
 * [https://confluence.kohls.com:8443/display/OE/OMO-1961+Research+the+Cause+of+Paypal+Orders+Not+Appearing+in+the+Return+Service]


=====================================================================
Document 2: OMO-1968 - Ship to Home Phase 0
=====================================================================
- Introduction:
Able to validate the performance of adding the post checkout filtering

keywords are: parent, epic, OMO-1968, Ship to Home Phase 0

- Description
As OLM,

I want to be able to validate the performance of adding the post checkout filtering,

So that we could use this new service to filter orders to OLM.

 

Link to the STH Miro Board: https://miro.com/app/board/uXjVNPa9pHc=/

- Section  2.2: OMO-2125 - Investigate EFC6 S2H Shipment Delayed Email Integration 

- Introduction:
This is a child spike of epic OMO-1968, "Ship to Home Phase 0"

keywords are: child, spike, OMO-2125, Ship to Home Phase 0

- Description
*As* the OLM team
*I want to* understand the flow of a Shipment Delay email from an EFC.
*Because* we want to provide Shipment Delayed emails for S2H as a new feature.

*This spike is ready for acceptance when:*
 # We have clarity on how/when EFCs send Shipment Delay notifications
 ## Specifically EFC6
 # Propose a design for OLM to integrate with EFC Shipment Delay Notifications and send a Shipment Delayed email.
 # Create Stories to implement the design

*Notes & Assumptions:*
 * Prior research done on Shipment Delayed emails [https://confluence.kohls.com:8443/display/OE/OMO-1973%3A+Investigating+Trigger+Events+for+Delayed+Email+Notifications+in+nOLM]
 * EFC sided delays were chosen over Carrier Delays due to inconsistencies between carrier notifications. 

- Section  2.2: OMO-2077 - Order Router - Retry flow processing

- Introduction:
This is a child story of epic OMO-1968, "Ship to Home Phase 0"

keywords are: child, story, OMO-2077, Ship to Home Phase 0

- Description
*As* the OLM Router
*I want to* publish to OLM_ERROR topic on processing errors
*So that* order gets processed through existing retry flow.

 

*Acceptance Criteria:*
 * When service consumes invalid json ,json gets stored in error-detail collection marked as false for retry.

*Note:*
 * Invoice service is a good example for reference.

- Section  2.2: OMO-2069 - Order Router Metrics Dashboard for Ship to Home

- Introduction:
This is a child story of epic OMO-1968, "Ship to Home Phase 0"

keywords are: child, story, OMO-2069, Ship to Home Phase 0

- Description
*As the* Order Router system,
*I want to* create a dashboard showing key performance metrics for Ship to Home orders,
*So that* we can monitor and improve system performance.

*Acceptance Criteria:*
*Given* the Order Router is processing Ship to Home orders,
*When* checking the dashboard,
*Then* it should display important metrics like processing times and error rates.

- Section  2.2: OMO-2068 - Implementing Logging for Order Router

- Introduction:
This is a child story of epic OMO-1968, "Ship to Home Phase 0"

keywords are: child, story, OMO-2068, Ship to Home Phase 0

- Description
*As the* Order Router system{*},{*}
*I want to* implement logging with relevant information for troubleshooting,
*So that* errors during the Ship to Home process can be quickly identified and resolved.

*Acceptance Criteria:*
*Given* an error occurs in the Ship to Home process,
*When* the Order Router processes the order,
*Then* logs should capture detailed error information and relevant data for resolution.

*Notes:*
 * Emphasize capturing key data points help in diagnosing and solving issues.

- Section  2.2: OMO-2066 - How to split SF as separate microservices

- Introduction:
This is a child spike of epic OMO-1968, "Ship to Home Phase 0"

keywords are: child, spike, OMO-2066, Ship to Home Phase 0

- Description
*As* an OLM engineer
*I want to* research how to split the Store Fulfillment app into separate apps
*Because we* want to prepare Store Fulfillment to support S2H

This spike is ready for acceptance when:
* document an approach on how to split the Store Fulfillment into separate apps
** API vs kafka consumer
** ideally each app should be responsible for one major task
* discuss with team on the design approach
* create stories to implement the changes
* reference OMO-1825

- Section  2.2: OMO-2065 - Checkout JSON->XML: Understand the possibly dynamic aspects of the conversion code

- Introduction:
This is a child spike of epic OMO-1968, "Ship to Home Phase 0"

keywords are: , child, spike, OMO-2065, Ship to Home Phase 0

- Description
*As* OLM
*I want to* understand the possibly dynamic aspects of Checkout's conversion code
*Because* anything dynamic might impact the conversion approach

*This spike is ready for acceptance when:*
 # We have clarity on any aspect of the conversion code that could be dynamic
 ## Examples:
 ### BossSwitchUtil (Spring Bean)
 ### OrderManager (Spring Bean)
 ### CartUtil (Spring Bean)
 ### OMSXmlConfiguration (part of JSON model, also a Spring Bean)
 #### Pulls values from a config file
 ### Anything else you can find that might be dynamic
 # If there are dynamic aspects of the conversion, conduct analysis on what we should do or how that changes things.
 # We have a page in confluence to document our findings and analysis
 # If needed, we have new spikes & stories written based on the findings

*Notes & Assumptions:*
 * Access to Checkout code (and relevant class) can be found here:
 ** [https://confluence.kohls.com:8443/display/OE/OMS-1980+Analyze+Checkout%27s+Order+Data]
 * You probably need to connect with a Checkout engineer to help answer some of these questions
 ** Chinmaya Kumar Swain (Staff Eng)
 ** Tarun Agarwal (Eng Manager)
 ** Maybe others ... ?

- Section  2.2: OMO-2063 - Kafka Message Handling in Order Router

- Introduction:
This is a child story of epic OMO-1968, "Ship to Home Phase 0"

keywords are: child, story, OMO-2063, Ship to Home Phase 0

- Description
*As* the Order Router system,
*I want to* investigate the message handling from the new Kafka Topic (order-asynch-topic)
*Because* we need to resolve issues with the auto-commit flag causing duplicate messages when off and no consumption when on.

*Acceptance Criteria:*
 # Understand the cause of duplicate messages with auto-commit off.
 # Determine why turning auto-commit on stops message consumption.
 # Develop a strategy for accurate message handling.

*Notes:*
 * Focus on practical and reliable solutions.
 * Document all findings.

- Section  2.2: OMO-2054 - Design Approach for Order Comparison in OMS and OLM

- Introduction:
This is a child spike of epic OMO-1968, "Ship to Home Phase 0"

keywords are: child, spike, OMO-2054, Ship to Home Phase 0

- Description
*As the* OLM Development Team,
*I want to* investigate design options for comparing orders between OMS and OLM,
*Because* accurate order comparison is essential for our order router to preserve functionality when orders are routed to it from Checkout

*This spike is ready for acceptance when:*
 # *We explore* design options for enabling order comparison through OMSe
 # *We propose* a design for capturing and comparing orders from MQ, considering the constraints in accessing the live OMS database.

*Notes & Assumptions:*
 * Direct querying of the OMS database is currently limited, and may need alternative design approaches.
 ** For instance this data may be available via the Checkout team's DB
 * Consider talking also to SRE teams to see what other capabilities we have for fetching orders from OMS system
 * The spike should result in a clear design proposal documented for future implementation.

- Section  2.2: OMO-1988 - Convert Checkout's Order JSON to Existing MQ's Order XML

- Introduction:
This is a child story of epic OMO-1968, "Ship to Home Phase 0"

keywords are: child, story, OMO-1988, Ship to Home Phase 0

- Description
*As an OLM Engineer,*

*I want to* convert order data from JSON to XML in Post Checkout,

*So that* when we convert it to Order XML, it is identical to what Checkout is posting on the Existing MQ.

{*}Acceptance Criteria{*}:
 * *Given* order data in JSON format from Checkout's Kafka topic,
 * *When* this data is converted to XML format,
 * *Then* the converted XML order data should be identical to the Order XML posted by Checkout on the Existing MQ.

{*}Notes & Assumptions{*}:
 * Investigate the possibility of reusing or adapting code from Chinmaya on the Checkout team for this conversion.

- Section  2.2: OMO-1982 - Validate Order Consistency Between New Kafka Topic and Existing MQ

- Introduction:
This is a child story of epic OMO-1968, "Ship to Home Phase 0"

keywords are: child, story, OMO-1982, Ship to Home Phase 0

- Description
*As an* OLM Engineer,
*I want to* implement or perform an order comparison check,
*So that* I can confirm the new Kafka topic is receiving the same orders as the existing MQ.

{*}Acceptance Criteria 1{*}:
 * *Given* orders are published to both the new Kafka topic and existing MQ,
 * *When* these orders are processed,
 * *Then* there should be a match in the order data received in both systems.

{*}Acceptance Criteria 2{*}:
 * *Given* orders are published to both the new Kafka topic and existing MQ,
 * *When* these orders are processed,
 * *Then* orders should be saved to a mongo DB for future auditing purposes.

{*}Notes & Assumptions{*}:
 * Can the OMS passive DB used for comparing the OMS vs OLM (mongo)?
 * Discrepancies, if any, should be logged and investigated.
 * Identify a way to automate the auditing process is in scope.
 * This story is critical for ensuring data integrity and system reliability.
 * Link to the STH Phase 0 Miro: [https://miro.com/app/board/uXjVNPa9pHc=/]

- Section  2.2: OMO-1981 - Develop Microservice for Post-Checkout Order Filtering

- Introduction:
This is a child story of epic OMO-1968, "Ship to Home Phase 0"

keywords are: child, story, OMO-1981, Ship to Home Phase 0

- Description
*As an* OLM Engineer,
*I want to* develop a microservice for post-checkout filtering,
*So that* I can audit and validate orders without impacting existing order flows.

{*}Acceptance Criteria 1{*}:
 * *Given* an order is sent to the new Kafka topic,
 * *When* the a order is pass to the microservice,
 * *Then* it should receive the order without modifying it and the order could be logged.

{*}Notes & Assumptions{*}:
 * The microservice should be capable of handling high throughput.
 * This microservice is for auditing purposes and should not alter the order data.

- Section  2.2: OMO-1980 - Connect to Checkout's Existing Kafka Topic and Analyze Order Data

- Introduction:
This is a child spike of epic OMO-1968, "Ship to Home Phase 0"

keywords are: child, spike, OMO-1980, Ship to Home Phase 0

- Description
*As an OLM Engineer,*

*I want to* connect to the existing Kafka topic from the Checkout team,

*So that* I can integrate with the topic and analyze the structure of the order data in JSON format.

{*}Acceptance Criteria{*}:
 * *Given* the existing Kafka topic from the Checkout team,
 * *When* an order is captured,
 * *Then* analyze the data to understand its structure and content.

{*}Notes & Assumptions{*}:
 * The Kafka topic is capturing 100% of post-checkout orders in JSON format.
 * The analysis will focus on understanding the JSON structure so that we can understand what it would take to move it to an identical Order XML that is currently being posted to Existing MQ from Checkout

- Section  2.2: OMO-1976 - nOLM's Role in Setting Estimated Shipment Dates

- Introduction:
This is a child spike of epic OMO-1968, "Ship to Home Phase 0"

keywords are: child, spike, OMO-1976, Ship to Home Phase 0

- Description
*As* the nOLM system,

*I want to* understand how the current system determines estimated shipment dates when an order is created,

*Because* this understanding is important to sticking to accurate shipping threshold mapping which comes in from OMSe for delivery.

*This spike is ready for acceptance when:*
 # We have clarity on nOLM's process for assigning shipment dates during order creation by looking at Order XML in order-create
 # We document the procedure and any insights as we lead up to our Phase 4 Scenario

*Notes & Assumptions:*
 * The investigation should consider existing shipping threshold mappings in OMSe
 * Phase 4 Scenario can be used for a context to get insights into this process
 * Relevant Confluence page for this investigation: https://confluence.kohls.com:8443/display/OE/OMO-1976+nOLM%27s+Role+in+Setting+Estimated+Shipment+Dates

- Section  2.2: OMO-1975 - Optimal Approach for Demand Updates Post-Cancellation

- Introduction:
This is a child spike of epic OMO-1968, "Ship to Home Phase 0"

keywords are: child, spike, OMO-1975, Ship to Home Phase 0

- Description
*As* the nOLM system,

*I want to* determine whether demand updates following cancellations should be routed through OLM or directly from EFC,

*Because* this will help streamline cancellation handling and inventory accuracy.

*This spike is ready for acceptance when:*
 # We identify the how demand updates should be appropriately handled after cancellations
 # (Optional) We look for opportunities for an efficient pathway f this is feasible
 # Document findings on Confluence.

*Notes & Assumptions:*
 * The decision impacts the accuracy of inventory management
 * We should look at what OMSe is doing today
 * This will involve working with Customer Fulfillment team to understand what is done upon cancellation
 * Relevant Confluence page for this investigation: [insert confluence link].

- Section  2.2: OMO-1973 - Investigating Trigger Events for Shipment Delays Email Notifications in nOLM

- Introduction:
This is a child spike of epic OMO-1968, "Ship to Home Phase 0"

keywords are: child, spike, OMO-1973, Ship to Home Phase 0

- Description
*As* the nOLM system,

*I want to* investigate & identify the specific event/condition(s) that triggers shipment delayed email notifications,

*Because* understanding this trigger is important to addressing how to define this new email type, and modernizing customer communication.

*This spike is ready for acceptance when:*
 # Does this email exist in OMSe today?
 # We determine the event or condition(s) that leads to the sending of shipment delayed emails.
 # We document our findings and potential underlying cause that can help us define shipment delayed emails
 # Followup story is create to implement this new email (OOM team)

*Notes & Assumptions:*
 *  The nOLM process with systems like Customer Fulfillment/Carrier services
 * Relevant Confluence page for findings

- Section  2.2: OMO-1971 - Optimizing nOLM Email Notifications for 'Shipped' Status

- Introduction:
This is a child spike of epic OMO-1968, "Ship to Home Phase 0"

keywords are: , child, spike, OMO-1971, Ship to Home Phase 0

- Description
*As* the nOLM system,

*I want to* evaluate the timing mechanism for 'Shipped' status email notifications,

*Because* timely communication is important for accurate customer updates.
h3. This spike is ready for acceptance when:
 # We analyze the current lag between marking a shipment as 'Shipped' and sending the corresponding email.
 # We explore the possibility of syncing with a new carrier feed for real-time shipment status.

h3. Notes & Assumptions:
 * The scope of this spike is for
 ** Ship to home only (fulfill by EFCs) with an expectation to expand into SFSs in the future.
 ** SLSQ Single Shipnode with PayPal orders
 ** New spikes will be created for MLMQ scenarios (depending on the complexity) 
 * Understanding the existing gap in email notification timing is key
 * Technical feasibility and integration with a new carrier feed will be investigated.
 * Relevant insights and findings to be documented on Confluence: [insert confluence link].

- Section  2.2: OMO-850 - Learn about Current Customer Comm. for Pack Slip Email (n/a for BOPUS today)

- Introduction:
This is a child spike of epic OMO-1968, "Ship to Home Phase 0"

keywords are: , pickup, child, spike, OMO-850, Ship to Home Phase 0

- Description
*WE SHOULD* understand when, why, and what +Customer Communication+ is done today by the legacy solution, and what service it interacts with, during fulfillment, pickup, cancels etc. for BOPUS shipments

*BEFORE* we implement +Customer Communication+ for BOPUS

*BECAUSE* we want to provide similar functionality for BOPUS orders processed by new OLM in the future, to insure +Customer Communication+ is properly triggered during appropriate times, and need a deeper understanding of the current functionality before determining how to approach it for new OLM. This will help us sort out the stories that are needed and reduce the risk of missing something important.

*We will know we are done when ({color:#ff8b00}highlighted in Orange is in scope{color}):*
 * When the current +Customer Communication+ (email and text if it's available and requested by the customer) by the legacy solution throughout order processing for BOPUS shipments is well understood
 ** {color:#172b4d}Ready for Pickup (and text){color}
 ** {color:#172b4d}Ready for Pickup Initial Reminder{color}
 ** {color:#172b4d}Ready for Pickup Final Reminder{color}
 ** {color:#172b4d}Ready for Pickup - APP (Alternate Pickup person emails) {color}
 *** {color:#172b4d}Ready for pickup - APP{color}
 *** {color:#172b4d}Ready for Pickup Initial Reminder - APP{color}
 *** {color:#172b4d}Ready for Pickup Final Reminder - APP{color}
 ** -----------------------------------------------
 ** {color:#ff8b00}Pack Slip email (generated after ready for pickup when you go online to lookup your order and click the button of print pack slip) {color}
 ** -----------------------------------------------
 ** Store Order Complete (aka Customer Picked Up)
 ** Store Order Complete (aka Customer Picked Up) APP (Alternate Pickup person emails)
 ** -----------------------------------------------
 ** Order Cancellation KI
 ** -----------------------------------------------
 ** Order Modification KI Responsive Email (Order Modified email, part of the order was cancelled - not applicable to SLSQ)
 ** -----------------------------------------------
 ** Store Order Delayed Responsive Email (BOPUS order delayed email)
 ** -----------------------------------------------
 ** Ready for Pickup - APP Changed - should be covered within Ready for Pickup (Changes made to the alternate pickup person email)
 ** Ready for Pickup - APP Removed - should be covered within Ready for Pickup (Alternative deleted email - only goes to the customer)
 ** Ready for Pickup - No longer APP - should be covered within Ready for Pickup (Alternative removed - only goes to the alternative)

 * When we clearly understood what services the current solution interacts with to initiate +Customer Communication+ 
 * Document the payload/data that is included when we trigger that email and mapping the source for each attribute
 * Exception handling is well understood
 * All the learnings are documented in a Confluence Page

*Notes/Assumptions:*
 * Wallet and Account own the page that triggers the email, start with them first
 * +Customer Communication+ is required for active mode of our first thin slice
 * We need to develop this in the future but it does not apply to SLSQ or may be owned by the returns team (mapping required)
 ** Order Modification KI Responsive Email
 ** Store Order Customer Cancelled (aka Auto Refund)
 ** Store Order Customer Cancelled (aka Auto Refund) APP

*Reference:*
 * [https://confluence.kohls.com:8443/display/OE/1.1+OMO-28+-+Analysis+and+Design]
 * Transactional Email UAT Spreadsheet (OCF Tab): [https://docs.google.com/spreadsheets/d/1YBuIG2XTguKkmz-gUknz_FM06LGvkT_f-IVwjib04b0/edit#gid=2073458429]
 * Link to an assortment of production email examples: [https://miro.com/app/board/uXjVOU0EyYI=/?moveToWidget=3458764538551545135&cot=14]
 * Link to Customer Comm. BT Transactional Emails list: [https://docs.google.com/spreadsheets/d/159Zo99VUGPTzAdjGS1imvV6h_my2g82Ulff87mBoGzQ/edit#gid=0]



=====================================================================
Document 3: OMO-1969 - Ship to Home Phase 1
=====================================================================
- Introduction:
Able to validate and preserve the existing functionality while using the post checkout filtering

keywords are: parent, epic, OMO-1969, Ship to Home Phase 1

- Description
As OLM,

I want to be able to validate and preserve the existing functionality while using the post checkout filtering micro service,

So that we could use the Post Checkout service to send orders from the new Kafka topic to existing MQ and processed by OMSe.

 

Link to the STH Miro Board: https://miro.com/app/board/uXjVNPa9pHc=/

- Section  3.3: OMO-2056 -  Playbook Creation for Phase 1 Launch

- Introduction:
This is a child story of epic OMO-1969, "Ship to Home Phase 1"

keywords are: child, story, OMO-2056, Ship to Home Phase 1

- Description
*As an* OLM team member,
*I want to* collaborate with SREs to create a playbook,
*So that* we have a clear action plan for the Phase 1 launch.

*Acceptance Criteria 1:*
 * *Given* the upcoming Phase 1 launch,
 * *When* we're putting together the playbook,
 * *Then* it should outline essential steps, responsibilities, and how to handle issues.

*Acceptance Criteria 2:*
 * *Given* the playbook is ready,
 * *When* reviewed by our team and the SREs,
 * *Then* everyone should agree it's complete and useful for Phase 1.

*Notes:*
 * We need this playbook to make sure Phase 1 goes smoothly.
 * It's important to keep the SREs in the loop to make sure we include everything necessary.

- Section  3.3: OMO-1993 - Back-Out Plan for Post-Checkout Failures

- Introduction:
This is a child story of epic OMO-1969, "Ship to Home Phase 1"

keywords are: child, story, OMO-1993, Ship to Home Phase 1

- Description
*As a* Software Engineer

*I want* a simple back-out plan

*So that* we're prepared if the post-checkout service fails.

*Acceptance Criteria 1*
 * *Given* a rollback scenario,
 * *When* executed,
 * *Then* all steps should be documented for review.

*Notes:*
 * We should ensure that rollback scenario allows for transitioning back to the original Existing MQ
 * This may take some coordination with the Checkout team to identify what would need to be done on their side to roll back to the original posting of orders on Existing MQ

 

- Section  3.3: OMO-1992 - Post Checkout Dashboard with Key Metrics

- Introduction:
This is a child story of epic OMO-1969, "Ship to Home Phase 1"

keywords are: child, story, OMO-1992, Ship to Home Phase 1

- Description
*As an* OLM Support Team,

*I want to* create a dashboard for Post Checkout that includes Kafka lag and essential metrics,

*So that* we can effectively monitor its performance.

*Acceptance Criteria 1:*
 * *Given* Post Checkout is active,
 * *When* checking the dashboard,
 * *Then* I should see essential service metrics

*Acceptance Criteria 2:*
 * *Given* Post Checkout is active,
 * *When* checking the health of kafka topic,
 * *Then* I should see kafka lag metrics

*Notes:*
 * Align the dashboard's functionality with the monitoring features of other microservices.

- Section  3.3: OMO-1991 - Kafka to MQ Order Handling

- Introduction:
This is a child story of epic OMO-1969, "Ship to Home Phase 1"

keywords are: child, story, OMO-1991, Ship to Home Phase 1

- Description
*As a* Post Checkout service,

*I want to* send orders from Kafka to MQ and post Order XML to Existing MQ,

*So that* we maintain our current process while adding this new step.

*Acceptance Criteria:*
 * *Given* an order in Kafka,
 * *When* Post Checkout processes it,
 * *Then* the order goes to MQ and its XML to the Existing MQ.

*Notes:*
 * Keep it compatible with our existing system.
 * Testing should check that orders are routed right and existing features work as usual.



=====================================================================
Document 4: OMO-1970 - Ship to Home Phase 2
=====================================================================
- Introduction:
Develop the OLM sourcing Facade to audit and validate the orders against the OMS orders

keywords are: parent, epic, OMO-1970, Ship to Home Phase 2

- Description
As OLM,

I want to introducing the OLM sourcing Facade,

so that we could begin audit and validate the orders against the OMS orders (compare the request to the sourcing; New Kafka vs Existing MQ).

 

Link to the STH Miro Board: [https://miro.com/app/board/uXjVNPa9pHc=/]

- Section  4.4: OMO-2071 - OLM Sourcing Facade Metrics Dashboard for Ship to Home

- Introduction:
This is a child story of epic OMO-1970, "Ship to Home Phase 2"

keywords are: child, story, OMO-2071, Ship to Home Phase 2

- Description
*As the* OLM Sourcing Facade system,
*I want to* create a dashboard showing key performance metrics for sourcing requests and responses,
*So that* we can monitor and improve system performance.

*Acceptance Criteria:*
*Given* the OLM Sourcing Facade is processing sourcing requests and responses,
*When* checking the dashboard,
*Then* it should display important metrics like processing times and error rates.

- Section  4.4: OMO-2070 - Implementing Logging for OLM Sourcing Facade

- Introduction:
This is a child story of epic OMO-1970, "Ship to Home Phase 2"

keywords are: child, story, OMO-2070, Ship to Home Phase 2

- Description
*As the* OLM Sourcing Facade system{*},{*}
*I want to* implement logging with relevant information for troubleshooting,
*So that* errors during the Ship to Home process can be quickly identified and resolved.

*Acceptance Criteria:*
*Given* an error occurs in the Ship to Home process,
*When* the OLM Sourcing Facade processes the sourcing requests and responses,
*Then* logs should capture detailed error information and relevant data for resolution.

*Notes:*
 * Emphasize capturing key data points help in diagnosing and solving issues.

- Section  4.4: OMO-1997 - OLM Sourcing Facade Dashboard with Key Metrics

- Introduction:
This is a child story of epic OMO-1970, "Ship to Home Phase 2"

keywords are: child, story, OMO-1997, Ship to Home Phase 2

- Description
*As an* OLM Support Team,

*I want to* create a dashboard for OLM Sourcing Facade that includes Kafka lag and essential metrics,

*So that* we can effectively monitor its performance.

*Acceptance Criteria 1:*
 * *Given* OLM Sourcing Facade is active,
 * *When* checking the dashboard,
 * *Then* I should see essential service metrics

*Acceptance Criteria 2:*
 * *Given* OLM Sourcing Facade is active,
 * *When* checking the health of kafka topic,
 * *Then* I should see kafka lag metrics

*Notes:*
 * Align the dashboard's functionality with the monitoring features of other microservices.

- Section  4.4: OMO-1996 - Order Comparison for Sourcing Facade and Request MQ

- Introduction:
This is a child story of epic OMO-1970, "Ship to Home Phase 2"

keywords are: child, story, OMO-1996, Ship to Home Phase 2

- Description
*As the* OLM Sourcing Facade,

*I want to* compare orders sent to me (via new Kafka topic) with those in the request MQ sent by OMS,

*So that* we can make sure it is consistent and accurate

*Acceptance Criteria:*
 * *Given* orders are sent to the Sourcing Facade via Kafka Topic and orders sent to request MQ from OMS
 * *When* comparing these orders,
 * *Then* identify any discrepancies and confirm they match up correctly.

*Notes:*
 * Emphasis on accurately matching orders between the new Kafka topic and request MQ.
 * Develop a method to easily spot and resolve differences.

- Section  4.4: OMO-1995 - OLM Sourcing Facade Collaboration with Promising and Sourcing Team

- Introduction:
This is a child story of epic OMO-1970, "Ship to Home Phase 2"

keywords are: child, story, OMO-1995, Ship to Home Phase 2

- Description
*As the* OLM Development Team,

*I want to* work closely with the promising and sourcing team,

*So that* our OLM Sourcing Facade fits well with their system and avoids overlapping work.

*Acceptance Criteria:*
 * *Given* we're building the OLM Sourcing Facade,
 * *When* we tie it into the sourcing process via their ACL,
 * *Then* it should source orders just once and stop OMS from doing it again if it's already been sourced.



=====================================================================
Document 5: OMO-1972 - Ship to Home Phase 3
=====================================================================
- Introduction:
Able to Use the Sourcing Facade in Prod

keywords are: parent, epic, OMO-1972, Ship to Home Phase 3

- Description
As OLM,

I want to be able to use the OLM sourcing Facade,

so that we could begin sourcing orders that was filtered to OMSe from the Post Checkout Service.

 

Link to the Ship to Home Miro Board: https://miro.com/app/board/uXjVNPa9pHc=/

- Section  5.5: OMO-2005 - Adding MongoDB for Sourcing Data in Facade

- Introduction:
This is a child story of epic OMO-1972, "Ship to Home Phase 3"

keywords are: child, story, OMO-2005, Ship to Home Phase 3

- Description
*As the* OLM Sourcing Facade,

*I want to* use MongoDB,

*So that* we persist all our sourcing requests and responses

*Acceptance Criteria:*
 * *Given* we're working with sourcing requests and responses,
 * *When* we receive this data from Sourcing ACL,
 * *Then* it should be reliably stored in MongoDB.

*Notes:*
 * MongoDB will help us prevent resourcing by matching it with sourcing requests which already have been made

- Section  5.5: OMO-2004 - Kafka Response Topic and Lag on Dashboard

- Introduction:
This is a child story of epic OMO-1972, "Ship to Home Phase 3"

keywords are: child, story, OMO-2004, Ship to Home Phase 3

- Description
*As the* OLM Support Team,

*I want to* add the new Kafka response topic and its lag metrics to our Monitoring Dashboard,

*So that* we have insights into its performance.

*Acceptance Criteria:*
 * *Given* the Kafka response topic is active,
 * *When* monitoring the system,
 * *Then* we should see both the topic activity and its lag time on the Dashboard.

- Section  5.5: OMO-2003 - Load Test for Sourcing Facade

- Introduction:
This is a child story of epic OMO-1972, "Ship to Home Phase 3"

keywords are: child, story, OMO-2003, Ship to Home Phase 3

- Description
*As the* OLM Team,

*I want to* run a load test on the Sourcing Facade,

*So that* we know it can handle the busy times.

*Acceptance Criteria:*
 * *Given* the Facade is up,
 * *When* testing how much it can take,
 * *Then* make sure it deals with loads as expected given its STPS (specified transactions per second).

*Notes:*
 * Simulate "real" use to see how it holds up.
 * Identify any weak spots
 * Check it stays steady when it’s really busy.

- Section  5.5: OMO-2002 - OMS Shift from MQ to Kafka

- Introduction:
This is a child story of epic OMO-1972, "Ship to Home Phase 3"

keywords are: child, story, OMO-2002, Ship to Home Phase 3

- Description
*As the* OMS Team working with us,

*I want to* switch OMS from listening to the existing MQ to the new Kafka topics for requests and responses,

*So that* OMS updates to our new communication channels.

*Acceptance Criteria:*
 * *Given* OMS currently uses the existing MQ,
 * *When* changing to listen to Kafka topics,
 * *Then* OMS should stop using MQ and start using Kafka for all incoming and outgoing messages.

*Notes:*
 * The change involves turning off OMS's connection to MQ and activating it in Kafka.

- Section  5.5: OMO-2001 - Facade-to-OMS Response Routing via Kafka

- Introduction:
This is a child story of epic OMO-1972, "Ship to Home Phase 3"

keywords are: child, story, OMO-2001, Ship to Home Phase 3

- Description
*As the* OLM Sourcing Facade,

*I want to* set up a new Kafka response topic,

*So that* responses can be efficiently directed through Kafka to OMS.

*Acceptance Criteria:*
 * *Given* we have responses ready in the Facade,
 * *When* they need to reach OMS,
 * *Then* they should go through the new Kafka topic.

- Section  5.5: OMO-2000 - OLM Facade Handling MQ Responses and Kafka Topic

- Introduction:
This is a child story of epic OMO-1972, "Ship to Home Phase 3"

keywords are: child, story, OMO-2000, Ship to Home Phase 3

- Description
*As the* OLM Sourcing Facade,

*I want to* listen to responses from MQ and relay them to the New Kafka response topic,

*So that* information flows correctly through our system.

*Acceptance Criteria:*
 * *Given* the OLM Facade is linked to MQ,
 * *When* it receives a response from MQ,
 * *Then* it should forward this response to the New Kafka response topic.

*Notes:*
 * This is about ensuring that the Facade accurately captures and relays MQ responses to Kafka.

- Section  5.5: OMO-1999 - OLM Sourcing Facade integration with MQ Topics

- Introduction:
This is a child story of epic OMO-1972, "Ship to Home Phase 3"

keywords are: child, story, OMO-1999, Ship to Home Phase 3

- Description
*As the* OLM Sourcing Facade,

*I want to* connect with both the Request and Response MQ,

*So that* our requests and responses are managed efficiently.

*Acceptance Criteria:*
 * *Given* the OLM Sourcing Facade is active,
 * *When* it interacts with MQ,
 * *Then* ensure seamless sending and receiving of data.

*Notes:*
 * These are the existing Request and Response MQ that OMS was using to talk to Sourcing Blackbox.
 * Ensure reliable communication between the Facade and MQ.
 * Thoroughly test the connection for accurate message handling.

- Section  5.5: OLM-1384 - Referencing ShipNode in existing OMS for Sourcing

- Introduction:
This is a child story of epic OMO-1972, "Ship to Home Phase 3"

keywords are: child, story, OLM-1384, Ship to Home Phase 3

- Description
*As* Sterling OMSe system,

*I want to* shipNode value for identify where to source S2H orders,

*So that* we do not make duplicate call to Sourcing engine from Sterling OMSe

*Acceptance Criteria:*
 * *Given* we're working S2H orders,
 * *When* we receive shipNode from filtering ACL in OMSe,
 * *Then* OMSe should not make another sourcing call.

*Notes:*
 * Sourcing response that is required to actually source order to a node can be pulled from sourcing facade or mongo db.
 * If this option does not work then we need to mock sourcing call from OMSe at sourcing faccde to return the response from original sourcing call.



=====================================================================
Document 6: OMO-1974 - Ship to Home Phase 4
=====================================================================
- Introduction:
Able to Throttling Orders at Post Checkout to Create Shipments in OLM

keywords are: parent, epic, OMO-1974, Ship to Home Phase 4

- Description
As OLM,

I want to be able to throttling limited orders at the Post Checkout service,

so that we could begin 
 # Creating shipments in OLM
 # Monitoring performance by processing 10 orders per day

 

Link to the Ship to Home Miro Board: https://miro.com/app/board/uXjVNPa9pHc=/

- Section  6.6: OMO-2079 - Discuss Modernization Efforts of the PackSlip Email Trigger Endpoint

- Introduction:
This is a child spike of epic OMO-1974, "Ship to Home Phase 4"

keywords are: child, spike, OMO-2079, Ship to Home Phase 4

- Description
*As* OLM
*I want to* trigger email communication of the packing slip to the customer using a modern REST endpoint
*Because* we would like to continue modernizing as we add new features

This spike is ready for acceptance when:
 * We have talked with the O&OM (CCS) team about modernizing the Pack Slip trigger endpoint
 ** this will include which fields to keep and remove based on [OMO-850 spreadsheet|https://docs.google.com/spreadsheets/d/17IPdP1l_z9pjjekjf7yf7XRrbyv6MsUefBdz4OClIEA/edit#gid=0]

- Section  6.6: OMO-2078 - Understand Packslip View and Email Endpoints

- Introduction:
This is a child spike of epic OMO-1974, "Ship to Home Phase 4"

keywords are: child, spike, OMO-2078, Ship to Home Phase 4

- Description
*As* a Kohl's customer
*I want to* be able to view my packing slip and email it to myself using nOLM
*Because* it is an important document within the STH flow

This spike is ready for acceptance when:
 * We understand how e-comm communicates to OMS
 ** Endpoints it uses to get pack slip information and triggering the email
 ** Request body and format (SOAP?) - also if there are plans to modernize
 ** Response that is returned by OMS
 * Document these findings in Confluence

- Section  6.6: OMO-2055 - Ensuring Effective Throttling in the Order Router

- Introduction:
This is a child story of epic OMO-1974, "Ship to Home Phase 4"

keywords are: child, story, OMO-2055, Ship to Home Phase 4

- Description
*As the* Order Router,
*I want to* monitor and validate the throttling process,
*So that* we can confirm it's working as intended and understand its impact on order processing.

*Acceptance Criteria 1:*
 * *Given* the Order Router is implementing throttling,
 * *When* orders are being processed,
 * *Then* the system should track and report the number of processed and queued orders each hour to confirm effective throttling.

*Acceptance Criteria 2:*
 * *Given* the monitoring feature is operational,
 * *When* evaluating the system’s performance,
 * *Then* there should be reliable data to show that throttling is correctly managing the order flow.

 

*Notes:*
 * We need this to make sure our system is throttling orders right and not causing problems.

- Section  6.6: OMO-2024 - OLM Sourcing Response Verification in Mongo Database

- Introduction:
This is a child story of epic OMO-1974, "Ship to Home Phase 4"

keywords are: child, story, OMO-2024, Ship to Home Phase 4

- Description
*As* the OLM system,

*I want* to check in the Mongo database for existing sourcing responses,

*So that* I can verify if the response to a sourcing request already exists.

{*}Acceptance Criteria 1{*}:
 * *Given* a sourcing request is made in OLM,
 * *When* checking the Mongo database,
 * *Then* the system should look for any existing responses to that request.

{*}Notes{*}:
 * This check helps avoid duplicate sourcing.
 * Make sure the search in Mongo is accurate.

- Section  6.6: OMO-2023 - E2E Testing for Post Checkout and OLM Workflow

- Introduction:
This is a child story of epic OMO-1974, "Ship to Home Phase 4"

keywords are: child, story, OMO-2023, Ship to Home Phase 4

- Description
*As* the OLM-S2H Testing team,

*I want* a basic end-to-end test for the Post Checkout to OLM process,

*So that* we can make sure orders move correctly from Post Checkout to OLM.

{*}Acceptance Criteria 1{*}:
 * *Given* orders are processed through Post Checkout,
 * *When* they are passed to OLM,
 * *Then* the test should verify that this transition happens smoothly.

{*}Notes{*}:
 * Focus the test on the standard, expected workflow (the "happy path").
 * Ensure the test is simple and covers all essential steps.
 * Regular testing to maintain consistent and reliable order processing.

- Section  6.6: OMO-2021 - Detailed Validation for Order and Shipment Creation in OLM

- Introduction:
This is a child story of epic OMO-1974, "Ship to Home Phase 4"

keywords are: child, story, OMO-2021, Ship to Home Phase 4

- Description
*As* a member of the OLM team,

*I want* to validate the creation of orders and shipments in OLM for orders coming from the Create Order Topic,

*So that* we can ensure that each order and its shipments are created correctly, particularly with the new, more detailed attributes for S2H and fulfillment.

{*}Acceptance Criteria 1{*}:
 * *Given* an order passes through the Create Order Topic and enters OLM,
 * *When* it triggers order and shipment creation,
 * *Then* the system should accurately create the order and all associated shipments.

{*}Acceptance Criteria 2{*}:
 * *Given* an order is being processed in OLM,
 * *When* it's a filtered order from the Create Order Topic,
 * *Then* validate that the order and shipment details are complete and match the expected set of shipments, including the new attributes.

{*}Notes & Assumptions{*}:
 * Emphasize correctness and detail in processing orders and their associated shipments.
 * The new attributes for S2H and fulfillment nodes should be correctly identified and incorporated into the order and shipment details.

- Section  6.6: OMO-2020 - Post Checkout Order Filtering to Create Order Topic

- Introduction:
This is a child story of epic OMO-1974, "Ship to Home Phase 4"

keywords are: child, story, OMO-2020, Ship to Home Phase 4

- Description
*As* the Post Checkout service,

*I want* to filter orders to the Create Order Topic,

*So that* only relevant orders are sent to the existing topic used for BOPUS.

{*}Acceptance Criteria 1{*}:
 * *Given* the filtering mechanism is in place,
 * *When* an order is processed,
 * *Then* it should be checked against BOPUS criteria before being directed to the Create Order Topic.

{*}Notes & Assumptions{*}:
 * Define clear criteria for BOPUS-eligible orders.
 * The filtering process should make sure to prevent any non-BOPUS orders from being sent to the Create Order Topic

- Section  6.6: OMO-2018 - Update Post Checkout with Order Throttling Feature

- Introduction:
This is a child story of epic OMO-1974, "Ship to Home Phase 4"

keywords are: child, story, OMO-2018, Ship to Home Phase 4

- Description
*As* the Post Checkout service,

*I want* to add an order throttling feature,

*So that* the service can limit the rate of sourcing calls to 10 orders per hour.

{*}Acceptance Criteria 1{*}:
 * *Given* orders are being processed by Post Checkout,
 * *When* they are queued for sourcing,
 * *Then* only 10 orders should be sent to the Sourcing Facade per hour.

{*}Acceptance Criteria 2{*}:
 * *Given* the order throttling feature is active,
 * *When* more than 10 orders are processed in an hour,
 * *Then* the excess orders should be queued for the next available time slot.

{*}Notes & Assumptions{*}:
 * The throttling mechanism should be configurable to adapt to future changes in order processing rates.
 * Ensure that the queued orders are processed in a timely manner without data loss.

- Section  6.6: OMO-2017 - Integration of Post Checkout with Sourcing Facade

- Introduction:
This is a child story of epic OMO-1974, "Ship to Home Phase 4"

keywords are: child, story, OMO-2017, Ship to Home Phase 4

- Description
*As* the Post Checkout service,

*I want* to integrate with the Sourcing Facade service,

*So that* requests and responses can be exchanged between the request and response topics.

{*}Acceptance Criteria 1{*}:
 * *Given* an order is processed by Post Checkout,
 * *When* it interacts with the Sourcing Facade,
 * *Then* the request should be sent accurately to the Sourcing Facade.

{*}Acceptance Criteria 2{*}:
 * *Given* the integration is in place,
 * *When* the Sourcing Facade sends back a response,
 * *Then* Post Checkout should receive and handle it correctly.

{*}Notes & Assumptions{*}:
 * Ensure that the integration facilitates accurate communication between the services.

- Section  6.6: OMO-1467 - Write Message to legacy Cancel MQ for Stores when S2H Ships

- Introduction:
This is a child story of epic OMO-1974, "Ship to Home Phase 4"

keywords are: , child, story, OMO-1467, Ship to Home Phase 4

- Description
*As* new OLM

*I want* to inform Stores when a S2H shipment has shipped

*So that* that stores remain in sync, consistent with existing legacy processing

+*Acceptance Criteria 1:*+
 * *Given* an order exists in new OLM with a S2H shipment 
 * *When* the S2H shipment moves to Shipped status
 * *Then* a message is published to the existing IBM MQ (same one used for Cancel messages)  for Stores to consume


+*Notes & Assumptions*+
 * Based off of cancel spike: OMO-1220 and related stories
 * This only applies when in Active mode, no Shipped messages should be published to the queue in Shadow mode
 * MQ is not consumed by stores directly, but a process owned by Fulfillment + Pickup team consumes messages and forwards them on to the appropriate store(s)
 * MQ should eventually replaced by Kafka or another solution, but while orders are still being processed by the legacy solution the Fulfillment + Pickup team does not want to change their processing to receive messages 2 different ways in the interim.
* Todd Miesfeld from Fulfillment + Pickup team told us about this Shipped status message for S2H while we were validating our first BOPUS thin slice;  this story was created to help us remember.

- Section  6.6: OMO-1372 - OLM Gateway OTS Order Detail Endpoint - Decrypt ShipTo encrypted values from nOLM

- Introduction:
This is a child story of epic OMO-1974, "Ship to Home Phase 4"

keywords are: child, story, OMO-1372, Ship to Home Phase 4

- Description
*As* OLM Gateway
*I want* nOLM OTS order-details response data that is specific to ship to home to be in readable format and add Protegrity 9 
*So that* it is consistent with the legacy data already in this table 

*Acceptance Criteria 1:*
 * Decrypt all encrypted values and provide those on nOLM OTS order-details response.

personInfoShipTo.firstName
personInfoShipTo.lastName

+*Notes & Assumptions*+
* These were removed from OMO-1319, which decrypted values applicable to BOPUS orders;  creating this story now to help us remember to come back to it for the first S2H thin slice we take up 
 * [https://miro.com/app/board/uXjVOU0EyYI=/?moveToWidget=3458764541855300275&cot=14] - Order Visibility design
 *  https://confluence.kohls.com:8443/display/OE/Protegrity+v9+Installation



=====================================================================
Document 7: OMO-2008 - Ship to Home Phase 5
=====================================================================
- Introduction:
Able to Fulfill STH SLSQ orders at EFC6

keywords are: parent, epic, OMO-2008, Ship to Home Phase 5

- Description
As OLM,

I want to be able to process and fulfill orders at EFC6 by using the Post Checkout service and the sourcing facade,

so that we could begin 
 # Using OLM to fulfill limited orders (10?) from EFC6 (re-visit all the nOLM microservices)
 # Able to use OLM to cancel (no re-sourcing and customer impact is limited)

 

Link to the Ship to Home Miro Board: [https://miro.com/app/board/uXjVNPa9pHc=/]

- Section  7.7: OMO-2124 - Investigate Shipment Confirmation API

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: , child, spike, OMO-2124, Ship to Home Phase 5

- Description
*As* the boundary between the Order domain and the domain of Customer Fulfillment
*I want to* Investigate the Shipment Confirmation API
*Because* we need to understand this integration before shipments can be invoiced

*This spike is ready for acceptance when:*
 # We build a spreadsheet documenting the request and response of the Shipment Confirmation API: expected values, required fields, error codes, etc{*}{{*}}
 # We understand and document its functionality at a high level for both confirmations and cancellation
 # We understand the channel in which this call happens today (We have been told that this is done via API for some EFCs and MQ for others)
 ## On a high level, get an understanding on if Customer Fulfillment has the bandwidth to switch from MQ to API for the other EFCs
 # If one exists, find the WSDL for this API
 # Create the following follow up stories:
 ## Store Fulfillment to support the shipment confirmation functionality (this can be a few spikes/stories, we can keep this iterative like we did with BOPUS APIs-basic happy path first, then error codes, then understanding cancel flows)
 ## EFC ACL to support routing Shipment Confirmation calls to either OMS or OLM (this can be a couple stories too if it seems too big to have all at once)

*Notes & Assumptions:*
 * [https://docs.google.com/spreadsheets/d/1LZ7nvTMLnTweTssJO_BHVqU4pk31ZgmdlwlzPexuSZo/edit#gid=0] Link to boundary request mapping
 * Master Miro Reference: [https://miro.com/app/board/uXjVPjzxRLY=/?moveToWidget=3458764575833473448&cot=14] 

- Section  7.7: OMO-2123 - Create empty EFC ACL application

- Introduction:
This is a child story of epic OMO-2008, "Ship to Home Phase 5"

keywords are: , child, story, OMO-2123, Ship to Home Phase 5

- Description
*As* the EFC ACL
*I want to* Create a new empty EFC ACL application
*So that* we can begin the interface between our internal Order domain and Customer Fulfillment's domain

*Acceptance Criteria 1:*
 * *Create* an empty application, using one of our existing applications as a reference
 ** Has all of the normal features: KADO, Java 21, deploys to review/staging/prod, runs locally, connects to our config server
 * EFC ACL is more of a description of the application, not the official, agreed upon, name. When naming the application, include ACL in the title (like order-acl and store-commerce-acl have), to make it clear this is a boundary application that we have hopes of eventually retiring once all orders are onto nOLM
 ** customer-fulfillment-acl
 ** efc-acl
 ** ship-to-home-acl (If it isn't clear, I am not good at naming things)

*Notes & Assumptions:*
 * [https://docs.google.com/spreadsheets/d/1LZ7nvTMLnTweTssJO_BHVqU4pk31ZgmdlwlzPexuSZo/edit#gid=0] Link to boundary request mapping
 * Master Miro Reference: [https://miro.com/app/board/uXjVPjzxRLY=/?moveToWidget=3458764575833473448&cot=14] 

- Section  7.7: OMO-2122 - Get EFC6 Kafka Connection Details for all Appropriate Environments

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2122, Ship to Home Phase 5

- Description
*As* the boundary between OLM and Customer Fulfillment
*I want to* Get EFC6 Connection Details for all Appropriate Environments
*Because* we need to publish to this topic

*This spike is ready for acceptance when:*
 # We work with the Customer Fulfillment Team to get all required connection details to connect to the Kafka topic used by EFC6 (dev/staging/prod)
 # We document this information somewhere for future stories

*Notes & Assumptions:*
 * [https://docs.google.com/spreadsheets/d/1LZ7nvTMLnTweTssJO_BHVqU4pk31ZgmdlwlzPexuSZo/edit#gid=0] Link to boundary request mapping
 * Master Miro Reference: [https://miro.com/app/board/uXjVPjzxRLY=/?moveToWidget=3458764575833473448&cot=14] 
 * Kafka Topic name is: *of_release_order_kafka*

- Section  7.7: OMO-2121 - Decide Kafka topic and format EFC ACL will consume from for EFC processing

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2121, Ship to Home Phase 5

- Description
*As* the boundary between Store Fulfillment and the EFC ACL
*I want to* Decide Kafka topic and format EFC ACL will consume from for EFC processing
*Because* we need to determine if we need a new topic or use an existing one for EFC processing

*This spike is ready for acceptance when:*
 # We decide if there is an existing topic/message we can utilize that Store Fulfillment publishes to, that the EFC ACL can consume from to send messages to the EFCs
 ## Consider the following:
 ### Will we need to make a call back to Order Create or Store Fulfillment for Order/Shipment information ([https://docs.google.com/spreadsheets/d/1LZ7nvTMLnTweTssJO_BHVqU4pk31ZgmdlwlzPexuSZo/edit#gid=0)]
 ### Would error retries on this existing topic cause any issues by current consumers
 ### WIll the EFC ACL have to do filtering on the messages published to this topic? If so, do we think the filtering will impact performance?
 # If there is not a topic yet, we propose a name for the new topic that would interface between Store Fulfillment and the EFC ACL and propose the message structure too
 # Create a story for Store Fulfillment to publish to the new topic (if applicable), and EFC ACL to consume from whatever topic is chosen.

*Notes & Assumptions:*
 * [https://docs.google.com/spreadsheets/d/1LZ7nvTMLnTweTssJO_BHVqU4pk31ZgmdlwlzPexuSZo/edit#gid=0] Link to boundary request mapping
 * Master Miro Reference: [https://miro.com/app/board/uXjVPjzxRLY=/?moveToWidget=3458764575833473448&cot=14] 

- Section  7.7: OMO-2117 - Investigate Red/Yellow fields for EFC6 Mapping

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2117, Ship to Home Phase 5

- Description
*As* the owner of ship 2 home orders
*I want to* Investigate Red/Yellow fields for EFC6 Mapping
*Because* we need to publish data to EFC6

*This spike is ready for acceptance when:*
 # Work with OMS and/or Customer Fulfillment to understand red/yellow fields required by EFC6:
 ## priority
 ## releaseNo
 ## extnPickTicketNo
 ## extnRG
 ## extnWMSInstType
 ## itemDesc
 # Based on 1. create up to two stories:
 ## story for providing the yellow/red fields that we should own internally
 ## story to have our EFC ACL application handle any fields we should not be the owner of

*Notes & Assumptions:*
 * Document with list of required red/yellow fields for EFC6: https://docs.google.com/spreadsheets/d/1LZ7nvTMLnTweTssJO_BHVqU4pk31ZgmdlwlzPexuSZo/edit#gid=0

- Section  7.7: OMO-2107 - Understand the message that goes to all EFCs

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2107, Ship to Home Phase 5

- Description
*We should* analyze all the messages that goes to all EFCs
*Because* we want to identify a consistent way to send order message to all EFCs.

*We are done when* 
 # Differences are identified and documented
 # A design approach is proposed on how we would send the messages to all EFCs regardless of the version of the warehouse management system. e.g. Do we want to move existing from XML to Json format? Do we need to build a ACL to do the conversion? Do we need to work with Customer Fulfillment about providing information that isn't our domain (Item data via PICs)

Notes:

1. This spike isn't about understanding a full mapping for each EFC between OMS and EFCs, it is focused on commonality in message structure and format

- Section  7.7: OMO-2091 - Understand changes to populating OverallTotals for Ship To Home orders

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2091, Ship to Home Phase 5

- Description
*As* the OLM team
*I want to* verify if we need to change how we populate our fields within OverallTotals on the Order model
*Because* we need to find necessary changes to take on STH orders.

*This spike is ready for acceptance when:*
 # We have clarity on the calculations for OverallTotals for ship to home orders
 # If work is small, make changes so overallTotals is working with a STH order

*Notes & Assumptions:*
 * [https://confluence.kohls.com:8443/display/OE/OMO-1975%3A+EFC+Post-Cancellation+GIV+Interactions] – page for EFC information like shipNode.
 * Currently there are several fields in OverallTotals that stay set to 0, still spike is to identify if we finally need to add calculation logic for some of these currently zeroed out fields
 * The OTS OrderDetails call would be a good mechanism to understand how Sterling populates OverallTotals for s2h, as most/all of those fields are exposed on that endpoint

- Section  7.7: OMO-2088 - Understanding Mapping for EFC6 with Customer Fulfillment

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2088, Ship to Home Phase 5

- Description
*As the* OLM system,

*I want to* understand the mapping process for EFC6 with Customer Fulfillment,

*because* it is crucial to have seamless integration for fulling S2H orders

 

*This spike is ready for acceptance when:*
 # We have a clear understanding of how EFC6 interfaces with the Customer Fulfillment system.
 # A detailed mapping of the data flow and processes between EFC6 and Customer Fulfillment has been documented.

- Section  7.7: OMO-2062 - Research Existing Checkout team integration with TVS

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2062, Ship to Home Phase 5

- Description
*As* the OLM system,

*I want to* investigate the Checkout team's method for TVS calls during repricing,

*Because* we need to understand their process to create a direct TVS integration without splitting order lines.

*Acceptance Criteria:*
 # Understand the Checkout team's method for TVS calls.
 # Identify why they split order lines.
 # Propose a direct TVS call method avoiding line splits.

*Notes:*
 * Aim to simplify our process.
 * Work with the Checkout team for insights.
 * Document findings.
 

- Section  7.7: OMO-2053 - Handling Earned KC Values in S2H Orders

- Introduction:
This is a child story of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, story, OMO-2053, Ship to Home Phase 5

- Description
*As an* OLM Engineer,
*I want to* correctly capture earned KC values in S2H orders,
*So that* customers receive accurate invoices

*Acceptance Criteria 1:*
 * *Given* a S2H order is processed without the earned KC value,
 * *When* a second message with earned KC information arrives,
 * *Then* the OLM system should combine this data to complete the order invoice.

*Acceptance Criteria 2:*
 * *Given* both the initial S2H order and the earned KC information are received,
 * *When* these are processed by OLM,
 * *Then* the invoice should accurately reflect the earned KC.

*Notes:*
 * Need to confirm with Chinmaya regarding the separate KC value message for S2H orders.
 * Coordination with the Checkout team might be necessary for message handling.

- Section  7.7: OMO-2048 - Integrate with Other EFCs (Phase X)

- Introduction:
This is a child story of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, story, OMO-2048, Ship to Home Phase 5

- Description
*As the OLM Sourcing Facade,*

*I want to* integrate with other EFCs,

*So that* I can fulfill orders from multiple EFCs effectively.

*Acceptance Criteria 1:*

*Given* the OLM Sourcing Facade is operational,

*When* it receives an order,

*Then* it should be able to select the most suitable EFCs for fulfillment based on current sourcing criteria.

*Notes & Assumptions:*
 * Ensure seamless integration with other EFCs without disrupting existing processes.
 * Coordination with EFCs is essential for consistent fulfillment strategies.

- Section  7.7: OMO-2047 - Develop Scheduler for Auto-Cancelling Orders with Delayed EFC Updates

- Introduction:
This is a child story of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, story, OMO-2047, Ship to Home Phase 5

- Description
*Description:*
*As the* OLM system,
*I want to* build a scheduler that automatically cancels orders if there are no updates from EFC after a specified number of days,
*So that* the system remains efficient and responsive to delays.

*Acceptance Criteria 1:*
*Given* an order has not received any updates from EFC within the specified timeframe,
*When* this time limit is reached,
*Then* the scheduler should automatically initiate cancellation of the order.

*Acceptance Criteria 2:*
*Given* the scheduler is operational,
*When* it detects an order eligible for cancellation,
*Then* it should process the cancellation and update the order status accordingly.

*Notes & Assumptions:*
 * The timeframe for awaiting updates (x days) should be determined based on average processing times and customer service standards.
 * The scheduler should be robust and reliable, ensuring no false cancellations occur.

- Section  7.7: OMO-2046 - Identifying Automatic Order Cancellation After Delayed Updates from EFC

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2046, Ship to Home Phase 5

- Description
*Description:*
*As the* OLM system,
*I want to* identify a method to automatically cancel orders after a certain number of days if no updates are received from EFC,
*Because* timely updates are crucial, and long delays need a response.

*This spike is ready for acceptance when:*
 * *We have a clear strategy* for automatically cancelling orders that lack updates from EFC after a specified time.
 * *We have documented* the triggers and conditions when these cancellations occur.

*Notes & Assumptions:*
 * The time frame for awaiting updates from EFC before triggering cancellation needs to be reasonable and aligned with customer expectations.
 * Ensure that the mechanism for this process is reliable and integrates smoothly with the existing OLM system.

- Section  7.7: OMO-2045 - Enhance Cancel Shipment Processor for EFC Confirmations

- Introduction:
This is a child story of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, story, OMO-2045, Ship to Home Phase 5

- Description
*Description:*
*As the* Cancel Shipment Processor,
*I want to* receive and process shipment cancellation confirmations from EFC,
*So that* I can keep the order status up to date and manage cancellations accurately.

*Acceptance Criteria 1:*
*Given* a cancellation confirmation is received from EFC,
*When* this information is processed,
*Then* I should accurately update the order's cancellation status.

*Acceptance Criteria 2:*
*Given* the order status needs to be updated,
*When* I process the EFC confirmation,
*Then* it should ensure the system reflects the correct current status of the order.

*Notes & Assumptions:*
 * The process should be prompt to avoid any discrepancies in order status.
 * The updates should be accurately reflected across the system for consistency.

- Section  7.7: OMO-2043 - XML Converter Update for EFC6 Orders

- Introduction:
This is a child story of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, story, OMO-2043, Ship to Home Phase 5

- Description
*As the* OLM team,
*I want to* explore how the XML Converter should be updated for EFC6,
*So that* it converts any new entities or attributes in existing entities correctly

*Acceptance:*
 * Make changes for handling STH Orders:
 ** Hardcode shipNode to EFC6's shipNode (849)
 ** Set fulfillmentMethod to STH when not Bopus or VGC
 * Clarify these changes with STH fulfillment as it relates to EFC6 (if this is applicable to the specific values for EFCs)

- Section  7.7: OMO-2042 - VGC Activator Review for EFC6 Compatibility

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2042, Ship to Home Phase 5

- Description
*Description:*
*As the* OLM team,
*I want to* assess the VGC Activator's functionality with EFC6 orders,
*So that* it activates gift cards effectively in this context.

*Acceptance:*
 * Document changes needed for the VGC Activator in the EFC6 setup.
 * Describe how it integrates with EFC6 order processing.

- Section  7.7: OMO-2041 - Enhancing Store Fulfillment for EFC6

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2041, Ship to Home Phase 5

- Description
*Description:*
*As the* OLM team,
*I want to* determine what needs to change in Store Fulfillment for EFC6 orders,
*So that* store-based fulfillment aligns with EFC6 needs.

*Acceptance:*
 * Identify adjustments for the Store Fulfillment service for EFC6 order handling.
 * Clarify its operational role with EFC6.
 * Create any follow-up stories or spikes

- Section  7.7: OMO-2040 - Store Commerce Proxy Adaptation for EFC6

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2040, Ship to Home Phase 5

- Description
*Description:*
*As the* OLM team,
*I want to* figure out changes for the Store Commerce Proxy with EFC6 orders,
*So that* it facilitates smooth EFC6 transactions.

*Acceptance:*
 * List required modifications for the Store Commerce Proxy in the EFC6 environment.
 * Explain how it functions with EFC6 order processing.

- Section  7.7: OMO-2039 - Store Commerce ACL Alignment with EFC6

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2039, Ship to Home Phase 5

- Description
*Description:*
*As the* OLM team,
*I want to* identify how the Store Commerce ACL should be tailored for EFC6,
*So that* it supports EFC6 orders effectively.

*Acceptance:*
 * Write down necessary updates for the Store Commerce ACL in EFC6 scenarios.
 * Describe its role in EFC6 order management.

- Section  7.7: OMO-2038 - Shipment Fulfillment Processor Update for EFC6

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2038, Ship to Home Phase 5

- Description
*Description:*
*As the* OLM team,
*I want to* explore adjustments needed in the Shipment Fulfillment Processor for EFC6,
*So that* it processes EFC6 shipments.

*Acceptance:*
 * Document changes for handling EFC6 shipments in the Shipment Fulfillment Processor.
 * Clarify its integration with EFC6 fulfillment.

- Section  7.7: OMO-2037 - Order Create Process Review for EFC6

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2037, Ship to Home Phase 5

- Description
*Description:*
*As the* OLM team,
*I want to* assess the Order Create microservice for updates with EFC6 orders,
*So that* order creation aligns with EFC6's requirements.

*Acceptance:*
 * Detail necessary changes for creating orders in the EFC6 framework.
 * Explain how it interacts with the EFC6 fulfillment process.

*Notes:*
 # Link to the STH flow
 # Contacts for the customer fulfillment team: [~TKA02PE] (PM)

- Section  7.7: OMO-2036 - Updating OLM Payment Cancel for EFC6

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2036, Ship to Home Phase 5

- Description
*Description:*
*As the* OLM team,
*I want to* determine how the OLM Payment Cancel needs to be modified for EFC6 orders,
*So that* payment cancellations are handled correctly.

*Acceptance:*
 * List changes for the OLM Payment Cancel service in the context of EFC6.
 * Describe its function in the EFC6 payment process.

- Section  7.7: OMO-2035 - OLM Gateway Compatibility with EFC6

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2035, Ship to Home Phase 5

- Description
*Description:*
*As the* OLM team,
*I want to* identify necessary changes in the OLM Gateway for EFC6 integration,
*So that* it functions smoothly with EFC6 order handling.

*Acceptance:*
 * Outline needed updates for the OLM Gateway in the EFC6 setup.
 * Clarify its role in managing EFC6 orders.

- Section  7.7: OMO-2034 - Adapting Invoice for EFC6 Orders

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2034, Ship to Home Phase 5

- Description
*Description:*
*As the* OLM team,
*I want to* identify updates needed in the Invoice microservice for EFC6 order processing,
*So that* invoicing is accurate and timely for these orders.

*Acceptance:*
 * Document required modifications for EFC6-related invoicing.
 * Explain how it will integrate with the EFC6 order process.

- Section  7.7: OMO-2033 - Tailoring Hard Totals for EFC6 Order Processing

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2033, Ship to Home Phase 5

- Description
*As the* OLM team,
*I want to* pinpoint what needs to be changed in Hard Totals for EFC6 orders,
*So that* all calculations remain accurate.

*Acceptance:*
 * Identify adjustments for accurate total calculations in EFC6 orders.
 * Describe how it will work with EFC6's order system.

- Section  7.7: OMO-2032 - Checking Expire Shipment Processor with EFC6

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2032, Ship to Home Phase 5

- Description
*As the* OLM team,
*I want to* figure out changes for the Expire Shipment Processor in the EFC6 context,
*So that* it handles order expirations correctly.

*Acceptance:*
 * Write down changes for managing EFC6 order expirations.
 * Clarify its integration with EFC6's fulfillment process.

- Section  7.7: OMO-2031 - Error Reprocessor's Readiness for EFC6 Orders

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2031, Ship to Home Phase 5

- Description
*Description:*
*As the* OLM team,
*I want to* evaluate the Error Reprocessor with EFC6 orders,
*So that* any reprocessing is done without issues.

*Acceptance:*
 * Ensure it reprocesses EFC6 order errors effectively.
 * Pinpoint areas for enhancement.

- Section  7.7: OMO-2030 - Error Consumer Effectiveness in EFC6-Integrated Environment

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2030, Ship to Home Phase 5

- Description
*As the* OLM development team,
*I want to* evaluate the Error Consumer microservice within the context of EFC6 integration,
*Because* robust error handling is necessary for the smooth operation of limited order processing.

*This spike is ready for acceptance when:*
 * *We have assessed* the Error Consumer's capability to manage errors in an EFC6-centric workflow.
 * *We have documented* any modifications needed to ensure its effectiveness.

- Section  7.7: OMO-2029 - Customer Notification Compatibility with EFC6 Order Processing

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2029, Ship to Home Phase 5

- Description
*Description:*
*As the* OLM development team,
*I want to* assess the Customer Notification microservice for compatibility with EFC6 order processing,
*Because* it's essential to maintain effective customer communication during limited order fulfillment.

*This spike is ready for acceptance when:*
 * *We ensure* the Customer Notification system functions correctly with the order flow involving EFC6.
 * *We identify* any adjustments needed for working with the new fulfillment process.

- Section  7.7: OMO-2028 - Alignment of Cancel Shipment Processor with EFC6 Fulfillment

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-2028, Ship to Home Phase 5

- Description
*As the* OLM development team,
*I want to* make sure the Cancel Shipment Processor microservice aligns with EFC6's fulfillment processes,
*Because* accurate cancellation processing is critical when using OLM to fulfill limited orders from EFC6.

*This spike is ready for acceptance when:*
 * *We have verified* that the Cancel Shipment Processor can handle cancellations without re-sourcing or significant customer impact.
 * *We have outlined* any necessary updates to integrate seamlessly with EFC6.

- Section  7.7: OMO-2027 - Integration with EFC6

- Introduction:
This is a child story of epic OMO-2008, "Ship to Home Phase 5"

keywords are: efc6, child, story, OMO-2027, Ship to Home Phase 5

- Description
*Description:*

*As the* EFC ACL,

*I want to* integrate with EFC6,

*So that* we can efficiently manage and process these orders within the set capacity.

 

*Acceptance Criteria 1:*

*Given* a shipment is identified for EFC6 fulfillment,

*When* it is sent to the EFC ACL,

*Then* the message should be converted into the XML format expected by EFC6* (see note)

 

*Acceptance Criteria 2:*

*Given* a shipment is sent to the EFC ACL,

*After* it is converted to the expected XML format

*And* a newly added feature flag disables publishing to EFCs**

*Then* no message should be published to the kafka topic for EFC6 (we want prod to be like this for now)

 

*Acceptance Criteria 3:*

*Given* a shipment is sent to the EFC ACL,

*After* it is converted to the expected XML format

*And* a newly added feature flag is enabled, but *does not* list publishing to EFC6**

*Then* no message should be published to the kafka topic for EFC6

 

*Acceptance Criteria 4:*

*Given* a shipment is sent to the EFC ACL,

*After* it is converted to the expected XML format

*And* a newly added feature flag is enabled, and *does* list publishing to EFC6**

*Then* a message should be published to the kafka topic for EFC6 (we want staging like this for now)

*Notes & Assumptions:*
 * Integration should be tested for accuracy
 * https://jiradc.kohls.com:8443/browse/OMO-2122 should be done before working on this, it will have connection details
 * This also cannot be worked on until we have an EFC ACL, with messages being published to it from our core OLM system
 * *Use this doc to find 'green fields' required for EFC6 [https://docs.google.com/spreadsheets/d/1LZ7nvTMLnTweTssJO_BHVqU4pk31ZgmdlwlzPexuSZo/edit#gid=0]
 * **The idea is to have something similar to the skip-repricing feature flag found on order create, where not only can you enable/disable the feature, you can also enable it for specific EFCs (for now EFC6)

- Section  7.7: OMO-1989 - Assess Feasibility of 30-Min Grace Period in OLM

- Introduction:
This is a child spike of epic OMO-2008, "Ship to Home Phase 5"

keywords are: child, spike, OMO-1989, Ship to Home Phase 5

- Description
*As an OLM Engineer,*

*I want to* review the Self Service use case,

*So that* I can understand the feasibility of moving the 30-minute grace period from Checkout to OLM.

{*}Acceptance Criteria{*}:
 * *Given* the current implementation of the 30-minute grace period in the Checkout system,
 * *When* reviewing the Self Service use case,
 * *Then* assess the technical feasibility of integrating this grace period into OLM.

{*}Notes & Assumptions{*}:
 * The review should consider the technical implications and challenges.
 * We should work with the Checkout team to maintain customer experience and order processing
 * We should understand at a high level what other downstream integrations are impacted assuming control of this grace period


